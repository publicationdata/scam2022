{"type":{"0":"W","1":"W","2":"R","3":"R","4":"R","5":"W","6":"W","7":"R","8":"W","9":"W","10":"W","11":"W","12":"W","13":"W","14":"W","15":"W","16":"W","17":"W","18":"W","19":"W","20":"W","21":"W","22":"W","23":"W","24":"W","25":"W","26":"C","27":"W","28":"W","29":"W","30":"W","31":"R","32":"R","33":"R","34":"R","35":"R"},"module":{"0":"audio","1":"audio","2":"audio","3":"audio","4":"data_load","5":"eval1","6":"eval2","7":"hparam","8":"models","9":"models","10":"models","11":"models","12":"models","13":"models","14":"models","15":"models","16":"models","17":"models","18":"models","19":"models","20":"models","21":"models","22":"models","23":"models","24":"modules","25":"modules","26":"tensorpack_extension","27":"utils","28":"utils","29":"utils","30":"utils","31":"utils","32":"utils","33":"utils","34":"utils","35":"utils"},"obj":{"0":"write_wav","1":"prepro_audio","2":"dynamic_range_compression","3":"dynamic_range_compression","4":"get_mfccs_and_phones","5":"eval","6":"eval","7":"load_hparam","8":"Net1._build_graph","9":"Net1._build_graph","10":"Net1._build_graph","11":"Net1._build_graph","12":"Net1._build_graph","13":"Net1._build_graph","14":"Net2._build_graph","15":"Net2._build_graph","16":"Net2._build_graph","17":"Net2._build_graph","18":"Net2._build_graph","19":"Net2._build_graph","20":"Net2._build_graph","21":"Net2._build_graph","22":"Net2._build_graph","23":"Net2._build_graph","24":"normalize","25":"cbhg","26":"FilterGradientVariables._process","27":"normalize_0_1","28":"normalize_0_1","29":"denormalize_0_1","30":"denormalize_0_1","31":"","32":"","33":"","34":"","35":""},"lnum":{"0":17,"1":93,"2":307,"3":309,"4":86,"5":27,"6":25,"7":8,"8":25,"9":25,"10":28,"11":28,"12":28,"13":29,"14":94,"15":94,"16":94,"17":99,"18":101,"19":102,"20":106,"21":107,"22":106,"23":109,"24":38,"25":304,"26":61,"27":33,"28":33,"29":38,"30":38,"31":1,"32":1,"33":1,"34":1,"35":1},"col":{"0":29,"1":43,"2":7,"3":9,"4":16,"5":0,"6":0,"7":13,"8":8,"9":22,"10":12,"11":23,"12":35,"13":8,"14":8,"15":21,"16":34,"17":8,"18":12,"19":8,"20":12,"21":8,"22":28,"23":8,"24":14,"25":9,"26":29,"27":26,"28":31,"29":32,"30":37,"31":0,"32":0,"33":0,"34":0,"35":0},"filename":{"0":"audio.py","1":"audio.py","2":"audio.py","3":"audio.py","4":"data_load.py","5":"eval1.py","6":"eval2.py","7":"hparam.py","8":"models.py","9":"models.py","10":"models.py","11":"models.py","12":"models.py","13":"models.py","14":"models.py","15":"models.py","16":"models.py","17":"models.py","18":"models.py","19":"models.py","20":"models.py","21":"models.py","22":"models.py","23":"models.py","24":"modules.py","25":"modules.py","26":"tensorpack_extension.py","27":"utils.py","28":"utils.py","29":"utils.py","30":"utils.py","31":"utils.py","32":"utils.py","33":"utils.py","34":"utils.py","35":"utils.py"},"symbol":{"0":"redefined-builtin","1":"redefined-builtin","2":"literal-comparison","3":"literal-comparison","4":"consider-using-with","5":"redefined-builtin","6":"redefined-builtin","7":"consider-using-with","8":"attribute-defined-outside-init","9":"attribute-defined-outside-init","10":"attribute-defined-outside-init","11":"attribute-defined-outside-init","12":"attribute-defined-outside-init","13":"attribute-defined-outside-init","14":"attribute-defined-outside-init","15":"attribute-defined-outside-init","16":"attribute-defined-outside-init","17":"attribute-defined-outside-init","18":"attribute-defined-outside-init","19":"attribute-defined-outside-init","20":"attribute-defined-outside-init","21":"attribute-defined-outside-init","22":"attribute-defined-outside-init","23":"attribute-defined-outside-init","24":"redefined-builtin","25":"redefined-builtin","26":"len-as-condition","27":"redefined-builtin","28":"redefined-builtin","29":"redefined-builtin","30":"redefined-builtin","31":"duplicate-code","32":"duplicate-code","33":"duplicate-code","34":"duplicate-code","35":"duplicate-code"},"text":{"0":"Redefining built-in 'format'","1":"Redefining built-in 'format'","2":"Comparison to literal","3":"Comparison to literal","4":"Consider using 'with' for resource-allocating operations","5":"Redefining built-in 'eval'","6":"Redefining built-in 'eval'","7":"Consider using 'with' for resource-allocating operations","8":"Attribute 'x_mfccs' defined outside __init__","9":"Attribute 'y_ppgs' defined outside __init__","10":"Attribute 'ppgs' defined outside __init__","11":"Attribute 'preds' defined outside __init__","12":"Attribute 'logits' defined outside __init__","13":"Attribute 'cost' defined outside __init__","14":"Attribute 'x_mfcc' defined outside __init__","15":"Attribute 'y_spec' defined outside __init__","16":"Attribute 'y_mel' defined outside __init__","17":"Attribute 'net1' defined outside __init__","18":"Attribute 'ppgs' defined outside __init__","19":"Attribute 'ppgs' defined outside __init__","20":"Attribute 'pred_spec' defined outside __init__","21":"Attribute 'pred_spec' defined outside __init__","22":"Attribute 'pred_mel' defined outside __init__","23":"Attribute 'cost' defined outside __init__","24":"Redefining built-in 'type'","25":"Redefining built-in 'input'","26":"Do not use `len(SEQUENCE)` without comparison to determine if a sequence is empty","27":"Redefining built-in 'max'","28":"Redefining built-in 'min'","29":"Redefining built-in 'max'","30":"Redefining built-in 'min'","31":"Similar lines in 2 files\n==convert:92\n==eval2:33\n    session_inits = []\n    if ckpt2:\n        session_inits.append(SaverRestore(ckpt2))\n    if ckpt1:\n        session_inits.append(SaverRestore(ckpt1, ignore=['global_step']))\n    pred_conf = PredictConfig(\n        model=model,\n        input_names=get_eval_input_names(),\n        output_names=get_eval_output_names(),\n        session_init=ChainInit(session_inits))\n    predictor = OfflinePredictor(pred_conf)\n","32":"Similar lines in 3 files\n==convert:135\n==eval2:57\n==train2:82\n    arguments = parser.parse_args()\n    return arguments\n\n\nif __name__ == '__main__':\n    args = get_arguments()\n    hp.set_hparam_yaml(args.case2)\n    logdir_train1 = '{}\/{}\/train1'.format(hp.logdir_path, args.case1)\n    logdir_train2 = '{}\/{}\/train2'.format(hp.logdir_path, args.case2)\n","33":"Similar lines in 2 files\n==audio:72\n==data_load:58\n    if wav.ndim == 1:\n        wav = wav[start:end]\n    else:\n        wav = wav[:, start:end]\n    return wav\n\n","34":"Similar lines in 2 files\n==train1:10\n==train2:12\nfrom tensorpack.tfutils.sessinit import SaverRestore\nfrom tensorpack.train.interface import TrainConfig\nfrom tensorpack.train.interface import launch_train_with_config\nfrom tensorpack.train.trainers import SyncMultiGPUTrainerReplicated\nfrom tensorpack.utils import logger","35":"Similar lines in 2 files\n==convert:130\n==train2:75\ndef get_arguments():\n    parser = argparse.ArgumentParser()\n    parser.add_argument('case1', type=str, help='experiment case name of train1')\n    parser.add_argument('case2', type=str, help='experiment case name of train2')\n    parser.add_argument('-ckpt', help='checkpoint to load model.')"},"number":{"0":"W0622","1":"W0622","2":"R0123","3":"R0123","4":"R1732","5":"W0622","6":"W0622","7":"R1732","8":"W0201","9":"W0201","10":"W0201","11":"W0201","12":"W0201","13":"W0201","14":"W0201","15":"W0201","16":"W0201","17":"W0201","18":"W0201","19":"W0201","20":"W0201","21":"W0201","22":"W0201","23":"W0201","24":"W0622","25":"W0622","26":"C1801","27":"W0622","28":"W0622","29":"W0622","30":"W0622","31":"R0801","32":"R0801","33":"R0801","34":"R0801","35":"R0801"},"linter":{"0":"pylint","1":"pylint","2":"pylint","3":"pylint","4":"pylint","5":"pylint","6":"pylint","7":"pylint","8":"pylint","9":"pylint","10":"pylint","11":"pylint","12":"pylint","13":"pylint","14":"pylint","15":"pylint","16":"pylint","17":"pylint","18":"pylint","19":"pylint","20":"pylint","21":"pylint","22":"pylint","23":"pylint","24":"pylint","25":"pylint","26":"pylint","27":"pylint","28":"pylint","29":"pylint","30":"pylint","31":"pylint","32":"pylint","33":"pylint","34":"pylint","35":"pylint"},"lines_amount":{"0":372,"1":372,"2":372,"3":372,"4":177,"5":73,"6":70,"7":70,"8":156,"9":156,"10":156,"11":156,"12":156,"13":156,"14":156,"15":156,"16":156,"17":156,"18":156,"19":156,"20":156,"21":156,"22":156,"23":156,"24":324,"25":324,"26":65,"27":94,"28":94,"29":94,"30":94,"31":94,"32":94,"33":94,"34":94,"35":94},"commit":{"0":"983c275d669e8f6c935b08582063f8aaaecff48e","1":"983c275d669e8f6c935b08582063f8aaaecff48e","2":"983c275d669e8f6c935b08582063f8aaaecff48e","3":"983c275d669e8f6c935b08582063f8aaaecff48e","4":"983c275d669e8f6c935b08582063f8aaaecff48e","5":"983c275d669e8f6c935b08582063f8aaaecff48e","6":"983c275d669e8f6c935b08582063f8aaaecff48e","7":"983c275d669e8f6c935b08582063f8aaaecff48e","8":"983c275d669e8f6c935b08582063f8aaaecff48e","9":"983c275d669e8f6c935b08582063f8aaaecff48e","10":"983c275d669e8f6c935b08582063f8aaaecff48e","11":"983c275d669e8f6c935b08582063f8aaaecff48e","12":"983c275d669e8f6c935b08582063f8aaaecff48e","13":"983c275d669e8f6c935b08582063f8aaaecff48e","14":"983c275d669e8f6c935b08582063f8aaaecff48e","15":"983c275d669e8f6c935b08582063f8aaaecff48e","16":"983c275d669e8f6c935b08582063f8aaaecff48e","17":"983c275d669e8f6c935b08582063f8aaaecff48e","18":"983c275d669e8f6c935b08582063f8aaaecff48e","19":"983c275d669e8f6c935b08582063f8aaaecff48e","20":"983c275d669e8f6c935b08582063f8aaaecff48e","21":"983c275d669e8f6c935b08582063f8aaaecff48e","22":"983c275d669e8f6c935b08582063f8aaaecff48e","23":"983c275d669e8f6c935b08582063f8aaaecff48e","24":"983c275d669e8f6c935b08582063f8aaaecff48e","25":"983c275d669e8f6c935b08582063f8aaaecff48e","26":"983c275d669e8f6c935b08582063f8aaaecff48e","27":"983c275d669e8f6c935b08582063f8aaaecff48e","28":"983c275d669e8f6c935b08582063f8aaaecff48e","29":"983c275d669e8f6c935b08582063f8aaaecff48e","30":"983c275d669e8f6c935b08582063f8aaaecff48e","31":"983c275d669e8f6c935b08582063f8aaaecff48e","32":"983c275d669e8f6c935b08582063f8aaaecff48e","33":"983c275d669e8f6c935b08582063f8aaaecff48e","34":"983c275d669e8f6c935b08582063f8aaaecff48e","35":"983c275d669e8f6c935b08582063f8aaaecff48e"},"repo":{"0":"andabi\/deep-voice-conversion","1":"andabi\/deep-voice-conversion","2":"andabi\/deep-voice-conversion","3":"andabi\/deep-voice-conversion","4":"andabi\/deep-voice-conversion","5":"andabi\/deep-voice-conversion","6":"andabi\/deep-voice-conversion","7":"andabi\/deep-voice-conversion","8":"andabi\/deep-voice-conversion","9":"andabi\/deep-voice-conversion","10":"andabi\/deep-voice-conversion","11":"andabi\/deep-voice-conversion","12":"andabi\/deep-voice-conversion","13":"andabi\/deep-voice-conversion","14":"andabi\/deep-voice-conversion","15":"andabi\/deep-voice-conversion","16":"andabi\/deep-voice-conversion","17":"andabi\/deep-voice-conversion","18":"andabi\/deep-voice-conversion","19":"andabi\/deep-voice-conversion","20":"andabi\/deep-voice-conversion","21":"andabi\/deep-voice-conversion","22":"andabi\/deep-voice-conversion","23":"andabi\/deep-voice-conversion","24":"andabi\/deep-voice-conversion","25":"andabi\/deep-voice-conversion","26":"andabi\/deep-voice-conversion","27":"andabi\/deep-voice-conversion","28":"andabi\/deep-voice-conversion","29":"andabi\/deep-voice-conversion","30":"andabi\/deep-voice-conversion","31":"andabi\/deep-voice-conversion","32":"andabi\/deep-voice-conversion","33":"andabi\/deep-voice-conversion","34":"andabi\/deep-voice-conversion","35":"andabi\/deep-voice-conversion"}}