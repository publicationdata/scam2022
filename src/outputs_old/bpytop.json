{"type":{"0":"W","1":"W","2":"W","3":"R","4":"C","5":"C","6":"C","7":"C","8":"C","9":"C","10":"C","11":"C","12":"C","13":"C","14":"C","15":"R","16":"R","17":"C","18":"C","19":"R","20":"R"},"module":{"0":"bpytop","1":"bpytop","2":"bpytop","3":"bpytop","4":"bpytop","5":"bpytop","6":"bpytop","7":"bpytop","8":"bpytop","9":"bpytop","10":"bpytop","11":"bpytop","12":"bpytop","13":"bpytop","14":"bpytop","15":"bpytop","16":"bpytop","17":"bpytop","18":"bpytop","19":"bpytop","20":"bpytop"},"obj":{"0":"Raw.__exit__","1":"Raw.__enter__","2":"Nonblocking.__enter__","3":"Banner.draw","4":"Graph._create","5":"CpuBox.battery_activity","6":"CpuBox.battery_activity","7":"CpuBox.battery_activity","8":"CpuCollector._collect_temps","9":"CpuCollector._collect_temps","10":"CpuCollector._collect_temps","11":"CpuCollector._collect_temps","12":"CpuCollector._collect_temps","13":"CpuCollector._collect_temps","14":"CpuCollector._collect_temps","15":"CpuCollector._collect_temps","16":"MemCollector._collect","17":"ProcCollector._collect","18":"Menu.options","19":"Menu.options","20":"main"},"lnum":{"0":777,"1":775,"2":786,"3":1387,"4":1518,"5":1839,"6":1866,"7":1868,"8":3101,"9":3103,"10":3109,"11":3111,"12":3134,"13":3136,"14":3228,"15":3079,"16":3268,"17":3776,"18":4797,"19":4810,"20":5536},"col":{"0":20,"1":2,"2":2,"3":1,"4":3,"5":47,"6":29,"7":31,"8":10,"9":10,"10":11,"11":11,"12":12,"13":12,"14":3,"15":1,"16":1,"17":7,"18":33,"19":87,"20":0},"filename":{"0":"bpytop.py","1":"bpytop.py","2":"bpytop.py","3":"bpytop.py","4":"bpytop.py","5":"bpytop.py","6":"bpytop.py","7":"bpytop.py","8":"bpytop.py","9":"bpytop.py","10":"bpytop.py","11":"bpytop.py","12":"bpytop.py","13":"bpytop.py","14":"bpytop.py","15":"bpytop.py","16":"bpytop.py","17":"bpytop.py","18":"bpytop.py","19":"bpytop.py","20":"bpytop.py"},"symbol":{"0":"redefined-builtin","1":"attribute-defined-outside-init","2":"attribute-defined-outside-init","3":"inconsistent-return-statements","4":"consider-using-enumerate","5":"singleton-comparison","6":"singleton-comparison","7":"singleton-comparison","8":"singleton-comparison","9":"singleton-comparison","10":"singleton-comparison","11":"singleton-comparison","12":"singleton-comparison","13":"singleton-comparison","14":"consider-using-enumerate","15":"too-many-branches","16":"too-many-branches","17":"singleton-comparison","18":"len-as-condition","19":"consider-using-in","20":"too-many-branches"},"text":{"0":"Redefining built-in 'type'","1":"Attribute 'original_stty' defined outside __init__","2":"Attribute 'orig_fl' defined outside __init__","3":"Either all return statements in a function should return an expression, or none of them should.","4":"Consider using enumerate instead of iterating with range and len","5":"Comparison 'psutil.sensors_battery() == None' should be 'psutil.sensors_battery() is None'","6":"Comparison 'getattr(psutil.sensors_battery(), 'power_plugged', None) == True' should be 'getattr(psutil.sensors_battery(), 'power_plugged', None) is True' if checking for the singleton value True, or 'bool(getattr(psutil.sensors_battery(), 'power_plugged', None))' if testing for truthiness","7":"Comparison 'getattr(psutil.sensors_battery(), 'power_plugged', None) == False' should be 'getattr(psutil.sensors_battery(), 'power_plugged', None) is False' if checking for the singleton value False, or 'not getattr(psutil.sensors_battery(), 'power_plugged', None)' if testing for falsiness","8":"Comparison 'getattr(entry, 'high', None) != None' should be 'getattr(entry, 'high', None) is not None'","9":"Comparison 'getattr(entry, 'critical', None) != None' should be 'getattr(entry, 'critical', None) is not None'","10":"Comparison 'getattr(entry, 'high', None) != None' should be 'getattr(entry, 'high', None) is not None'","11":"Comparison 'getattr(entry, 'critical', None) != None' should be 'getattr(entry, 'critical', None) is not None'","12":"Comparison 'getattr(entry, 'high', None) != None' should be 'getattr(entry, 'high', None) is not None'","13":"Comparison 'getattr(entry, 'critical', None) != None' should be 'getattr(entry, 'critical', None) is not None'","14":"Consider using enumerate instead of iterating with range and len","15":"Too many branches (16\/12)","16":"Too many branches (16\/12)","17":"Comparison 'det.parent() != None' should be 'det.parent() is not None'","18":"Do not use `len(SEQUENCE)` without comparison to determine if a sequence is empty","19":"Consider merging these comparisons with \"in\" to 'pages in (page, 0)'","20":"Too many branches (16\/12)"},"number":{"0":"W0622","1":"W0201","2":"W0201","3":"R1710","4":"C0200","5":"C0121","6":"C0121","7":"C0121","8":"C0121","9":"C0121","10":"C0121","11":"C0121","12":"C0121","13":"C0121","14":"C0200","15":"R0912","16":"R0912","17":"C0121","18":"C1801","19":"R1714","20":"R0912"},"linter":{"0":"pylint","1":"pylint","2":"pylint","3":"pylint","4":"pylint","5":"pylint","6":"pylint","7":"pylint","8":"pylint","9":"pylint","10":"pylint","11":"pylint","12":"pylint","13":"pylint","14":"pylint","15":"pylint","16":"pylint","17":"pylint","18":"pylint","19":"pylint","20":"pylint"},"lines_amount":{"0":5668,"1":5668,"2":5668,"3":5668,"4":5668,"5":5668,"6":5668,"7":5668,"8":5668,"9":5668,"10":5668,"11":5668,"12":5668,"13":5668,"14":5668,"15":5668,"16":5668,"17":5668,"18":5668,"19":5668,"20":5668},"commit":{"0":"eb50a02028c6bd2daef08ec4dd941c2ab70557cb","1":"eb50a02028c6bd2daef08ec4dd941c2ab70557cb","2":"eb50a02028c6bd2daef08ec4dd941c2ab70557cb","3":"eb50a02028c6bd2daef08ec4dd941c2ab70557cb","4":"eb50a02028c6bd2daef08ec4dd941c2ab70557cb","5":"eb50a02028c6bd2daef08ec4dd941c2ab70557cb","6":"eb50a02028c6bd2daef08ec4dd941c2ab70557cb","7":"eb50a02028c6bd2daef08ec4dd941c2ab70557cb","8":"eb50a02028c6bd2daef08ec4dd941c2ab70557cb","9":"eb50a02028c6bd2daef08ec4dd941c2ab70557cb","10":"eb50a02028c6bd2daef08ec4dd941c2ab70557cb","11":"eb50a02028c6bd2daef08ec4dd941c2ab70557cb","12":"eb50a02028c6bd2daef08ec4dd941c2ab70557cb","13":"eb50a02028c6bd2daef08ec4dd941c2ab70557cb","14":"eb50a02028c6bd2daef08ec4dd941c2ab70557cb","15":"eb50a02028c6bd2daef08ec4dd941c2ab70557cb","16":"eb50a02028c6bd2daef08ec4dd941c2ab70557cb","17":"eb50a02028c6bd2daef08ec4dd941c2ab70557cb","18":"eb50a02028c6bd2daef08ec4dd941c2ab70557cb","19":"eb50a02028c6bd2daef08ec4dd941c2ab70557cb","20":"eb50a02028c6bd2daef08ec4dd941c2ab70557cb"},"repo":{"0":"aristocratos\/bpytop","1":"aristocratos\/bpytop","2":"aristocratos\/bpytop","3":"aristocratos\/bpytop","4":"aristocratos\/bpytop","5":"aristocratos\/bpytop","6":"aristocratos\/bpytop","7":"aristocratos\/bpytop","8":"aristocratos\/bpytop","9":"aristocratos\/bpytop","10":"aristocratos\/bpytop","11":"aristocratos\/bpytop","12":"aristocratos\/bpytop","13":"aristocratos\/bpytop","14":"aristocratos\/bpytop","15":"aristocratos\/bpytop","16":"aristocratos\/bpytop","17":"aristocratos\/bpytop","18":"aristocratos\/bpytop","19":"aristocratos\/bpytop","20":"aristocratos\/bpytop"}}