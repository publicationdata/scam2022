{"type":{"0":"W","1":"R","2":"W","3":"R","4":"R","5":"R","6":"R"},"module":{"0":"app","1":"app","2":"ocrjob","3":"run","4":"run","5":"run","6":"run"},"obj":{"0":"","1":"OCR.POST","2":"","3":"","4":"","5":"","6":""},"lnum":{"0":19,"1":175,"2":9,"3":1,"4":1,"5":1,"6":1},"col":{"0":0,"1":23,"2":0,"3":0,"4":0,"5":0,"6":0},"filename":{"0":"app.py","1":"app.py","2":"ocrjob.py","3":"run.py","4":"run.py","5":"run.py","6":"run.py"},"symbol":{"0":"wildcard-import","1":"consider-using-in","2":"wildcard-import","3":"duplicate-code","4":"duplicate-code","5":"duplicate-code","6":"duplicate-code"},"text":{"0":"Wildcard import config","1":"Consider merging these comparisons with \"in\" to \"billModel in ('', '\u901a\u7528OCR')\"","2":"Wildcard import config","3":"Similar lines in 2 files\n==app:57\n==ocrjob:27\nif ocrFlag=='keras':\n    from crnn.network_keras import CRNN\n    if chineseModel:\n        alphabet = alphabetChinese\n        if LSTMFLAG:\n            ocrModel = ocrModelKerasLstm\n        else:\n            ocrModel = ocrModelKerasDense\n    else:\n        ocrModel = ocrModelKerasEng\n        alphabet = alphabetEnglish\n        LSTMFLAG = True\n","4":"Similar lines in 2 files\n==app:71\n==ocrjob:41\n    from crnn.network_torch import CRNN\n    if chineseModel:\n        alphabet = alphabetChinese\n        if LSTMFLAG:\n            ocrModel = ocrModelTorchLstm\n        else:\n            ocrModel = ocrModelTorchDense\n\n    else:\n        ocrModel = ocrModelTorchEng\n        alphabet = alphabetEnglish\n        LSTMFLAG = True","5":"Similar lines in 2 files\n==app:29\n==ocrjob:19\n        config.gpu_options.allow_growth = True##GPU\u662f\u5426\u53ef\u52a8\u6001\u589e\u52a0\n        K.set_session(tf.Session(config=config))\n        K.get_session().run(tf.global_variables_initializer())\n\n    else:\n        ##CPU\u542f\u52a8\n        os.environ[\"CUDA_VISIBLE_DEVICES\"] = ''\n","6":"Similar lines in 2 files\n==app:22\n==ocrjob:12\n    if GPU:\n        os.environ[\"CUDA_VISIBLE_DEVICES\"] = str(GPUID)\n        import tensorflow as tf\n        from keras import backend as K\n        config = tf.ConfigProto()\n        config.gpu_options.allocator_type = 'BFC'"},"number":{"0":"W0401","1":"R1714","2":"W0401","3":"R0801","4":"R0801","5":"R0801","6":"R0801"},"linter":{"0":"pylint","1":"pylint","2":"pylint","3":"pylint","4":"pylint","5":"pylint","6":"pylint"},"lines_amount":{"0":215,"1":215,"2":68,"3":14,"4":14,"5":14,"6":14},"commit":{"0":"306fb71f7e843183fcb9a8025638e8045a5dfa0c","1":"306fb71f7e843183fcb9a8025638e8045a5dfa0c","2":"306fb71f7e843183fcb9a8025638e8045a5dfa0c","3":"306fb71f7e843183fcb9a8025638e8045a5dfa0c","4":"306fb71f7e843183fcb9a8025638e8045a5dfa0c","5":"306fb71f7e843183fcb9a8025638e8045a5dfa0c","6":"306fb71f7e843183fcb9a8025638e8045a5dfa0c"},"repo":{"0":"chineseocr\/chineseocr","1":"chineseocr\/chineseocr","2":"chineseocr\/chineseocr","3":"chineseocr\/chineseocr","4":"chineseocr\/chineseocr","5":"chineseocr\/chineseocr","6":"chineseocr\/chineseocr"}}