{"type":{"0":"R","1":"W","2":"W","3":"W","4":"W","5":"C","6":"R","7":"R","8":"W","9":"R","10":"R","11":"R","12":"R","13":"R","14":"R","15":"W","16":"W","17":"R","18":"R","19":"C","20":"R","21":"R","22":"R","23":"R","24":"R","25":"R","26":"R","27":"R","28":"W","29":"W","30":"W","31":"W","32":"W","33":"W","34":"W","35":"W","36":"W","37":"W","38":"W","39":"W","40":"W","41":"W","42":"C","43":"C","44":"C","45":"C","46":"C","47":"R","48":"W","49":"W","50":"R","51":"R","52":"W","53":"R","54":"C","55":"W","56":"W","57":"W","58":"W","59":"R","60":"C","61":"R","62":"R","63":"W","64":"C","65":"W","66":"W","67":"R","68":"R","69":"C","70":"C","71":"W","72":"C","73":"C","74":"C","75":"C","76":"R","77":"R","78":"C","79":"C","80":"C","81":"R","82":"C","83":"R","84":"R","85":"R","86":"C","87":"C","88":"C","89":"C","90":"C","91":"R","92":"R","93":"R","94":"R","95":"R","96":"R","97":"W","98":"R","99":"W","100":"R","101":"W","102":"W","103":"W","104":"R","105":"C","106":"C","107":"C","108":"C","109":"C","110":"C","111":"C","112":"R","113":"R","114":"R","115":"R","116":"R","117":"R","118":"W","119":"W","120":"W","121":"R","122":"W","123":"W","124":"C","125":"W","126":"W","127":"R","128":"R","129":"C","130":"C","131":"C","132":"R","133":"W","134":"R","135":"R","136":"C","137":"C","138":"C","139":"C","140":"R","141":"R","142":"W","143":"R","144":"R","145":"C","146":"R","147":"R","148":"R","149":"W","150":"W","151":"W","152":"W","153":"R","154":"R","155":"C","156":"C","157":"R","158":"R","159":"R","160":"R","161":"R","162":"R","163":"R","164":"R","165":"R","166":"R","167":"R","168":"R","169":"R","170":"R","171":"C","172":"R","173":"W","174":"W","175":"R","176":"W","177":"W","178":"R","179":"C","180":"W","181":"R","182":"W","183":"W","184":"R","185":"R","186":"R","187":"W","188":"R","189":"R","190":"W","191":"R","192":"R","193":"R","194":"R","195":"W","196":"W","197":"R","198":"R","199":"R","200":"R","201":"C","202":"C","203":"C","204":"R","205":"C","206":"R","207":"R","208":"R","209":"R","210":"C","211":"C","212":"C","213":"W","214":"W","215":"W","216":"R","217":"R","218":"R","219":"C","220":"C","221":"C","222":"C","223":"R","224":"W","225":"W","226":"C","227":"C","228":"C","229":"W","230":"W","231":"W","232":"R","233":"R","234":"R","235":"R","236":"R","237":"R","238":"R","239":"R","240":"R","241":"R","242":"R","243":"R","244":"R","245":"R","246":"R","247":"R","248":"R","249":"R","250":"R","251":"R","252":"R","253":"R","254":"R","255":"R","256":"R","257":"R","258":"R"},"module":{"0":"Classification_human_or_horse","1":"CliYoutubeDownloader","2":"CliYoutubeDownloader","3":"CliYoutubeDownloader","4":"CliYoutubeDownloader","5":"Credit_Card_Validator","6":"Cricket_score","7":"Delete_Linked_List","8":"EncryptionTool","9":"EncryptionTool","10":"EncryptionTool","11":"EncryptionTool","12":"EncryptionTool","13":"EncryptionTool","14":"Google_News","15":"GroupSms_Way2","16":"Hotel-Management","17":"Hotel-Management","18":"Hotel-Management","19":"Hotel-Management","20":"Hotel-Management","21":"Hotel-Management","22":"Hotel-Management","23":"Hotel-Management","24":"Hotel-Management","25":"Hotel-Management","26":"Hotel-Management","27":"Insert_operation_on_Linked_List","28":"Job_scheduling","29":"Job_scheduling","30":"Job_scheduling","31":"Job_scheduling","32":"Job_scheduling","33":"Job_scheduling","34":"Job_scheduling","35":"Job_scheduling","36":"Job_scheduling","37":"Job_scheduling","38":"Job_scheduling","39":"Job_scheduling","40":"Job_scheduling","41":"Job_scheduling","42":"Job_scheduling","43":"Linear_Insertion_Sort","44":"Memory_game","45":"Memory_game","46":"Memory_game","47":"MobiusFunction","48":"Mp3_media_player","49":"Organise","50":"PONG_GAME","51":"PONG_GAME","52":"Print_List_of_Even_Numbers","53":"QuadraticCalc","54":"Quick_Sort","55":"RandomDice","56":"StringToBinary","57":"StringToBinary","58":"TTS","59":"Tic_Tac_Toe","60":"Tic_Tac_Toe","61":"Type of angles of a triangle","62":"Type_of_angles_of_triangle","63":"addition","64":"addition","65":"armstrongnumber","66":"avg_xdspam_confidence","67":"avg_xdspam_confidence","68":"backup_automater_services","69":"binary_search_tree","70":"blackJackGUI","71":"blackJackGUI","72":"blackJackGUI","73":"blackJackGUI","74":"bookstore_manangement_system","75":"bookstore_manangement_system","76":"bookstore_manangement_system","77":"bookstore_manangement_system","78":"bookstore_manangement_system","79":"bookstore_manangement_system","80":"bookstore_manangement_system","81":"bookstore_manangement_system","82":"bubblesortpgm","83":"changemac","84":"check_for_sqlite_files","85":"check_for_sqlite_files","86":"classicIndianCardMatch","87":"classicIndianCardMatch","88":"classicIndianCardMatch","89":"classicIndianCardMatch","90":"consonant","91":"cricket_live_score","92":"daily_checks","93":"daily_checks","94":"daily_checks","95":"daily_checks","96":"daily_checks","97":"diceV2_dynamic","98":"diceV2_dynamic","99":"dice_rolling_simulator","100":"diction","101":"digital_clock","102":"digital_clock","103":"dir_test","104":"encrypter-decrypter-gui","105":"encryptsys","106":"encryptsys","107":"encryptsys","108":"encryptsys","109":"encryptsys","110":"encryptsys","111":"encryptsys","112":"env_check","113":"ex20","114":"facebook id hack","115":"facebook id hack","116":"fibonacci","117":"get_info_remoute_srv","118":"get_likes_on_FB","119":"gui_calculator","120":"insertion_sort","121":"internet_connection_py3","122":"length","123":"linear_search","124":"linear_search","125":"memorygame","126":"memorygame","127":"mobilePhoneSpecsScrapper","128":"movie_details","129":"new","130":"new","131":"new","132":"new","133":"new_script","134":"new_script","135":"new_script","136":"next_number","137":"next_number","138":"nmap_scan","139":"nmap_scan","140":"nslookup_check","141":"nslookup_check","142":"pan","143":"password_cracker","144":"password_cracker","145":"ph_email","146":"ping_servers","147":"ping_servers","148":"ping_subnet","149":"polygon","150":"portscanner","151":"portscanner","152":"portscanner","153":"portscanner","154":"portscanner","155":"portscanner","156":"portscanner","157":"powerdown_startup","158":"powerdown_startup","159":"powerdown_startup","160":"powerdown_startup","161":"powerdown_startup","162":"powerdown_startup","163":"powerdown_startup","164":"powerdown_startup","165":"powerup_checks","166":"powerup_checks","167":"powerup_checks","168":"powerup_checks","169":"powerup_checks","170":"powerup_checks","171":"powerup_checks","172":"powerup_checks","173":"pscheck","174":"psunotify","175":"psunotify","176":"pyhton_array","177":"python_sms","178":"python_sms","179":"python_sms","180":"randomloadingmessage","181":"recursive-fibonacci","182":"recyclebin","183":"recyclebin","184":"rock_paper_scissor_game","185":"rock_paper_scissor_game","186":"rock_paper_scissor_game","187":"rotatelist","188":"scrap_file","189":"script_listing","190":"selectionSort","191":"sendemail","192":"sendemail","193":"sendemail","194":"sendemail","195":"sha1","196":"sha1","197":"sha1","198":"snake","199":"snake","200":"snake","201":"sorting","202":"sorting","203":"sorting","204":"spotifyAccount","205":"sqlite_check","206":"sqlite_table_check","207":"stack","208":"stack","209":"string_rotation","210":"sudoku","211":"sudoku","212":"sudoku","213":"tf_idf_generator","214":"tf_idf_generator","215":"tf_idf_generator","216":"tf_idf_generator","217":"tf_idf_generator","218":"tf_idf_generator","219":"tic_tak_toe","220":"tic_tak_toe","221":"tic_tak_toe","222":"tic_tak_toe","223":"tik_tak","224":"tweeter","225":"tweeter","226":"vowels","227":"vowels","228":"webcam","229":"whatsapp-monitor","230":"wiki","231":"wikipedia","232":"work_connect","233":"work_connect","234":"work_connect","235":"work_connect","236":"write_excel_file","237":"write_excel_file","238":"write_excel_file","239":"write_excel_file","240":"write_excel_file","241":"write_excel_file","242":"write_excel_file","243":"write_excel_file","244":"write_excel_file","245":"write_excel_file","246":"write_excel_file","247":"write_excel_file","248":"write_excel_file","249":"write_excel_file","250":"write_excel_file","251":"write_excel_file","252":"write_excel_file","253":"write_excel_file","254":"write_excel_file","255":"write_excel_file","256":"write_excel_file","257":"write_excel_file","258":"write_excel_file"},"obj":{"0":"","1":"","2":"YouTubeDownloder.showStreams","3":"YouTubeDownloder.chooseStream","4":"YouTubeDownloder.getStream","5":"CreditCard.validate","6":"","7":"Linked_List.Delete","8":"","9":"readAndDecrypt","10":"readAndEncrypt","11":"readAndEncryptAndSave","12":"readAndDecryptAndSave","13":"","14":"news","15":"","16":"exit","17":"add","18":"add","19":"","20":"","21":"modify","22":"modify","23":"search","24":"remove","25":"remove","26":"view","27":"Linked_List.Insert_After","28":"Scheduling.schedule","29":"Scheduling.schedule","30":"Scheduling.schedule","31":"Scheduling.schedule","32":"Scheduling.feasible","33":"Scheduling.feasible","34":"Scheduling.feasible","35":"Scheduling.feasible","36":"Scheduling.feasible","37":"Scheduling.feasible","38":"Scheduling.feasible","39":"Scheduling.feasible","40":"Scheduling.feasible","41":"Scheduling.feasible","42":"main","43":"Linear_Search","44":"mouseclick","45":"draw","46":"draw","47":"mobius_function","48":"","49":"ChangeDirectory","50":"keyup","51":"keyup","52":"","53":"findLinear","54":"","55":"","56":"","57":"","58":"","59":"input_player_letter","60":"get_computer_move","61":"angle_type","62":"angle_type","63":"","64":"","65":"","66":"","67":"","68":"","69":"inorder_itr","70":"string_list_join","71":"Hand.get_value","72":"stand","73":"hit","74":"","75":"","76":"","77":"","78":"","79":"","80":"","81":"","82":"","83":"cret","84":"isSQLite3","85":"","86":"","87":"","88":"","89":"","90":"count_con","91":"","92":"print_docs","93":"putty_sessions","94":"putty_sessions","95":"rdp_sessions","96":"euroclear_docs","97":"Dice.setSides","98":"checkInput","99":"","100":"","101":"","102":"","103":"","104":"Notebook.backend_work","105":"decrypt","106":"decrypt","107":"decrypt","108":"decrypt","109":"encrypt","110":"encrypt","111":"encrypt","112":"","113":"","114":"function","115":"","116":"getFibonacciDynamic","117":"","118":"","119":"","120":"","121":"","122":"","123":"","124":"","125":"","126":"","127":"Phonearena.crawl_html_page","128":"","129":"Times_of_India","130":"india_today","131":"india_today","132":"india_today","133":"","134":"","135":"","136":"","137":"","138":"main","139":"main","140":"","141":"","142":"","143":"testPass","144":"main","145":"","146":"","147":"","148":"","149":"","150":"","151":"","152":"","153":"connScan","154":"connScan","155":"main","156":"main","157":"windows","158":"windows","159":"windows","160":"windows","161":"linux","162":"linux","163":"linux","164":"linux","165":"windows","166":"windows","167":"windows","168":"linux","169":"linux","170":"linux","171":"get_servers","172":"get_servers","173":"","174":"","175":"","176":"","177":"","178":"","179":"","180":"","181":"fib","182":"","183":"sid2user","184":"number_to_name","185":"game","186":"game","187":"","188":"download","189":"","190":"","191":"createMessageWithAttachment","192":"createMessageWithAttachment","193":"createMessageWithAttachment","194":"createMessageWithAttachment","195":"SHA1Hash.final_hash","196":"SHA1Hash.final_hash","197":"main","198":"","199":"","200":"","201":"","202":"","203":"","204":"creator","205":"","206":"","207":"isEmpty","208":"pop","209":"rotate","210":"valid","211":"print_board","212":"find_empty","213":"paint","214":"find_tf_idf","215":"find_tf_idf","216":"find_tf_idf","217":"find_tf_idf","218":"find_tf_idf","219":"possibilities","220":"row_win","221":"col_win","222":"col_win","223":"checkwin","224":"","225":"tweetthis","226":"checkVowels","227":"","228":"","229":"","230":"","231":"","232":"","233":"","234":"","235":"","236":"","237":"","238":"","239":"","240":"","241":"","242":"","243":"","244":"","245":"","246":"","247":"","248":"","249":"","250":"","251":"","252":"","253":"","254":"","255":"","256":"","257":"","258":""},"lnum":{"0":28,"1":1,"2":17,"3":25,"4":36,"5":42,"6":13,"7":21,"8":10,"9":49,"10":65,"11":80,"12":88,"13":108,"14":12,"15":10,"16":368,"17":88,"18":117,"19":131,"20":132,"21":148,"22":177,"23":214,"24":256,"25":314,"26":325,"27":16,"28":30,"29":37,"30":31,"31":33,"32":54,"33":55,"34":83,"35":63,"36":64,"37":74,"38":76,"39":78,"40":79,"41":80,"42":101,"43":3,"44":42,"45":51,"46":53,"47":29,"48":7,"49":25,"50":114,"51":116,"52":8,"53":7,"54":32,"55":6,"56":3,"57":4,"58":1,"59":31,"60":117,"61":3,"62":4,"63":11,"64":6,"65":7,"66":3,"67":1,"68":27,"69":237,"70":46,"71":63,"72":113,"73":128,"74":393,"75":501,"76":669,"77":738,"78":988,"79":1063,"80":1165,"81":1174,"82":50,"83":12,"84":24,"85":34,"86":78,"87":79,"88":90,"89":91,"90":6,"91":6,"92":32,"93":40,"94":41,"95":46,"96":51,"97":11,"98":27,"99":11,"100":6,"101":9,"102":10,"103":14,"104":118,"105":14,"106":17,"107":20,"108":32,"109":47,"110":50,"111":61,"112":17,"113":19,"114":46,"115":52,"116":44,"117":20,"118":13,"119":2,"120":3,"121":11,"122":2,"123":1,"124":11,"125":1,"126":2,"127":22,"128":41,"129":32,"130":61,"131":63,"132":68,"133":58,"134":57,"135":58,"136":2,"137":19,"138":32,"139":32,"140":13,"141":14,"142":3,"143":26,"144":38,"145":55,"146":61,"147":62,"148":34,"149":3,"150":5,"151":4,"152":5,"153":24,"154":28,"155":59,"156":59,"157":17,"158":18,"159":19,"160":23,"161":29,"162":30,"163":31,"164":35,"165":36,"166":37,"167":39,"168":49,"169":50,"170":51,"171":67,"172":69,"173":17,"174":21,"175":37,"176":1,"177":44,"178":23,"179":33,"180":4,"181":2,"182":5,"183":23,"184":22,"185":44,"186":48,"187":2,"188":12,"189":20,"190":1,"191":102,"192":106,"193":110,"194":114,"195":63,"196":64,"197":117,"198":26,"199":93,"200":99,"201":5,"202":8,"203":19,"204":89,"205":50,"206":21,"207":14,"208":25,"209":6,"210":40,"211":57,"212":72,"213":51,"214":72,"215":104,"216":94,"217":100,"218":137,"219":19,"220":44,"221":54,"222":59,"223":77,"224":16,"225":33,"226":8,"227":13,"228":26,"229":32,"230":8,"231":2,"232":35,"233":36,"234":38,"235":40,"236":1,"237":1,"238":1,"239":1,"240":1,"241":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":1,"256":1,"257":1,"258":1},"col":{"0":19,"1":0,"2":8,"3":8,"4":8,"5":8,"6":8,"7":4,"8":4,"9":11,"10":11,"11":13,"12":13,"13":9,"14":13,"15":4,"16":0,"17":11,"18":11,"19":3,"20":11,"21":11,"22":15,"23":11,"24":11,"25":16,"26":11,"27":4,"28":8,"29":16,"30":8,"31":12,"32":8,"33":8,"34":16,"35":16,"36":16,"37":12,"38":16,"39":16,"40":12,"41":12,"42":4,"43":4,"44":7,"45":11,"46":13,"47":0,"48":0,"49":20,"50":7,"51":7,"52":0,"53":0,"54":0,"55":0,"56":4,"57":4,"58":0,"59":15,"60":7,"61":0,"62":0,"63":4,"64":6,"65":0,"66":0,"67":5,"68":17,"69":11,"70":4,"71":8,"72":7,"73":7,"74":6,"75":11,"76":40,"77":43,"78":15,"79":11,"80":11,"81":16,"82":0,"83":14,"84":13,"85":6,"86":10,"87":8,"88":10,"89":8,"90":2,"91":9,"92":4,"93":18,"94":8,"95":4,"96":4,"97":12,"98":0,"99":4,"100":17,"101":0,"102":0,"103":4,"104":4,"105":4,"106":4,"107":4,"108":4,"109":4,"110":4,"111":4,"112":17,"113":15,"114":2,"115":5,"116":7,"117":14,"118":0,"119":0,"120":0,"121":4,"122":0,"123":0,"124":0,"125":0,"126":0,"127":4,"128":11,"129":3,"130":3,"131":6,"132":12,"133":0,"134":12,"135":8,"136":0,"137":4,"138":8,"139":28,"140":14,"141":4,"142":0,"143":15,"144":15,"145":3,"146":4,"147":14,"148":8,"149":0,"150":0,"151":0,"152":0,"153":8,"154":8,"155":8,"156":28,"157":8,"158":18,"159":74,"160":12,"161":8,"162":18,"163":74,"164":12,"165":8,"166":18,"167":70,"168":8,"169":18,"170":74,"171":11,"172":12,"173":4,"174":0,"175":15,"176":0,"177":4,"178":4,"179":7,"180":0,"181":6,"182":0,"183":16,"184":0,"185":7,"186":9,"187":0,"188":8,"189":6,"190":0,"191":13,"192":13,"193":13,"194":13,"195":8,"196":8,"197":21,"198":8,"199":12,"200":8,"201":0,"202":0,"203":0,"204":16,"205":7,"206":12,"207":0,"208":0,"209":0,"210":4,"211":4,"212":4,"213":10,"214":0,"215":12,"216":34,"217":16,"218":35,"219":1,"220":5,"221":2,"222":5,"223":0,"224":4,"225":14,"226":4,"227":0,"228":7,"229":8,"230":0,"231":0,"232":8,"233":8,"234":8,"235":8,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0},"filename":{"0":"Classification_human_or_horse.py","1":"CliYoutubeDownloader.py","2":"CliYoutubeDownloader.py","3":"CliYoutubeDownloader.py","4":"CliYoutubeDownloader.py","5":"Credit_Card_Validator.py","6":"Cricket_score.py","7":"Delete_Linked_List.py","8":"EncryptionTool.py","9":"EncryptionTool.py","10":"EncryptionTool.py","11":"EncryptionTool.py","12":"EncryptionTool.py","13":"EncryptionTool.py","14":"Google_News.py","15":"GroupSms_Way2.py","16":"Hotel-Management.py","17":"Hotel-Management.py","18":"Hotel-Management.py","19":"Hotel-Management.py","20":"Hotel-Management.py","21":"Hotel-Management.py","22":"Hotel-Management.py","23":"Hotel-Management.py","24":"Hotel-Management.py","25":"Hotel-Management.py","26":"Hotel-Management.py","27":"Insert_operation_on_Linked_List.py","28":"Job_scheduling.py","29":"Job_scheduling.py","30":"Job_scheduling.py","31":"Job_scheduling.py","32":"Job_scheduling.py","33":"Job_scheduling.py","34":"Job_scheduling.py","35":"Job_scheduling.py","36":"Job_scheduling.py","37":"Job_scheduling.py","38":"Job_scheduling.py","39":"Job_scheduling.py","40":"Job_scheduling.py","41":"Job_scheduling.py","42":"Job_scheduling.py","43":"Linear_Insertion_Sort.py","44":"Memory_game.py","45":"Memory_game.py","46":"Memory_game.py","47":"MobiusFunction.py","48":"Mp3_media_player.py","49":"Organise.py","50":"PONG_GAME.py","51":"PONG_GAME.py","52":"Print_List_of_Even_Numbers.py","53":"QuadraticCalc.py","54":"Quick_Sort.py","55":"RandomDice.py","56":"StringToBinary.py","57":"StringToBinary.py","58":"TTS.py","59":"Tic_Tac_Toe.py","60":"Tic_Tac_Toe.py","61":"Type of angles of a triangle.py","62":"Type_of_angles_of_triangle.py","63":"addition.py","64":"addition.py","65":"armstrongnumber.py","66":"avg_xdspam_confidence.py","67":"avg_xdspam_confidence.py","68":"backup_automater_services.py","69":"binary_search_tree.py","70":"blackJackGUI.py","71":"blackJackGUI.py","72":"blackJackGUI.py","73":"blackJackGUI.py","74":"bookstore_manangement_system.py","75":"bookstore_manangement_system.py","76":"bookstore_manangement_system.py","77":"bookstore_manangement_system.py","78":"bookstore_manangement_system.py","79":"bookstore_manangement_system.py","80":"bookstore_manangement_system.py","81":"bookstore_manangement_system.py","82":"bubblesortpgm.py","83":"changemac.py","84":"check_for_sqlite_files.py","85":"check_for_sqlite_files.py","86":"classicIndianCardMatch.py","87":"classicIndianCardMatch.py","88":"classicIndianCardMatch.py","89":"classicIndianCardMatch.py","90":"consonant.py","91":"cricket_live_score.py","92":"daily_checks.py","93":"daily_checks.py","94":"daily_checks.py","95":"daily_checks.py","96":"daily_checks.py","97":"diceV2_dynamic.py","98":"diceV2_dynamic.py","99":"dice_rolling_simulator.py","100":"diction.py","101":"digital_clock.py","102":"digital_clock.py","103":"dir_test.py","104":"encrypter-decrypter-gui.py","105":"encryptsys.py","106":"encryptsys.py","107":"encryptsys.py","108":"encryptsys.py","109":"encryptsys.py","110":"encryptsys.py","111":"encryptsys.py","112":"env_check.py","113":"ex20.py","114":"facebook id hack.py","115":"facebook id hack.py","116":"fibonacci.py","117":"get_info_remoute_srv.py","118":"get_likes_on_FB.py","119":"gui_calculator.py","120":"insertion_sort.py","121":"internet_connection_py3.py","122":"length.py","123":"linear_search.py","124":"linear_search.py","125":"memorygame.py","126":"memorygame.py","127":"mobilePhoneSpecsScrapper.py","128":"movie_details.py","129":"new.py","130":"new.py","131":"new.py","132":"new.py","133":"new_script.py","134":"new_script.py","135":"new_script.py","136":"next_number.py","137":"next_number.py","138":"nmap_scan.py","139":"nmap_scan.py","140":"nslookup_check.py","141":"nslookup_check.py","142":"pan.py","143":"password_cracker.py","144":"password_cracker.py","145":"ph_email.py","146":"ping_servers.py","147":"ping_servers.py","148":"ping_subnet.py","149":"polygon.py","150":"portscanner.py","151":"portscanner.py","152":"portscanner.py","153":"portscanner.py","154":"portscanner.py","155":"portscanner.py","156":"portscanner.py","157":"powerdown_startup.py","158":"powerdown_startup.py","159":"powerdown_startup.py","160":"powerdown_startup.py","161":"powerdown_startup.py","162":"powerdown_startup.py","163":"powerdown_startup.py","164":"powerdown_startup.py","165":"powerup_checks.py","166":"powerup_checks.py","167":"powerup_checks.py","168":"powerup_checks.py","169":"powerup_checks.py","170":"powerup_checks.py","171":"powerup_checks.py","172":"powerup_checks.py","173":"pscheck.py","174":"psunotify.py","175":"psunotify.py","176":"pyhton_array.py","177":"python_sms.py","178":"python_sms.py","179":"python_sms.py","180":"randomloadingmessage.py","181":"recursive-fibonacci.py","182":"recyclebin.py","183":"recyclebin.py","184":"rock_paper_scissor_game.py","185":"rock_paper_scissor_game.py","186":"rock_paper_scissor_game.py","187":"rotatelist.py","188":"scrap_file.py","189":"script_listing.py","190":"selectionSort.py","191":"sendemail.py","192":"sendemail.py","193":"sendemail.py","194":"sendemail.py","195":"sha1.py","196":"sha1.py","197":"sha1.py","198":"snake.py","199":"snake.py","200":"snake.py","201":"sorting.py","202":"sorting.py","203":"sorting.py","204":"spotifyAccount.py","205":"sqlite_check.py","206":"sqlite_table_check.py","207":"stack.py","208":"stack.py","209":"string_rotation.py","210":"sudoku.py","211":"sudoku.py","212":"sudoku.py","213":"tf_idf_generator.py","214":"tf_idf_generator.py","215":"tf_idf_generator.py","216":"tf_idf_generator.py","217":"tf_idf_generator.py","218":"tf_idf_generator.py","219":"tic_tak_toe.py","220":"tic_tak_toe.py","221":"tic_tak_toe.py","222":"tic_tak_toe.py","223":"tik_tak.py","224":"tweeter.py","225":"tweeter.py","226":"vowels.py","227":"vowels.py","228":"webcam.py","229":"whatsapp-monitor.py","230":"wiki.py","231":"wikipedia.py","232":"work_connect.py","233":"work_connect.py","234":"work_connect.py","235":"work_connect.py","236":"write_excel_file.py","237":"write_excel_file.py","238":"write_excel_file.py","239":"write_excel_file.py","240":"write_excel_file.py","241":"write_excel_file.py","242":"write_excel_file.py","243":"write_excel_file.py","244":"write_excel_file.py","245":"write_excel_file.py","246":"write_excel_file.py","247":"write_excel_file.py","248":"write_excel_file.py","249":"write_excel_file.py","250":"write_excel_file.py","251":"write_excel_file.py","252":"write_excel_file.py","253":"write_excel_file.py","254":"write_excel_file.py","255":"write_excel_file.py","256":"write_excel_file.py","257":"write_excel_file.py","258":"write_excel_file.py"},"symbol":{"0":"consider-using-with","1":"wildcard-import","2":"attribute-defined-outside-init","3":"attribute-defined-outside-init","4":"attribute-defined-outside-init","5":"consider-using-enumerate","6":"consider-using-with","7":"inconsistent-return-statements","8":"redefined-builtin","9":"consider-using-with","10":"consider-using-with","11":"consider-using-with","12":"consider-using-with","13":"consider-using-with","14":"consider-using-with","15":"redefined-builtin","16":"redefined-builtin","17":"consider-using-with","18":"consider-using-with","19":"singleton-comparison","20":"consider-using-with","21":"consider-using-with","22":"consider-using-with","23":"consider-using-with","24":"consider-using-with","25":"consider-using-with","26":"consider-using-with","27":"inconsistent-return-statements","28":"attribute-defined-outside-init","29":"attribute-defined-outside-init","30":"attribute-defined-outside-init","31":"attribute-defined-outside-init","32":"attribute-defined-outside-init","33":"attribute-defined-outside-init","34":"attribute-defined-outside-init","35":"attribute-defined-outside-init","36":"attribute-defined-outside-init","37":"attribute-defined-outside-init","38":"attribute-defined-outside-init","39":"attribute-defined-outside-init","40":"attribute-defined-outside-init","41":"attribute-defined-outside-init","42":"consider-using-enumerate","43":"consider-using-enumerate","44":"singleton-comparison","45":"singleton-comparison","46":"singleton-comparison","47":"inconsistent-return-statements","48":"wildcard-import","49":"redefined-builtin","50":"consider-using-in","51":"consider-using-in","52":"redefined-builtin","53":"inconsistent-return-statements","54":"consider-using-enumerate","55":"wildcard-import","56":"redefined-builtin","57":"redefined-builtin","58":"wildcard-import","59":"consider-using-in","60":"singleton-comparison","61":"inconsistent-return-statements","62":"inconsistent-return-statements","63":"redefined-builtin","64":"singleton-comparison","65":"redefined-builtin","66":"redefined-builtin","67":"consider-using-with","68":"consider-using-with","69":"singleton-comparison","70":"consider-using-enumerate","71":"attribute-defined-outside-init","72":"singleton-comparison","73":"singleton-comparison","74":"singleton-comparison","75":"singleton-comparison","76":"consider-using-in","77":"consider-using-in","78":"singleton-comparison","79":"singleton-comparison","80":"singleton-comparison","81":"consider-using-in","82":"consider-using-enumerate","83":"consider-using-with","84":"consider-using-with","85":"consider-using-with","86":"singleton-comparison","87":"consider-using-enumerate","88":"singleton-comparison","89":"consider-using-enumerate","90":"consider-using-enumerate","91":"consider-using-with","92":"consider-using-with","93":"consider-using-with","94":"consider-using-with","95":"consider-using-with","96":"consider-using-with","97":"attribute-defined-outside-init","98":"inconsistent-return-statements","99":"redefined-builtin","100":"consider-using-with","101":"wildcard-import","102":"wildcard-import","103":"redefined-builtin","104":"inconsistent-return-statements","105":"consider-using-enumerate","106":"consider-using-enumerate","107":"consider-using-enumerate","108":"consider-using-enumerate","109":"consider-using-enumerate","110":"consider-using-enumerate","111":"consider-using-enumerate","112":"consider-using-with","113":"consider-using-with","114":"consider-using-with","115":"consider-using-with","116":"consider-using-in","117":"consider-using-with","118":"redefined-builtin","119":"wildcard-import","120":"redefined-builtin","121":"consider-using-with","122":"redefined-builtin","123":"redefined-builtin","124":"consider-using-enumerate","125":"wildcard-import","126":"wildcard-import","127":"inconsistent-return-statements","128":"consider-using-with","129":"consider-using-enumerate","130":"consider-using-enumerate","131":"consider-using-enumerate","132":"consider-using-in","133":"redefined-builtin","134":"consider-using-with","135":"consider-using-with","136":"consider-using-enumerate","137":"consider-using-enumerate","138":"singleton-comparison","139":"singleton-comparison","140":"consider-using-with","141":"consider-using-with","142":"wildcard-import","143":"consider-using-with","144":"consider-using-with","145":"len-as-condition","146":"consider-using-with","147":"consider-using-with","148":"consider-using-with","149":"wildcard-import","150":"redefined-builtin","151":"wildcard-import","152":"wildcard-import","153":"consider-using-with","154":"consider-using-with","155":"singleton-comparison","156":"singleton-comparison","157":"consider-using-with","158":"consider-using-with","159":"consider-using-with","160":"consider-using-with","161":"consider-using-with","162":"consider-using-with","163":"consider-using-with","164":"consider-using-with","165":"consider-using-with","166":"consider-using-with","167":"consider-using-with","168":"consider-using-with","169":"consider-using-with","170":"consider-using-with","171":"singleton-comparison","172":"consider-using-with","173":"redefined-builtin","174":"redefined-builtin","175":"consider-using-with","176":"wildcard-import","177":"redefined-builtin","178":"consider-using-with","179":"singleton-comparison","180":"wildcard-import","181":"consider-using-in","182":"wildcard-import","183":"redefined-builtin","184":"inconsistent-return-statements","185":"consider-using-in","186":"consider-using-in","187":"redefined-builtin","188":"consider-using-with","189":"consider-using-with","190":"redefined-builtin","191":"consider-using-with","192":"consider-using-with","193":"consider-using-with","194":"consider-using-with","195":"attribute-defined-outside-init","196":"attribute-defined-outside-init","197":"consider-using-with","198":"consider-using-with","199":"consider-using-with","200":"consider-using-with","201":"consider-using-enumerate","202":"consider-using-enumerate","203":"consider-using-enumerate","204":"consider-using-with","205":"singleton-comparison","206":"consider-using-with","207":"inconsistent-return-statements","208":"inconsistent-return-statements","209":"inconsistent-return-statements","210":"consider-using-enumerate","211":"consider-using-enumerate","212":"consider-using-enumerate","213":"redefined-builtin","214":"dangerous-default-value","215":"redefined-builtin","216":"consider-using-with","217":"consider-using-with","218":"consider-using-with","219":"consider-using-enumerate","220":"singleton-comparison","221":"consider-using-enumerate","222":"singleton-comparison","223":"inconsistent-return-statements","224":"redefined-builtin","225":"redefined-builtin","226":"consider-using-enumerate","227":"consider-using-enumerate","228":"singleton-comparison","229":"redefined-builtin","230":"wildcard-import","231":"wildcard-import","232":"consider-using-with","233":"consider-using-with","234":"consider-using-with","235":"consider-using-with","236":"duplicate-code","237":"duplicate-code","238":"duplicate-code","239":"duplicate-code","240":"duplicate-code","241":"duplicate-code","242":"duplicate-code","243":"duplicate-code","244":"duplicate-code","245":"duplicate-code","246":"duplicate-code","247":"duplicate-code","248":"duplicate-code","249":"duplicate-code","250":"duplicate-code","251":"duplicate-code","252":"duplicate-code","253":"duplicate-code","254":"duplicate-code","255":"duplicate-code","256":"duplicate-code","257":"duplicate-code","258":"duplicate-code"},"text":{"0":"Consider using 'with' for resource-allocating operations","1":"Wildcard import pytube","2":"Attribute 'streamNo' defined outside __init__","3":"Attribute 'choose' defined outside __init__","4":"Attribute 'stream' defined outside __init__","5":"Consider using enumerate instead of iterating with range and len","6":"Consider using 'with' for resource-allocating operations","7":"Either all return statements in a function should return an expression, or none of them should.","8":"Redefining built-in 'input'","9":"Consider using 'with' for resource-allocating operations","10":"Consider using 'with' for resource-allocating operations","11":"Consider using 'with' for resource-allocating operations","12":"Consider using 'with' for resource-allocating operations","13":"Consider using 'with' for resource-allocating operations","14":"Consider using 'with' for resource-allocating operations","15":"Redefining built-in 'input'","16":"Redefining built-in 'exit'","17":"Consider using 'with' for resource-allocating operations","18":"Consider using 'with' for resource-allocating operations","19":"Comparison 'filecheck == False' should be 'filecheck is False' if checking for the singleton value False, or 'not filecheck' if testing for falsiness","20":"Consider using 'with' for resource-allocating operations","21":"Consider using 'with' for resource-allocating operations","22":"Consider using 'with' for resource-allocating operations","23":"Consider using 'with' for resource-allocating operations","24":"Consider using 'with' for resource-allocating operations","25":"Consider using 'with' for resource-allocating operations","26":"Consider using 'with' for resource-allocating operations","27":"Either all return statements in a function should return an expression, or none of them should.","28":"Attribute 'j' defined outside __init__","29":"Attribute 'j' defined outside __init__","30":"Attribute 'x' defined outside __init__","31":"Attribute 'k' defined outside __init__","32":"Attribute 'tmp' defined outside __init__","33":"Attribute 'is_feasible' defined outside __init__","34":"Attribute 'is_feasible' defined outside __init__","35":"Attribute 'index1' defined outside __init__","36":"Attribute 'index2' defined outside __init__","37":"Attribute 'job' defined outside __init__","38":"Attribute 'jobindex' defined outside __init__","39":"Attribute 'jobindex' defined outside __init__","40":"Attribute 'dlineval' defined outside __init__","41":"Attribute 'ftest' defined outside __init__","42":"Consider using enumerate instead of iterating with range and len","43":"Consider using enumerate instead of iterating with range and len","44":"Comparison 'exposed[ind] == False' should be 'exposed[ind] is False' if checking for the singleton value False, or 'not exposed[ind]' if testing for falsiness","45":"Comparison 'exposed[i] == False' should be 'exposed[i] is False' if checking for the singleton value False, or 'not exposed[i]' if testing for falsiness","46":"Comparison 'exposed[i] == True' should be 'exposed[i] is True' if checking for the singleton value True, or 'exposed[i]' if testing for truthiness","47":"Either all return statements in a function should return an expression, or none of them should.","48":"Wildcard import tkinter","49":"Redefining built-in 'dir'","50":"Consider merging these comparisons with \"in\" to \"key in (simplegui.KEY_MAP['down'], simplegui.KEY_MAP['up'])\"","51":"Consider merging these comparisons with \"in\" to \"key in (simplegui.KEY_MAP['w'], simplegui.KEY_MAP['s'])\"","52":"Redefining built-in 'list'","53":"Either all return statements in a function should return an expression, or none of them should.","54":"Consider using enumerate instead of iterating with range and len","55":"Wildcard import tkinter","56":"Redefining built-in 'chr'","57":"Redefining built-in 'bin'","58":"Wildcard import tkinter","59":"Consider merging these comparisons with \"in\" to \"letter in ('X', 'O')\"","60":"Comparison 'move != None' should be 'move is not None'","61":"Either all return statements in a function should return an expression, or none of them should.","62":"Either all return statements in a function should return an expression, or none of them should.","63":"Redefining built-in 'sum'","64":"Comparison 'a == True' should be 'a is True' if checking for the singleton value True, or 'a' if testing for truthiness","65":"Redefining built-in 'sum'","66":"Redefining built-in 'sum'","67":"Consider using 'with' for resource-allocating operations","68":"Consider using 'with' for resource-allocating operations","69":"Comparison 'current != None' should be 'current is not None'","70":"Consider using enumerate instead of iterating with range and len","71":"Attribute 'hand_value' defined outside __init__","72":"Comparison 'in_play == True' should be 'in_play is True' if checking for the singleton value True, or 'in_play' if testing for truthiness","73":"Comparison 'in_play == True' should be 'in_play is True' if checking for the singleton value True, or 'in_play' if testing for truthiness","74":"Comparison 'a == True' should be 'a is True' if checking for the singleton value True, or 'a' if testing for truthiness","75":"Comparison 'data2 != None' should be 'data2 is not None'","76":"Consider merging these comparisons with \"in\" to \"choice44 in ('y', 'Y')\"","77":"Consider merging these comparisons with \"in\" to \"choice44 in ('n', 'N')\"","78":"Comparison 'data20 != None' should be 'data20 is not None'","79":"Comparison 'data2 != None' should be 'data2 is not None'","80":"Comparison 'data2 != None' should be 'data2 is not None'","81":"Consider merging these comparisons with \"in\" to \"choice5 in ('Y', 'y')\"","82":"Consider using enumerate instead of iterating with range and len","83":"Consider using 'with' for resource-allocating operations","84":"Consider using 'with' for resource-allocating operations","85":"Consider using 'with' for resource-allocating operations","86":"Comparison 'switchPlayer == True' should be 'switchPlayer is True' if checking for the singleton value True, or 'switchPlayer' if testing for truthiness","87":"Consider using enumerate instead of iterating with range and len","88":"Comparison 'switchPlayer == False' should be 'switchPlayer is False' if checking for the singleton value False, or 'not switchPlayer' if testing for falsiness","89":"Consider using enumerate instead of iterating with range and len","90":"Consider using enumerate instead of iterating with range and len","91":"Consider using 'with' for resource-allocating operations","92":"Consider using 'with' for resource-allocating operations","93":"Consider using 'with' for resource-allocating operations","94":"Consider using 'with' for resource-allocating operations","95":"Consider using 'with' for resource-allocating operations","96":"Consider using 'with' for resource-allocating operations","97":"Attribute 'sides' defined outside __init__","98":"Either all return statements in a function should return an expression, or none of them should.","99":"Redefining built-in 'input'","100":"Consider using 'with' for resource-allocating operations","101":"Wildcard import tkinter","102":"Wildcard import tkinter.ttk","103":"Redefining built-in 'input'","104":"Either all return statements in a function should return an expression, or none of them should.","105":"Consider using enumerate instead of iterating with range and len","106":"Consider using enumerate instead of iterating with range and len","107":"Consider using enumerate instead of iterating with range and len","108":"Consider using enumerate instead of iterating with range and len","109":"Consider using enumerate instead of iterating with range and len","110":"Consider using enumerate instead of iterating with range and len","111":"Consider using enumerate instead of iterating with range and len","112":"Consider using 'with' for resource-allocating operations","113":"Consider using 'with' for resource-allocating operations","114":"Consider using 'with' for resource-allocating operations","115":"Consider using 'with' for resource-allocating operations","116":"Consider merging these comparisons with \"in\" to 'n in (0, 1)'","117":"Consider using 'with' for resource-allocating operations","118":"Redefining built-in 'id'","119":"Wildcard import tkinter","120":"Redefining built-in 'list'","121":"Consider using 'with' for resource-allocating operations","122":"Redefining built-in 'str'","123":"Redefining built-in 'list'","124":"Consider using enumerate instead of iterating with range and len","125":"Wildcard import random","126":"Wildcard import turtle","127":"Either all return statements in a function should return an expression, or none of them should.","128":"Consider using 'with' for resource-allocating operations","129":"Consider using enumerate instead of iterating with range and len","130":"Consider using enumerate instead of iterating with range and len","131":"Consider using enumerate instead of iterating with range and len","132":"Consider merging these comparisons with \"in\" to \"bol in ('y', 'Y')\"","133":"Redefining built-in 'input'","134":"Consider using 'with' for resource-allocating operations","135":"Consider using 'with' for resource-allocating operations","136":"Consider using enumerate instead of iterating with range and len","137":"Consider using enumerate instead of iterating with range and len","138":"Comparison 'tgtHost == None' should be 'tgtHost is None'","139":"Comparison 'tgtPorts[0] == None' should be 'tgtPorts[0] is None'","140":"Consider using 'with' for resource-allocating operations","141":"Consider using 'with' for resource-allocating operations","142":"Wildcard import matplotlib","143":"Consider using 'with' for resource-allocating operations","144":"Consider using 'with' for resource-allocating operations","145":"Do not use `len(SEQUENCE)` without comparison to determine if a sequence is empty","146":"Consider using 'with' for resource-allocating operations","147":"Consider using 'with' for resource-allocating operations","148":"Consider using 'with' for resource-allocating operations","149":"Wildcard import pygame.locals","150":"Redefining built-in 'enumerate'","151":"Wildcard import socket","152":"Wildcard import threading","153":"Consider using 'with' for resource-allocating operations","154":"Consider using 'with' for resource-allocating operations","155":"Comparison 'tgtHost == None' should be 'tgtHost is None'","156":"Comparison 'tgtPorts[0] == None' should be 'tgtPorts[0] is None'","157":"Consider using 'with' for resource-allocating operations","158":"Consider using 'with' for resource-allocating operations","159":"Consider using 'with' for resource-allocating operations","160":"Consider using 'with' for resource-allocating operations","161":"Consider using 'with' for resource-allocating operations","162":"Consider using 'with' for resource-allocating operations","163":"Consider using 'with' for resource-allocating operations","164":"Consider using 'with' for resource-allocating operations","165":"Consider using 'with' for resource-allocating operations","166":"Consider using 'with' for resource-allocating operations","167":"Consider using 'with' for resource-allocating operations","168":"Consider using 'with' for resource-allocating operations","169":"Consider using 'with' for resource-allocating operations","170":"Consider using 'with' for resource-allocating operations","171":"Comparison 'row == None' should be 'row is None'","172":"Consider using 'with' for resource-allocating operations","173":"Redefining built-in 'input'","174":"Redefining built-in 'int'","175":"Consider using 'with' for resource-allocating operations","176":"Wildcard import array","177":"Redefining built-in 'hash'","178":"Consider using 'with' for resource-allocating operations","179":"Comparison 'row == None' should be 'row is None'","180":"Wildcard import random","181":"Consider merging these comparisons with \"in\" to 'n in (0, 1)'","182":"Wildcard import _winreg","183":"Redefining built-in 'type'","184":"Either all return statements in a function should return an expression, or none of them should.","185":"Consider merging these comparisons with \"in\" to 'diff in (1, 3)'","186":"Consider merging these comparisons with \"in\" to 'diff in (2, 4)'","187":"Redefining built-in 'list'","188":"Consider using 'with' for resource-allocating operations","189":"Consider using 'with' for resource-allocating operations","190":"Redefining built-in 'list'","191":"Consider using 'with' for resource-allocating operations","192":"Consider using 'with' for resource-allocating operations","193":"Consider using 'with' for resource-allocating operations","194":"Consider using 'with' for resource-allocating operations","195":"Attribute 'padded_data' defined outside __init__","196":"Attribute 'blocks' defined outside __init__","197":"Consider using 'with' for resource-allocating operations","198":"Consider using 'with' for resource-allocating operations","199":"Consider using 'with' for resource-allocating operations","200":"Consider using 'with' for resource-allocating operations","201":"Consider using enumerate instead of iterating with range and len","202":"Consider using enumerate instead of iterating with range and len","203":"Consider using enumerate instead of iterating with range and len","204":"Consider using 'with' for resource-allocating operations","205":"Comparison 'row == None' should be 'row is None'","206":"Consider using 'with' for resource-allocating operations","207":"Either all return statements in a function should return an expression, or none of them should.","208":"Either all return statements in a function should return an expression, or none of them should.","209":"Either all return statements in a function should return an expression, or none of them should.","210":"Consider using enumerate instead of iterating with range and len","211":"Consider using enumerate instead of iterating with range and len","212":"Consider using enumerate instead of iterating with range and len","213":"Redefining built-in 'str'","214":"Dangerous default value [] as argument","215":"Redefining built-in 'dict'","216":"Consider using 'with' for resource-allocating operations","217":"Consider using 'with' for resource-allocating operations","218":"Consider using 'with' for resource-allocating operations","219":"Consider using enumerate instead of iterating with range and len","220":"Comparison 'win == True' should be 'win is True' if checking for the singleton value True, or 'win' if testing for truthiness","221":"Consider using enumerate instead of iterating with range and len","222":"Comparison 'win == True' should be 'win is True' if checking for the singleton value True, or 'win' if testing for truthiness","223":"Either all return statements in a function should return an expression, or none of them should.","224":"Redefining built-in 'input'","225":"Redefining built-in 'type'","226":"Consider using enumerate instead of iterating with range and len","227":"Consider using enumerate instead of iterating with range and len","228":"Comparison 'ret == True' should be 'ret is True' if checking for the singleton value True, or 'ret' if testing for truthiness","229":"Redefining built-in 'open'","230":"Wildcard import tkinter","231":"Wildcard import tkinter","232":"Consider using 'with' for resource-allocating operations","233":"Consider using 'with' for resource-allocating operations","234":"Consider using 'with' for resource-allocating operations","235":"Consider using 'with' for resource-allocating operations","236":"Similar lines in 3 files\n==Delete_Linked_List:0\n==Detect_Remove_loop:0\n==Sorting_List:0\nclass Node:\n    def __init__(self, data):\n        self.data = data\n        self.next = None\n\n\nclass Linked_List:\n    def __init__(self):\n        self.head = None\n\n    def Insert_At_End(self, new_data):\n        new_node = Node(new_data)\n        if self.head is None:\n            self.head = new_node\n            return\n        current = self.head\n        while(current.next):\n            current = current.next\n        current.next = new_node\n","237":"Similar lines in 2 files\n==Add_two_Linked_List:0\n==Rotate_Linked_List:0\nclass Node:\n    def __init__(self, data):\n        self.data = data\n        self.next = None\n\n\nclass Linked_List:\n    def __init__(self):\n        self.head = None\n\n    def Insert_At_Beginning(self, new_data):\n        new_node = Node(new_data)\n        if self.head is None:\n            self.head = new_node\n            return\n        new_node.next = self.head\n        self.head = new_node\n","238":"Similar lines in 2 files\n==Detect_Remove_loop:42\n==Sorting_List:34\n    def Display(self):\n        temp = self.head\n        while(temp):\n            print(temp.data, \"->\", end=\" \")\n            temp = temp.next\n        print(\"None\")\n\n\nif __name__ == \"__main__\":\n    L_list = Linked_List()\n    L_list.Insert_At_End(8)\n    L_list.Insert_At_End(5)\n    L_list.Insert_At_End(10)\n    L_list.Insert_At_End(7)\n    L_list.Insert_At_End(6)\n    L_list.Insert_At_End(11)\n    L_list.Insert_At_End(9)","239":"Similar lines in 4 files\n==Delete_Linked_List:7\n==Detect_Remove_loop:7\n==Reverse_list_in_groups:7\n==Sorting_List:7\n    def __init__(self):\n        self.head = None\n\n    def Insert_At_End(self, new_data):\n        new_node = Node(new_data)\n        if self.head is None:\n            self.head = new_node\n            return\n        current = self.head\n        while(current.next):\n            current = current.next\n        current.next = new_node\n","240":"Similar lines in 2 files\n==Sorted_Inserted_Linked_List:27\n==Split_Circular_Linked_List:38\n    def Display(self):\n        temp = self.head\n        if self.head is not None:\n            while(temp):\n                print(temp.data, \"->\", end=\" \")\n                temp = temp.next\n                if temp == self.head:\n                    print(temp.data)\n                    break\n\n\nif __name__ == \"__main__\":","241":"Similar lines in 2 files\n==Day_of_week:6\n==days_from_date:7\ndef process_date(user_input):\n    user_input=re.sub(r\"\/\", \" \", user_input) #substitute \/ with space\n    user_input=re.sub(r\"-\", \" \", user_input) #substitute - with space\n    return user_input\n\ndef find_day(date):\n    born = datetime.datetime.strptime(date, '%d %m %Y').weekday() #this statement returns an integer corresponding to the day of the week\n    return (calendar.day_name[born]) #this statement returns the corresponding day name to the integer generated in the previous statement\n\n#To get the input from the user\n#User may type 1\/2\/1999 or 1-2-1999\n#To overcome those we have to process user input and make it standard to accept as defined by  calender and time module","242":"Similar lines in 3 files\n==Add_two_Linked_List:0\n==Insert_operation_on_Linked_List:0\n==Rotate_Linked_List:0\nclass Node:\n    def __init__(self, data):\n        self.data = data\n        self.next = None\n\n\nclass Linked_List:\n    def __init__(self):\n        self.head = None\n\n    def Insert_At_Beginning(self, new_data):\n        new_node = Node(new_data)","243":"Similar lines in 2 files\n==Type of angles of a triangle:42\n==Type_of_angles_of_triangle:65\n        print(myDict.get(\"Has a right angle (90\u00b0)\"))\n\n    elif(angle1 < 90 and angle2 < 90 and angle3 < 90):\n        print(myDict.get(\"All angles are less than 90\u00b0.\"))\n\n    elif(angle1 > 90 or angle2 > 90 or angle3 > 90):\n        print(myDict.get(\"Has an angle more than 90\u00b0\"))\n\nangle_type()\n\n","244":"Similar lines in 2 files\n==cricket_news:4\n==diction:6\nengine = pyttsx3.init()\nvoices = engine.getProperty('voices')\nengine.setProperty('voice', voices[0].id)\n\n\ndef speak(audio):\n    engine.say(audio)\n    engine.runAndWait()\n\n","245":"Similar lines in 2 files\n==Sorted_Inserted_Linked_List:0\n==Split_Circular_Linked_List:0\nclass Node:\n    def __init__(self, data):\n        self.data = data\n        self.next = None\n\n\nclass Circular_Linked_List:\n    def __init__(self):\n        self.head = None\n","246":"Similar lines in 5 files\n==Delete_Linked_List:10\n==Detect_Remove_loop:10\n==Insert_operation_on_Linked_List:22\n==Reverse_list_in_groups:10\n==Sorting_List:10\n    def Insert_At_End(self, new_data):\n        new_node = Node(new_data)\n        if self.head is None:\n            self.head = new_node\n            return\n        current = self.head\n        while(current.next):\n            current = current.next\n        current.next = new_node\n","247":"Similar lines in 5 files\n==Delete_Linked_List:36\n==Detect_Remove_loop:42\n==Insert_operation_on_Linked_List:32\n==Rotate_Linked_List:35\n==Sorting_List:34\n    def Display(self):\n        temp = self.head\n        while(temp):\n            print(temp.data, \"->\", end=\" \")\n            temp = temp.next\n        print(\"None\")\n\n\nif __name__ == \"__main__\":\n    L_list = Linked_List()","248":"Similar lines in 6 files\n==Add_two_Linked_List:0\n==Delete_Linked_List:0\n==Detect_Remove_loop:0\n==Insert_operation_on_Linked_List:0\n==Rotate_Linked_List:0\n==Sorting_List:0\nclass Node:\n    def __init__(self, data):\n        self.data = data\n        self.next = None\n\n\nclass Linked_List:\n    def __init__(self):\n        self.head = None\n","249":"Similar lines in 2 files\n==factor:0\n==factorial:1\ndef factorial(n):\n    if n == 0:\n        return 1\n    else:\n        return n * factorial(n - 1)\n\n\nn = int(input(\"Input a number to compute the factiorial : \"))\nprint(factorial(n))","250":"Similar lines in 2 files\n==Binary_Insertion_Sort:17\n==Linear_Insertion_Sort:12\n        Test_arr.pop(i)\n        Test_arr.insert(j, val)\n    return Test_arr\n\n\nif __name__ == \"__main__\":\n    Test_list = input(\"Enter the list of Numbers: \").split()\n    Test_list = [int(i) for i in Test_list]\n    print(f\"Binary Insertion Sort: {Insertion_Sort(Test_list)}\")","251":"Similar lines in 7 files\n==Add_two_Linked_List:41\n==Delete_Linked_List:36\n==Detect_Remove_loop:42\n==Insert_operation_on_Linked_List:32\n==Reverse_list_in_groups:34\n==Rotate_Linked_List:35\n==Sorting_List:34\n    def Display(self):\n        temp = self.head\n        while(temp):\n            print(temp.data, \"->\", end=\" \")\n            temp = temp.next\n        print(\"None\")\n\n\nif __name__ == \"__main__\":","252":"Similar lines in 2 files\n==powerup_checks:78\n==work_connect:24\n    if len(sys.argv) < 2:  # Check there is an argument being passed\n        print(text)  # Display the help text if there isn't one passed\n        sys.exit()  # Exit the script\n\n    if '-h' in sys.argv or '--h' in sys.argv or '-help' in sys.argv or '--help' in sys.argv:  # If the ask for help\n        print(text)  # Display the help text if there isn't one passed\n        sys.exit(0)  # Exit the script after displaying help\n    else:","253":"Similar lines in 2 files\n==logs:15\n==puttylogs:17\nzip_program = \"zip.exe\"  # Set the Variable zip_program - 1.1\n\nfor files in os.listdir(logsdir):  # Find all the files in the directory\n    if files.endswith(\".log\"):  # Check to ensure the files in the directory end in .log\n        files1 = files + \".\" + strftime(\n            \"%Y-%m-%d\") + \".zip\"  # Create the Variable files1, this is the files in the directory, then we add a suffix with the date and the zip extension\n        os.chdir(logsdir)  # Change directory to the logsdir\n        os.system(zip_program + \" \" + files1 + \" \" + files)  # Zip the logs into dated zip files for each server. - 1.1","254":"Similar lines in 2 files\n==Type of angles of a triangle:2\n==Type_of_angles_of_triangle:3\ndef angle_type():\n    angles = []\n\n    myDict = {\"All angles are less than 90\u00b0.\":\"Acute Angle Triangle\",\"Has a right angle (90\u00b0)\":\"Right Angle Triangle\",\n              \"Has an angle more than 90\u00b0\":\"Obtuse Angle triangle\"}\n\n    print(\"**************Enter the angles of your triangle to know it's type*********\")\n","255":"Similar lines in 2 files\n==daily_checks:21\n==script_count:19\ndef clear_screen():  # Function to clear the screen\n    if os.name == \"posix\":  # Unix\/Linux\/MacOS\/BSD\/etc\n        os.system('clear')  # Clear the Screen\n    elif os.name in (\"nt\", \"dos\", \"ce\"):  # DOS\/Windows\n        os.system('CLS')  # Clear the Screen\n\n","256":"Similar lines in 2 files\n==blackJackGUI:18\n==classicIndianCardMatch:9\n    def __init__(self, suit, rank):\n        if (suit in SUITS) and (rank in RANKS):\n            self.suit = suit\n            self.rank = rank\n        else:\n            self.suit = None\n            self.rank = None","257":"Similar lines in 2 files\n==Type of angles of a triangle:34\n==Type_of_angles_of_triangle:57\n    sum_of_angles = angle1 + angle2 +angle3\n    if(sum_of_angles > 180 or sum_of_angles < 180):\n        print(\"It is not a triangle!Please enter valid angles.\")\n        return -1\n\n    print(\"You have entered : \" +str(angles))\n","258":"Similar lines in 2 files\n==Delete_Linked_List:46\n==Reverse_list_in_groups:44\n    L_list.Insert_At_End(1)\n    L_list.Insert_At_End(2)\n    L_list.Insert_At_End(3)\n    L_list.Insert_At_End(4)\n    L_list.Insert_At_End(5)\n    L_list.Insert_At_End(6)\n    L_list.Insert_At_End(7)"},"number":{"0":"R1732","1":"W0401","2":"W0201","3":"W0201","4":"W0201","5":"C0200","6":"R1732","7":"R1710","8":"W0622","9":"R1732","10":"R1732","11":"R1732","12":"R1732","13":"R1732","14":"R1732","15":"W0622","16":"W0622","17":"R1732","18":"R1732","19":"C0121","20":"R1732","21":"R1732","22":"R1732","23":"R1732","24":"R1732","25":"R1732","26":"R1732","27":"R1710","28":"W0201","29":"W0201","30":"W0201","31":"W0201","32":"W0201","33":"W0201","34":"W0201","35":"W0201","36":"W0201","37":"W0201","38":"W0201","39":"W0201","40":"W0201","41":"W0201","42":"C0200","43":"C0200","44":"C0121","45":"C0121","46":"C0121","47":"R1710","48":"W0401","49":"W0622","50":"R1714","51":"R1714","52":"W0622","53":"R1710","54":"C0200","55":"W0401","56":"W0622","57":"W0622","58":"W0401","59":"R1714","60":"C0121","61":"R1710","62":"R1710","63":"W0622","64":"C0121","65":"W0622","66":"W0622","67":"R1732","68":"R1732","69":"C0121","70":"C0200","71":"W0201","72":"C0121","73":"C0121","74":"C0121","75":"C0121","76":"R1714","77":"R1714","78":"C0121","79":"C0121","80":"C0121","81":"R1714","82":"C0200","83":"R1732","84":"R1732","85":"R1732","86":"C0121","87":"C0200","88":"C0121","89":"C0200","90":"C0200","91":"R1732","92":"R1732","93":"R1732","94":"R1732","95":"R1732","96":"R1732","97":"W0201","98":"R1710","99":"W0622","100":"R1732","101":"W0401","102":"W0401","103":"W0622","104":"R1710","105":"C0200","106":"C0200","107":"C0200","108":"C0200","109":"C0200","110":"C0200","111":"C0200","112":"R1732","113":"R1732","114":"R1732","115":"R1732","116":"R1714","117":"R1732","118":"W0622","119":"W0401","120":"W0622","121":"R1732","122":"W0622","123":"W0622","124":"C0200","125":"W0401","126":"W0401","127":"R1710","128":"R1732","129":"C0200","130":"C0200","131":"C0200","132":"R1714","133":"W0622","134":"R1732","135":"R1732","136":"C0200","137":"C0200","138":"C0121","139":"C0121","140":"R1732","141":"R1732","142":"W0401","143":"R1732","144":"R1732","145":"C1801","146":"R1732","147":"R1732","148":"R1732","149":"W0401","150":"W0622","151":"W0401","152":"W0401","153":"R1732","154":"R1732","155":"C0121","156":"C0121","157":"R1732","158":"R1732","159":"R1732","160":"R1732","161":"R1732","162":"R1732","163":"R1732","164":"R1732","165":"R1732","166":"R1732","167":"R1732","168":"R1732","169":"R1732","170":"R1732","171":"C0121","172":"R1732","173":"W0622","174":"W0622","175":"R1732","176":"W0401","177":"W0622","178":"R1732","179":"C0121","180":"W0401","181":"R1714","182":"W0401","183":"W0622","184":"R1710","185":"R1714","186":"R1714","187":"W0622","188":"R1732","189":"R1732","190":"W0622","191":"R1732","192":"R1732","193":"R1732","194":"R1732","195":"W0201","196":"W0201","197":"R1732","198":"R1732","199":"R1732","200":"R1732","201":"C0200","202":"C0200","203":"C0200","204":"R1732","205":"C0121","206":"R1732","207":"R1710","208":"R1710","209":"R1710","210":"C0200","211":"C0200","212":"C0200","213":"W0622","214":"W0102","215":"W0622","216":"R1732","217":"R1732","218":"R1732","219":"C0200","220":"C0121","221":"C0200","222":"C0121","223":"R1710","224":"W0622","225":"W0622","226":"C0200","227":"C0200","228":"C0121","229":"W0622","230":"W0401","231":"W0401","232":"R1732","233":"R1732","234":"R1732","235":"R1732","236":"R0801","237":"R0801","238":"R0801","239":"R0801","240":"R0801","241":"R0801","242":"R0801","243":"R0801","244":"R0801","245":"R0801","246":"R0801","247":"R0801","248":"R0801","249":"R0801","250":"R0801","251":"R0801","252":"R0801","253":"R0801","254":"R0801","255":"R0801","256":"R0801","257":"R0801","258":"R0801"},"linter":{"0":"pylint","1":"pylint","2":"pylint","3":"pylint","4":"pylint","5":"pylint","6":"pylint","7":"pylint","8":"pylint","9":"pylint","10":"pylint","11":"pylint","12":"pylint","13":"pylint","14":"pylint","15":"pylint","16":"pylint","17":"pylint","18":"pylint","19":"pylint","20":"pylint","21":"pylint","22":"pylint","23":"pylint","24":"pylint","25":"pylint","26":"pylint","27":"pylint","28":"pylint","29":"pylint","30":"pylint","31":"pylint","32":"pylint","33":"pylint","34":"pylint","35":"pylint","36":"pylint","37":"pylint","38":"pylint","39":"pylint","40":"pylint","41":"pylint","42":"pylint","43":"pylint","44":"pylint","45":"pylint","46":"pylint","47":"pylint","48":"pylint","49":"pylint","50":"pylint","51":"pylint","52":"pylint","53":"pylint","54":"pylint","55":"pylint","56":"pylint","57":"pylint","58":"pylint","59":"pylint","60":"pylint","61":"pylint","62":"pylint","63":"pylint","64":"pylint","65":"pylint","66":"pylint","67":"pylint","68":"pylint","69":"pylint","70":"pylint","71":"pylint","72":"pylint","73":"pylint","74":"pylint","75":"pylint","76":"pylint","77":"pylint","78":"pylint","79":"pylint","80":"pylint","81":"pylint","82":"pylint","83":"pylint","84":"pylint","85":"pylint","86":"pylint","87":"pylint","88":"pylint","89":"pylint","90":"pylint","91":"pylint","92":"pylint","93":"pylint","94":"pylint","95":"pylint","96":"pylint","97":"pylint","98":"pylint","99":"pylint","100":"pylint","101":"pylint","102":"pylint","103":"pylint","104":"pylint","105":"pylint","106":"pylint","107":"pylint","108":"pylint","109":"pylint","110":"pylint","111":"pylint","112":"pylint","113":"pylint","114":"pylint","115":"pylint","116":"pylint","117":"pylint","118":"pylint","119":"pylint","120":"pylint","121":"pylint","122":"pylint","123":"pylint","124":"pylint","125":"pylint","126":"pylint","127":"pylint","128":"pylint","129":"pylint","130":"pylint","131":"pylint","132":"pylint","133":"pylint","134":"pylint","135":"pylint","136":"pylint","137":"pylint","138":"pylint","139":"pylint","140":"pylint","141":"pylint","142":"pylint","143":"pylint","144":"pylint","145":"pylint","146":"pylint","147":"pylint","148":"pylint","149":"pylint","150":"pylint","151":"pylint","152":"pylint","153":"pylint","154":"pylint","155":"pylint","156":"pylint","157":"pylint","158":"pylint","159":"pylint","160":"pylint","161":"pylint","162":"pylint","163":"pylint","164":"pylint","165":"pylint","166":"pylint","167":"pylint","168":"pylint","169":"pylint","170":"pylint","171":"pylint","172":"pylint","173":"pylint","174":"pylint","175":"pylint","176":"pylint","177":"pylint","178":"pylint","179":"pylint","180":"pylint","181":"pylint","182":"pylint","183":"pylint","184":"pylint","185":"pylint","186":"pylint","187":"pylint","188":"pylint","189":"pylint","190":"pylint","191":"pylint","192":"pylint","193":"pylint","194":"pylint","195":"pylint","196":"pylint","197":"pylint","198":"pylint","199":"pylint","200":"pylint","201":"pylint","202":"pylint","203":"pylint","204":"pylint","205":"pylint","206":"pylint","207":"pylint","208":"pylint","209":"pylint","210":"pylint","211":"pylint","212":"pylint","213":"pylint","214":"pylint","215":"pylint","216":"pylint","217":"pylint","218":"pylint","219":"pylint","220":"pylint","221":"pylint","222":"pylint","223":"pylint","224":"pylint","225":"pylint","226":"pylint","227":"pylint","228":"pylint","229":"pylint","230":"pylint","231":"pylint","232":"pylint","233":"pylint","234":"pylint","235":"pylint","236":"pylint","237":"pylint","238":"pylint","239":"pylint","240":"pylint","241":"pylint","242":"pylint","243":"pylint","244":"pylint","245":"pylint","246":"pylint","247":"pylint","248":"pylint","249":"pylint","250":"pylint","251":"pylint","252":"pylint","253":"pylint","254":"pylint","255":"pylint","256":"pylint","257":"pylint","258":"pylint"},"lines_amount":{"0":48,"1":76,"2":76,"3":76,"4":76,"5":82,"6":38,"7":59,"8":115,"9":115,"10":115,"11":115,"12":115,"13":115,"14":38,"15":55,"16":394,"17":394,"18":394,"19":394,"20":394,"21":394,"22":394,"23":394,"24":394,"25":394,"26":394,"27":56,"28":126,"29":126,"30":126,"31":126,"32":126,"33":126,"34":126,"35":126,"36":126,"37":126,"38":126,"39":126,"40":126,"41":126,"42":126,"43":21,"44":67,"45":67,"46":67,"47":41,"48":117,"49":66,"50":129,"51":129,"52":18,"53":44,"54":38,"55":20,"56":13,"57":13,"58":30,"59":177,"60":177,"61":54,"62":77,"63":36,"64":36,"65":21,"66":13,"67":13,"68":33,"69":383,"70":159,"71":159,"72":159,"73":159,"74":1343,"75":1343,"76":1343,"77":1343,"78":1343,"79":1343,"80":1343,"81":1343,"82":51,"83":82,"84":44,"85":44,"86":105,"87":105,"88":105,"89":105,"90":13,"91":20,"92":80,"93":80,"94":80,"95":80,"96":80,"97":100,"98":100,"99":95,"100":64,"101":67,"102":67,"103":42,"104":158,"105":82,"106":82,"107":82,"108":82,"109":82,"110":82,"111":82,"112":27,"113":38,"114":68,"115":68,"116":76,"117":32,"118":35,"119":174,"120":64,"121":29,"122":9,"123":18,"124":18,"125":74,"126":74,"127":113,"128":51,"129":137,"130":137,"131":137,"132":137,"133":67,"134":67,"135":67,"136":21,"137":21,"138":42,"139":42,"140":15,"141":15,"142":215,"143":49,"144":49,"145":60,"146":71,"147":71,"148":42,"149":22,"150":67,"151":67,"152":67,"153":67,"154":67,"155":67,"156":67,"157":50,"158":50,"159":50,"160":50,"161":50,"162":50,"163":50,"164":50,"165":106,"166":106,"167":106,"168":106,"169":106,"170":106,"171":106,"172":106,"173":50,"174":44,"175":44,"176":9,"177":78,"178":78,"179":78,"180":168,"181":6,"182":59,"183":59,"184":50,"185":50,"186":50,"187":22,"188":36,"189":27,"190":30,"191":148,"192":148,"193":148,"194":148,"195":125,"196":125,"197":125,"198":103,"199":103,"200":103,"201":21,"202":21,"203":21,"204":105,"205":53,"206":46,"207":57,"208":57,"209":26,"210":83,"211":83,"212":83,"213":140,"214":140,"215":140,"216":140,"217":140,"218":140,"219":117,"220":117,"221":117,"222":117,"223":117,"224":83,"225":83,"226":17,"227":17,"228":45,"229":55,"230":61,"231":25,"232":44,"233":44,"234":44,"235":44,"236":41,"237":41,"238":41,"239":41,"240":41,"241":41,"242":41,"243":41,"244":41,"245":41,"246":41,"247":41,"248":41,"249":41,"250":41,"251":41,"252":41,"253":41,"254":41,"255":41,"256":41,"257":41,"258":41},"commit":{"0":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","1":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","2":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","3":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","4":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","5":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","6":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","7":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","8":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","9":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","10":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","11":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","12":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","13":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","14":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","15":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","16":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","17":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","18":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","19":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","20":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","21":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","22":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","23":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","24":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","25":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","26":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","27":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","28":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","29":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","30":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","31":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","32":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","33":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","34":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","35":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","36":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","37":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","38":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","39":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","40":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","41":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","42":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","43":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","44":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","45":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","46":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","47":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","48":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","49":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","50":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","51":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","52":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","53":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","54":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","55":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","56":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","57":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","58":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","59":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","60":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","61":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","62":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","63":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","64":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","65":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","66":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","67":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","68":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","69":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","70":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","71":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","72":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","73":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","74":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","75":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","76":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","77":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","78":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","79":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","80":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","81":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","82":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","83":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","84":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","85":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","86":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","87":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","88":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","89":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","90":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","91":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","92":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","93":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","94":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","95":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","96":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","97":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","98":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","99":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","100":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","101":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","102":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","103":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","104":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","105":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","106":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","107":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","108":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","109":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","110":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","111":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","112":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","113":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","114":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","115":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","116":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","117":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","118":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","119":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","120":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","121":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","122":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","123":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","124":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","125":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","126":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","127":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","128":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","129":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","130":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","131":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","132":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","133":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","134":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","135":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","136":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","137":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","138":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","139":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","140":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","141":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","142":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","143":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","144":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","145":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","146":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","147":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","148":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","149":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","150":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","151":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","152":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","153":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","154":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","155":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","156":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","157":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","158":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","159":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","160":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","161":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","162":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","163":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","164":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","165":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","166":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","167":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","168":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","169":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","170":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","171":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","172":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","173":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","174":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","175":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","176":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","177":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","178":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","179":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","180":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","181":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","182":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","183":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","184":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","185":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","186":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","187":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","188":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","189":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","190":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","191":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","192":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","193":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","194":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","195":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","196":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","197":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","198":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","199":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","200":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","201":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","202":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","203":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","204":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","205":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","206":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","207":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","208":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","209":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","210":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","211":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","212":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","213":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","214":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","215":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","216":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","217":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","218":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","219":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","220":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","221":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","222":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","223":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","224":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","225":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","226":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","227":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","228":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","229":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","230":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","231":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","232":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","233":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","234":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","235":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","236":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","237":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","238":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","239":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","240":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","241":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","242":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","243":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","244":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","245":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","246":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","247":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","248":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","249":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","250":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","251":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","252":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","253":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","254":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","255":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","256":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","257":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192","258":"5a90083709b6f6d1d4fbc07bbd61b6ec2a955192"},"repo":{"0":"geekcomputers\/Python","1":"geekcomputers\/Python","2":"geekcomputers\/Python","3":"geekcomputers\/Python","4":"geekcomputers\/Python","5":"geekcomputers\/Python","6":"geekcomputers\/Python","7":"geekcomputers\/Python","8":"geekcomputers\/Python","9":"geekcomputers\/Python","10":"geekcomputers\/Python","11":"geekcomputers\/Python","12":"geekcomputers\/Python","13":"geekcomputers\/Python","14":"geekcomputers\/Python","15":"geekcomputers\/Python","16":"geekcomputers\/Python","17":"geekcomputers\/Python","18":"geekcomputers\/Python","19":"geekcomputers\/Python","20":"geekcomputers\/Python","21":"geekcomputers\/Python","22":"geekcomputers\/Python","23":"geekcomputers\/Python","24":"geekcomputers\/Python","25":"geekcomputers\/Python","26":"geekcomputers\/Python","27":"geekcomputers\/Python","28":"geekcomputers\/Python","29":"geekcomputers\/Python","30":"geekcomputers\/Python","31":"geekcomputers\/Python","32":"geekcomputers\/Python","33":"geekcomputers\/Python","34":"geekcomputers\/Python","35":"geekcomputers\/Python","36":"geekcomputers\/Python","37":"geekcomputers\/Python","38":"geekcomputers\/Python","39":"geekcomputers\/Python","40":"geekcomputers\/Python","41":"geekcomputers\/Python","42":"geekcomputers\/Python","43":"geekcomputers\/Python","44":"geekcomputers\/Python","45":"geekcomputers\/Python","46":"geekcomputers\/Python","47":"geekcomputers\/Python","48":"geekcomputers\/Python","49":"geekcomputers\/Python","50":"geekcomputers\/Python","51":"geekcomputers\/Python","52":"geekcomputers\/Python","53":"geekcomputers\/Python","54":"geekcomputers\/Python","55":"geekcomputers\/Python","56":"geekcomputers\/Python","57":"geekcomputers\/Python","58":"geekcomputers\/Python","59":"geekcomputers\/Python","60":"geekcomputers\/Python","61":"geekcomputers\/Python","62":"geekcomputers\/Python","63":"geekcomputers\/Python","64":"geekcomputers\/Python","65":"geekcomputers\/Python","66":"geekcomputers\/Python","67":"geekcomputers\/Python","68":"geekcomputers\/Python","69":"geekcomputers\/Python","70":"geekcomputers\/Python","71":"geekcomputers\/Python","72":"geekcomputers\/Python","73":"geekcomputers\/Python","74":"geekcomputers\/Python","75":"geekcomputers\/Python","76":"geekcomputers\/Python","77":"geekcomputers\/Python","78":"geekcomputers\/Python","79":"geekcomputers\/Python","80":"geekcomputers\/Python","81":"geekcomputers\/Python","82":"geekcomputers\/Python","83":"geekcomputers\/Python","84":"geekcomputers\/Python","85":"geekcomputers\/Python","86":"geekcomputers\/Python","87":"geekcomputers\/Python","88":"geekcomputers\/Python","89":"geekcomputers\/Python","90":"geekcomputers\/Python","91":"geekcomputers\/Python","92":"geekcomputers\/Python","93":"geekcomputers\/Python","94":"geekcomputers\/Python","95":"geekcomputers\/Python","96":"geekcomputers\/Python","97":"geekcomputers\/Python","98":"geekcomputers\/Python","99":"geekcomputers\/Python","100":"geekcomputers\/Python","101":"geekcomputers\/Python","102":"geekcomputers\/Python","103":"geekcomputers\/Python","104":"geekcomputers\/Python","105":"geekcomputers\/Python","106":"geekcomputers\/Python","107":"geekcomputers\/Python","108":"geekcomputers\/Python","109":"geekcomputers\/Python","110":"geekcomputers\/Python","111":"geekcomputers\/Python","112":"geekcomputers\/Python","113":"geekcomputers\/Python","114":"geekcomputers\/Python","115":"geekcomputers\/Python","116":"geekcomputers\/Python","117":"geekcomputers\/Python","118":"geekcomputers\/Python","119":"geekcomputers\/Python","120":"geekcomputers\/Python","121":"geekcomputers\/Python","122":"geekcomputers\/Python","123":"geekcomputers\/Python","124":"geekcomputers\/Python","125":"geekcomputers\/Python","126":"geekcomputers\/Python","127":"geekcomputers\/Python","128":"geekcomputers\/Python","129":"geekcomputers\/Python","130":"geekcomputers\/Python","131":"geekcomputers\/Python","132":"geekcomputers\/Python","133":"geekcomputers\/Python","134":"geekcomputers\/Python","135":"geekcomputers\/Python","136":"geekcomputers\/Python","137":"geekcomputers\/Python","138":"geekcomputers\/Python","139":"geekcomputers\/Python","140":"geekcomputers\/Python","141":"geekcomputers\/Python","142":"geekcomputers\/Python","143":"geekcomputers\/Python","144":"geekcomputers\/Python","145":"geekcomputers\/Python","146":"geekcomputers\/Python","147":"geekcomputers\/Python","148":"geekcomputers\/Python","149":"geekcomputers\/Python","150":"geekcomputers\/Python","151":"geekcomputers\/Python","152":"geekcomputers\/Python","153":"geekcomputers\/Python","154":"geekcomputers\/Python","155":"geekcomputers\/Python","156":"geekcomputers\/Python","157":"geekcomputers\/Python","158":"geekcomputers\/Python","159":"geekcomputers\/Python","160":"geekcomputers\/Python","161":"geekcomputers\/Python","162":"geekcomputers\/Python","163":"geekcomputers\/Python","164":"geekcomputers\/Python","165":"geekcomputers\/Python","166":"geekcomputers\/Python","167":"geekcomputers\/Python","168":"geekcomputers\/Python","169":"geekcomputers\/Python","170":"geekcomputers\/Python","171":"geekcomputers\/Python","172":"geekcomputers\/Python","173":"geekcomputers\/Python","174":"geekcomputers\/Python","175":"geekcomputers\/Python","176":"geekcomputers\/Python","177":"geekcomputers\/Python","178":"geekcomputers\/Python","179":"geekcomputers\/Python","180":"geekcomputers\/Python","181":"geekcomputers\/Python","182":"geekcomputers\/Python","183":"geekcomputers\/Python","184":"geekcomputers\/Python","185":"geekcomputers\/Python","186":"geekcomputers\/Python","187":"geekcomputers\/Python","188":"geekcomputers\/Python","189":"geekcomputers\/Python","190":"geekcomputers\/Python","191":"geekcomputers\/Python","192":"geekcomputers\/Python","193":"geekcomputers\/Python","194":"geekcomputers\/Python","195":"geekcomputers\/Python","196":"geekcomputers\/Python","197":"geekcomputers\/Python","198":"geekcomputers\/Python","199":"geekcomputers\/Python","200":"geekcomputers\/Python","201":"geekcomputers\/Python","202":"geekcomputers\/Python","203":"geekcomputers\/Python","204":"geekcomputers\/Python","205":"geekcomputers\/Python","206":"geekcomputers\/Python","207":"geekcomputers\/Python","208":"geekcomputers\/Python","209":"geekcomputers\/Python","210":"geekcomputers\/Python","211":"geekcomputers\/Python","212":"geekcomputers\/Python","213":"geekcomputers\/Python","214":"geekcomputers\/Python","215":"geekcomputers\/Python","216":"geekcomputers\/Python","217":"geekcomputers\/Python","218":"geekcomputers\/Python","219":"geekcomputers\/Python","220":"geekcomputers\/Python","221":"geekcomputers\/Python","222":"geekcomputers\/Python","223":"geekcomputers\/Python","224":"geekcomputers\/Python","225":"geekcomputers\/Python","226":"geekcomputers\/Python","227":"geekcomputers\/Python","228":"geekcomputers\/Python","229":"geekcomputers\/Python","230":"geekcomputers\/Python","231":"geekcomputers\/Python","232":"geekcomputers\/Python","233":"geekcomputers\/Python","234":"geekcomputers\/Python","235":"geekcomputers\/Python","236":"geekcomputers\/Python","237":"geekcomputers\/Python","238":"geekcomputers\/Python","239":"geekcomputers\/Python","240":"geekcomputers\/Python","241":"geekcomputers\/Python","242":"geekcomputers\/Python","243":"geekcomputers\/Python","244":"geekcomputers\/Python","245":"geekcomputers\/Python","246":"geekcomputers\/Python","247":"geekcomputers\/Python","248":"geekcomputers\/Python","249":"geekcomputers\/Python","250":"geekcomputers\/Python","251":"geekcomputers\/Python","252":"geekcomputers\/Python","253":"geekcomputers\/Python","254":"geekcomputers\/Python","255":"geekcomputers\/Python","256":"geekcomputers\/Python","257":"geekcomputers\/Python","258":"geekcomputers\/Python"}}