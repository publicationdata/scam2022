{"type":{"0":"R","1":"R","2":"R","3":"C","4":"C","5":"W","6":"W","7":"W","8":"R"},"module":{"0":"conftest","1":"conftest","2":"docopt","3":"docopt","4":"docopt","5":"docopt","6":"docopt","7":"setup","8":"setup"},"obj":{"0":"pytest_collect_file","1":"DocoptTestItem.repr_failure","2":"Pattern.fix_identities","3":"Tokens.move","4":"Tokens.current","5":"extras","6":"docopt","7":"PyTestCommand.finalize_options","8":""},"lnum":{"0":12,"1":64,"2":45,"3":295,"4":298,"5":476,"6":490,"7":14,"8":32},"col":{"0":0,"1":4,"2":4,"3":30,"4":26,"5":11,"6":27,"7":8,"8":21},"filename":{"0":"conftest.py","1":"conftest.py","2":"docopt.py","3":"docopt.py","4":"docopt.py","5":"docopt.py","6":"docopt.py","7":"setup.py","8":"setup.py"},"symbol":{"0":"inconsistent-return-statements","1":"inconsistent-return-statements","2":"inconsistent-return-statements","3":"len-as-condition","4":"len-as-condition","5":"redefined-builtin","6":"redefined-builtin","7":"attribute-defined-outside-init","8":"consider-using-with"},"text":{"0":"Either all return statements in a function should return an expression, or none of them should.","1":"Either all return statements in a function should return an expression, or none of them should.","2":"Either all return statements in a function should return an expression, or none of them should.","3":"Do not use `len(SEQUENCE)` without comparison to determine if a sequence is empty","4":"Do not use `len(SEQUENCE)` without comparison to determine if a sequence is empty","5":"Redefining built-in 'help'","6":"Redefining built-in 'help'","7":"Attribute 'test_suite' defined outside __init__","8":"Consider using 'with' for resource-allocating operations"},"number":{"0":"R1710","1":"R1710","2":"R1710","3":"C1801","4":"C1801","5":"W0622","6":"W0622","7":"W0201","8":"R1732"},"linter":{"0":"pylint","1":"pylint","2":"pylint","3":"pylint","4":"pylint","5":"pylint","6":"pylint","7":"pylint","8":"pylint"},"lines_amount":{"0":81,"1":81,"2":582,"3":582,"4":582,"5":582,"6":582,"7":51,"8":51},"commit":{"0":"20b9c4ffec71d17cee9fd963238c8ec240905b65","1":"20b9c4ffec71d17cee9fd963238c8ec240905b65","2":"20b9c4ffec71d17cee9fd963238c8ec240905b65","3":"20b9c4ffec71d17cee9fd963238c8ec240905b65","4":"20b9c4ffec71d17cee9fd963238c8ec240905b65","5":"20b9c4ffec71d17cee9fd963238c8ec240905b65","6":"20b9c4ffec71d17cee9fd963238c8ec240905b65","7":"20b9c4ffec71d17cee9fd963238c8ec240905b65","8":"20b9c4ffec71d17cee9fd963238c8ec240905b65"},"repo":{"0":"docopt\/docopt","1":"docopt\/docopt","2":"docopt\/docopt","3":"docopt\/docopt","4":"docopt\/docopt","5":"docopt\/docopt","6":"docopt\/docopt","7":"docopt\/docopt","8":"docopt\/docopt"},"stargazers":{"0":7463,"1":7463,"2":7463,"3":7463,"4":7463,"5":7463,"6":7463,"7":7463,"8":7463}}