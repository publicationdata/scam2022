{"type":{"0":"W","1":"W","2":"W","3":"W","4":"W","5":"W","6":"W","7":"W","8":"W","9":"R","10":"R"},"module":{"0":"kernprof","1":"kernprof","2":"kernprof","3":"kernprof","4":"kernprof","5":"kernprof","6":"line_profiler","7":"line_profiler","8":"line_profiler","9":"line_profiler","10":"setup"},"obj":{"0":"execfile","1":"execfile","2":"ContextualProfile.wrap_generator.wrapper","3":"ContextualProfile.__exit__","4":"find_script","5":"main","6":"LineProfiler.wrap_generator.wrapper","7":"LineProfiler.runctx","8":"LineProfiler.runctx","9":"LineProfilerMagics.lprun","10":""},"lnum":{"0":33,"1":33,"2":99,"3":126,"4":138,"5":190,"6":97,"7":146,"8":146,"9":384,"10":1},"col":{"0":27,"1":41,"2":12,"3":4,"4":8,"5":8,"6":12,"7":26,"8":35,"9":20,"10":0},"filename":{"0":"kernprof.py","1":"kernprof.py","2":"kernprof.py","3":"kernprof.py","4":"kernprof.py","5":"kernprof.py","6":"line_profiler.py","7":"line_profiler.py","8":"line_profiler.py","9":"line_profiler.py","10":"setup.py"},"symbol":{"0":"redefined-builtin","1":"redefined-builtin","2":"redefined-builtin","3":"arguments-differ","4":"redefined-builtin","5":"redefined-builtin","6":"redefined-builtin","7":"redefined-builtin","8":"redefined-builtin","9":"consider-using-with","10":"duplicate-code"},"text":{"0":"Redefining built-in 'globals'","1":"Redefining built-in 'locals'","2":"Redefining built-in 'input'","3":"Variadics removed in overridden 'ContextualProfile.__exit__' method","4":"Redefining built-in 'dir'","5":"Redefining built-in '__name__'","6":"Redefining built-in 'input'","7":"Redefining built-in 'globals'","8":"Redefining built-in 'locals'","9":"Consider using 'with' for resource-allocating operations","10":"Similar lines in 2 files\n==kernprof:86\n==line_profiler:84\n    def wrap_generator(self, func):\n        \"\"\" Wrap a generator to profile it.\n        \"\"\"\n        @functools.wraps(func)\n        def wrapper(*args, **kwds):\n            g = func(*args, **kwds)\n            # The first iterate will not be a .send()\n            self.enable_by_count()\n            try:\n                item = next(g)\n            finally:\n                self.disable_by_count()\n            input = (yield item)\n            # But any following one might be.\n            while True:\n                self.enable_by_count()\n                try:\n                    item = g.send(input)\n                finally:\n                    self.disable_by_count()\n                input = (yield item)\n        return wrapper\n\n    def wrap_function(self, func):\n        \"\"\" Wrap a function to profile it.\n        \"\"\"\n        @functools.wraps(func)\n        def wrapper(*args, **kwds):\n            self.enable_by_count()\n            try:\n                result = func(*args, **kwds)\n            finally:\n                self.disable_by_count()\n            return result\n        return wrapper\n"},"number":{"0":"W0622","1":"W0622","2":"W0622","3":"W0221","4":"W0622","5":"W0622","6":"W0622","7":"W0622","8":"W0622","9":"R1732","10":"R0801"},"linter":{"0":"pylint","1":"pylint","2":"pylint","3":"pylint","4":"pylint","5":"pylint","6":"pylint","7":"pylint","8":"pylint","9":"pylint","10":"pylint"},"lines_amount":{"0":235,"1":235,"2":235,"3":235,"4":235,"5":235,"6":423,"7":423,"8":423,"9":423,"10":86},"commit":{"0":"3cdc2fab6793802d31130b1af2705bddebf6f7fd","1":"3cdc2fab6793802d31130b1af2705bddebf6f7fd","2":"3cdc2fab6793802d31130b1af2705bddebf6f7fd","3":"3cdc2fab6793802d31130b1af2705bddebf6f7fd","4":"3cdc2fab6793802d31130b1af2705bddebf6f7fd","5":"3cdc2fab6793802d31130b1af2705bddebf6f7fd","6":"3cdc2fab6793802d31130b1af2705bddebf6f7fd","7":"3cdc2fab6793802d31130b1af2705bddebf6f7fd","8":"3cdc2fab6793802d31130b1af2705bddebf6f7fd","9":"3cdc2fab6793802d31130b1af2705bddebf6f7fd","10":"3cdc2fab6793802d31130b1af2705bddebf6f7fd"},"repo":{"0":"rkern\/line_profiler","1":"rkern\/line_profiler","2":"rkern\/line_profiler","3":"rkern\/line_profiler","4":"rkern\/line_profiler","5":"rkern\/line_profiler","6":"rkern\/line_profiler","7":"rkern\/line_profiler","8":"rkern\/line_profiler","9":"rkern\/line_profiler","10":"rkern\/line_profiler"},"stargazers":{"0":3555,"1":3555,"2":3555,"3":3555,"4":3555,"5":3555,"6":3555,"7":3555,"8":3555,"9":3555,"10":3555}}