{"type":{"0":"C","1":"W","2":"R","3":"W","4":"R","5":"R","6":"R","7":"W","8":"R","9":"W","10":"W"},"module":{"0":"configs","1":"inputs","2":"inputs","3":"inputs","4":"model_fns","5":"model_fns","6":"run_experiment","7":"run_experiment","8":"run_experiment","9":"run_experiment","10":"tasks"},"obj":{"0":"fetch_model_params","1":"sequential_input","2":"pred_input","3":"generic_text","4":"model_fn","5":"model_fn","6":"get_open_port","7":"train_thread","8":"train_thread","9":"goodbye","10":"lambada_input._get_output"},"lnum":{"0":42,"1":74,"2":145,"3":188,"4":138,"5":15,"6":44,"7":51,"8":66,"9":247,"10":92},"col":{"0":29,"1":47,"2":49,"3":25,"4":12,"5":0,"6":0,"7":28,"8":11,"9":12,"10":20},"filename":{"0":"configs.py","1":"inputs.py","2":"inputs.py","3":"inputs.py","4":"model_fns.py","5":"model_fns.py","6":"run_experiment.py","7":"run_experiment.py","8":"run_experiment.py","9":"run_experiment.py","10":"tasks.py"},"symbol":{"0":"singleton-comparison","1":"redefined-builtin","2":"consider-using-with","3":"redefined-builtin","4":"consider-using-in","5":"inconsistent-return-statements","6":"inconsistent-return-statements","7":"redefined-builtin","8":"consider-using-with","9":"redefined-builtin","10":"redefined-builtin"},"text":{"0":"Comparison 'params.get('mlm_training') == True' should be 'params.get('mlm_training') is True' if checking for the singleton value True, or 'bool(params.get('mlm_training'))' if testing for truthiness","1":"Redefining built-in 'eval'","2":"Consider using 'with' for resource-allocating operations","3":"Redefining built-in 'eval'","4":"Consider merging these comparisons with \"in\" to 'mode in (tf.estimator.ModeKeys.TRAIN, tf.estimator.ModeKeys.EVAL)'","5":"Either all return statements in a function should return an expression, or none of them should.","6":"Either all return statements in a function should return an expression, or none of them should.","7":"Redefining built-in 'id'","8":"Consider using 'with' for resource-allocating operations","9":"Redefining built-in 'id'","10":"Redefining built-in 'bin'"},"number":{"0":"C0121","1":"W0622","2":"R1732","3":"W0622","4":"R1714","5":"R1710","6":"R1710","7":"W0622","8":"R1732","9":"W0622","10":"W0622"},"linter":{"0":"pylint","1":"pylint","2":"pylint","3":"pylint","4":"pylint","5":"pylint","6":"pylint","7":"pylint","8":"pylint","9":"pylint","10":"pylint"},"lines_amount":{"0":48,"1":385,"2":385,"3":385,"4":306,"5":306,"6":266,"7":266,"8":266,"9":266,"10":117},"commit":{"0":"7fbd31be724aefd5e59b4eca2e5dd3416b7b97eb","1":"7fbd31be724aefd5e59b4eca2e5dd3416b7b97eb","2":"7fbd31be724aefd5e59b4eca2e5dd3416b7b97eb","3":"7fbd31be724aefd5e59b4eca2e5dd3416b7b97eb","4":"7fbd31be724aefd5e59b4eca2e5dd3416b7b97eb","5":"7fbd31be724aefd5e59b4eca2e5dd3416b7b97eb","6":"7fbd31be724aefd5e59b4eca2e5dd3416b7b97eb","7":"7fbd31be724aefd5e59b4eca2e5dd3416b7b97eb","8":"7fbd31be724aefd5e59b4eca2e5dd3416b7b97eb","9":"7fbd31be724aefd5e59b4eca2e5dd3416b7b97eb","10":"7fbd31be724aefd5e59b4eca2e5dd3416b7b97eb"},"repo":{"0":"EleutherAI\/gpt-neo","1":"EleutherAI\/gpt-neo","2":"EleutherAI\/gpt-neo","3":"EleutherAI\/gpt-neo","4":"EleutherAI\/gpt-neo","5":"EleutherAI\/gpt-neo","6":"EleutherAI\/gpt-neo","7":"EleutherAI\/gpt-neo","8":"EleutherAI\/gpt-neo","9":"EleutherAI\/gpt-neo","10":"EleutherAI\/gpt-neo"},"stargazers":{"0":5692,"1":5692,"2":5692,"3":5692,"4":5692,"5":5692,"6":5692,"7":5692,"8":5692,"9":5692,"10":5692}}