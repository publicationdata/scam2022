{"type":{"0":"C","1":"R","2":"C","3":"C","4":"C","5":"C","6":"C","7":"C","8":"C","9":"C","10":"C","11":"C"},"module":{"0":"MakeInstall","1":"MakeInstall","2":"MakeInstall","3":"MakeInstall","4":"MakeInstall","5":"MakeInstall","6":"MakeInstall","7":"MakeInstall","8":"MakeInstall","9":"MakeInstall","10":"MakeInstall","11":"MakeInstall"},"obj":{"0":"WinUSB.get_dl_info","1":"WinUSB.get_oc_dl_info","2":"WinUSB.install_oc","3":"WinUSB.install_oc","4":"WinUSB.install_oc","5":"WinUSB.install_clover","6":"WinUSB.install_clover","7":"WinUSB.install_clover","8":"WinUSB.install_clover","9":"WinUSB.main","10":"WinUSB.main","11":"WinUSB.main"},"lnum":{"0":196,"1":203,"2":452,"3":491,"4":499,"5":565,"6":566,"7":658,"8":666,"9":775,"10":800,"11":829},"col":{"0":32,"1":4,"2":11,"3":11,"4":11,"5":11,"6":15,"7":11,"8":11,"9":15,"10":11,"11":33},"filename":{"0":"MakeInstall.py","1":"MakeInstall.py","2":"MakeInstall.py","3":"MakeInstall.py","4":"MakeInstall.py","5":"MakeInstall.py","6":"MakeInstall.py","7":"MakeInstall.py","8":"MakeInstall.py","9":"MakeInstall.py","10":"MakeInstall.py","11":"MakeInstall.py"},"symbol":{"0":"singleton-comparison","1":"inconsistent-return-statements","2":"singleton-comparison","3":"singleton-comparison","4":"singleton-comparison","5":"singleton-comparison","6":"singleton-comparison","7":"singleton-comparison","8":"singleton-comparison","9":"len-as-condition","10":"len-as-condition","11":"len-as-condition"},"text":{"0":"Comparison 'clover_version == None' should be 'clover_version is None'","1":"Either all return statements in a function should return an expression, or none of them should.","2":"Comparison 'o == None' should be 'o is None'","3":"Comparison 'self.d.disks[str(disk['index'])].get('partitions', None) == None' should be 'self.d.disks[str(disk['index'])].get('partitions', None) is None'","4":"Comparison 'part == None' should be 'part is None'","5":"Comparison 'c == None' should be 'c is None'","6":"Comparison 'clover_version == None' should be 'clover_version is None'","7":"Comparison 'self.d.disks[str(disk['index'])].get('partitions', None) == None' should be 'self.d.disks[str(disk['index'])].get('partitions', None) is None'","8":"Comparison 'part == None' should be 'part is None'","9":"Do not use `len(SEQUENCE)` without comparison to determine if a sequence is empty","10":"Do not use `len(SEQUENCE)` without comparison to determine if a sequence is empty","11":"Do not use `len(SEQUENCE)` without comparison to determine if a sequence is empty"},"number":{"0":"C0121","1":"R1710","2":"C0121","3":"C0121","4":"C0121","5":"C0121","6":"C0121","7":"C0121","8":"C0121","9":"C1801","10":"C1801","11":"C1801"},"linter":{"0":"pylint","1":"pylint","2":"pylint","3":"pylint","4":"pylint","5":"pylint","6":"pylint","7":"pylint","8":"pylint","9":"pylint","10":"pylint","11":"pylint"},"lines_amount":{"0":880,"1":880,"2":880,"3":880,"4":880,"5":880,"6":880,"7":880,"8":880,"9":880,"10":880,"11":880},"commit":{"0":"9a683e716faef22c05183095ebc38c3611b16295","1":"9a683e716faef22c05183095ebc38c3611b16295","2":"9a683e716faef22c05183095ebc38c3611b16295","3":"9a683e716faef22c05183095ebc38c3611b16295","4":"9a683e716faef22c05183095ebc38c3611b16295","5":"9a683e716faef22c05183095ebc38c3611b16295","6":"9a683e716faef22c05183095ebc38c3611b16295","7":"9a683e716faef22c05183095ebc38c3611b16295","8":"9a683e716faef22c05183095ebc38c3611b16295","9":"9a683e716faef22c05183095ebc38c3611b16295","10":"9a683e716faef22c05183095ebc38c3611b16295","11":"9a683e716faef22c05183095ebc38c3611b16295"},"repo":{"0":"corpnewt\/gibMacOS","1":"corpnewt\/gibMacOS","2":"corpnewt\/gibMacOS","3":"corpnewt\/gibMacOS","4":"corpnewt\/gibMacOS","5":"corpnewt\/gibMacOS","6":"corpnewt\/gibMacOS","7":"corpnewt\/gibMacOS","8":"corpnewt\/gibMacOS","9":"corpnewt\/gibMacOS","10":"corpnewt\/gibMacOS","11":"corpnewt\/gibMacOS"},"stargazers":{"0":3780,"1":3780,"2":3780,"3":3780,"4":3780,"5":3780,"6":3780,"7":3780,"8":3780,"9":3780,"10":3780,"11":3780}}