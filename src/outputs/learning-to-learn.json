{"type":{"0":"W","1":"R","2":"R","3":"R","4":"R","5":"R","6":"R"},"module":{"0":"networks","1":"problems","2":"util","3":"util","4":"util","5":"util","6":"util"},"obj":{"0":"Adam.initial_state_for_inputs","1":"_maybe_download_cifar10","2":"","3":"","4":"","5":"","6":""},"lnum":{"0":372,"1":193,"2":1,"3":1,"4":1,"5":1,"6":1},"col":{"0":2,"1":4,"2":0,"3":0,"4":0,"5":0,"6":0},"filename":{"0":"networks.py","1":"problems.py","2":"util.py","3":"util.py","4":"util.py","5":"util.py","6":"util.py"},"symbol":{"0":"arguments-differ","1":"consider-using-with","2":"duplicate-code","3":"duplicate-code","4":"duplicate-code","5":"duplicate-code","6":"duplicate-code"},"text":{"0":"Number of parameters was 3 in 'Network.initial_state_for_inputs' and is now 4 in overridden 'Adam.initial_state_for_inputs' method","1":"Consider using 'with' for resource-allocating operations","2":"Similar lines in 2 files\n==convergence_test:21\n==meta_test:27\nimport tensorflow as tf\n\nimport meta\nimport problems\n\n\ndef train(sess, minimize_ops, num_epochs, num_unrolls):\n  \"\"\"L2L training.\"\"\"\n  step, update, reset, loss_last, x_last = minimize_ops\n\n  for _ in xrange(num_epochs):\n    sess.run(reset)\n    for _ in xrange(num_unrolls):\n      cost, final_x, unused_1, unused_2 = sess.run([loss_last, x_last,\n                                                    update, step])\n\n  return cost, final_x\n\n\nclass L2LTest(tf.test.TestCase):\n  \"\"\"Tests L2L TensorFlow implementation.\"\"\"\n","3":"Similar lines in 2 files\n==evaluate:20\n==train:22\nfrom six.moves import xrange\nimport tensorflow as tf\n\nfrom tensorflow.contrib.learn.python.learn import monitored_session as ms\n\nimport meta\nimport util\n\nflags = tf.flags\nlogging = tf.logging\n\n\nFLAGS = flags.FLAGS","4":"Similar lines in 3 files\n==convergence_test:16\n==evaluate:16\n==problems_test:16\nfrom __future__ import absolute_import\nfrom __future__ import division\nfrom __future__ import print_function\n\nfrom six.moves import xrange\nimport tensorflow as tf\n","5":"Similar lines in 2 files\n==meta:236\n==util:51\n              \"net\": \"CoordinateWiseDeepLSTM\",\n              \"net_options\": {\n                  \"layers\": (20, 20),\n                  \"preprocess_name\": \"LogAndSign\",\n                  \"preprocess_options\": {\"k\": 5},\n                  \"scale\": 0.01,","6":"Similar lines in 2 files\n==convergence_test:45\n==meta_test:51\n    problem = problems.simple()\n    optimizer = meta.MetaOptimizer(net=dict(\n        net=\"CoordinateWiseDeepLSTM\",\n        net_options={\n            \"layers\": (),"},"number":{"0":"W0221","1":"R1732","2":"R0801","3":"R0801","4":"R0801","5":"R0801","6":"R0801"},"linter":{"0":"pylint","1":"pylint","2":"pylint","3":"pylint","4":"pylint","5":"pylint","6":"pylint"},"lines_amount":{"0":378,"1":278,"2":129,"3":129,"4":129,"5":129,"6":129},"commit":{"0":"f3c1a8d176b8ea7cc60478bfcfdd10a7a52fd296","1":"f3c1a8d176b8ea7cc60478bfcfdd10a7a52fd296","2":"f3c1a8d176b8ea7cc60478bfcfdd10a7a52fd296","3":"f3c1a8d176b8ea7cc60478bfcfdd10a7a52fd296","4":"f3c1a8d176b8ea7cc60478bfcfdd10a7a52fd296","5":"f3c1a8d176b8ea7cc60478bfcfdd10a7a52fd296","6":"f3c1a8d176b8ea7cc60478bfcfdd10a7a52fd296"},"repo":{"0":"deepmind\/learning-to-learn","1":"deepmind\/learning-to-learn","2":"deepmind\/learning-to-learn","3":"deepmind\/learning-to-learn","4":"deepmind\/learning-to-learn","5":"deepmind\/learning-to-learn","6":"deepmind\/learning-to-learn"},"stargazers":{"0":4028,"1":4028,"2":4028,"3":4028,"4":4028,"5":4028,"6":4028}}