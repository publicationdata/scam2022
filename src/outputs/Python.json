{"type":{"0":"R","1":"W","2":"W","3":"W","4":"W","5":"C","6":"R","7":"R","8":"W","9":"R","10":"R","11":"R","12":"R","13":"R","14":"R","15":"R","16":"R","17":"W","18":"W","19":"R","20":"R","21":"C","22":"R","23":"R","24":"R","25":"R","26":"R","27":"R","28":"R","29":"R","30":"W","31":"W","32":"W","33":"W","34":"W","35":"W","36":"W","37":"W","38":"W","39":"W","40":"W","41":"W","42":"W","43":"W","44":"C","45":"C","46":"C","47":"C","48":"C","49":"R","50":"W","51":"W","52":"R","53":"R","54":"W","55":"R","56":"C","57":"W","58":"W","59":"W","60":"W","61":"R","62":"C","63":"R","64":"R","65":"W","66":"C","67":"W","68":"W","69":"R","70":"R","71":"C","72":"C","73":"W","74":"C","75":"C","76":"C","77":"C","78":"R","79":"R","80":"C","81":"C","82":"C","83":"R","84":"C","85":"R","86":"R","87":"R","88":"C","89":"C","90":"C","91":"C","92":"C","93":"R","94":"R","95":"R","96":"R","97":"R","98":"R","99":"W","100":"R","101":"W","102":"R","103":"W","104":"W","105":"W","106":"R","107":"C","108":"C","109":"C","110":"C","111":"C","112":"C","113":"C","114":"R","115":"R","116":"R","117":"R","118":"R","119":"R","120":"W","121":"W","122":"W","123":"R","124":"W","125":"W","126":"C","127":"W","128":"W","129":"R","130":"R","131":"C","132":"C","133":"C","134":"R","135":"W","136":"R","137":"R","138":"C","139":"C","140":"C","141":"C","142":"R","143":"R","144":"W","145":"R","146":"R","147":"C","148":"R","149":"R","150":"R","151":"W","152":"W","153":"W","154":"W","155":"R","156":"R","157":"C","158":"C","159":"R","160":"R","161":"R","162":"R","163":"R","164":"R","165":"R","166":"R","167":"R","168":"R","169":"R","170":"R","171":"R","172":"R","173":"C","174":"R","175":"W","176":"W","177":"R","178":"W","179":"W","180":"R","181":"C","182":"W","183":"R","184":"W","185":"W","186":"R","187":"R","188":"R","189":"W","190":"R","191":"R","192":"W","193":"R","194":"R","195":"R","196":"R","197":"W","198":"W","199":"R","200":"R","201":"R","202":"R","203":"C","204":"C","205":"C","206":"R","207":"C","208":"R","209":"R","210":"R","211":"R","212":"C","213":"C","214":"C","215":"W","216":"W","217":"W","218":"R","219":"R","220":"R","221":"C","222":"C","223":"C","224":"C","225":"R","226":"W","227":"W","228":"C","229":"C","230":"C","231":"W","232":"W","233":"W","234":"R","235":"R","236":"R","237":"R","238":"R","239":"R","240":"R","241":"R","242":"R","243":"R","244":"R","245":"R","246":"R","247":"R","248":"R","249":"R","250":"R","251":"R","252":"R","253":"R","254":"R","255":"R","256":"R","257":"R","258":"R","259":"R"},"module":{"0":"Classification_human_or_horse","1":"CliYoutubeDownloader","2":"CliYoutubeDownloader","3":"CliYoutubeDownloader","4":"CliYoutubeDownloader","5":"Credit_Card_Validator","6":"Cricket_score","7":"Delete_Linked_List","8":"EncryptionTool","9":"EncryptionTool","10":"EncryptionTool","11":"EncryptionTool","12":"EncryptionTool","13":"EncryptionTool","14":"Exception_Handling_in_Python","15":"Exception_Handling_in_Python","16":"Google_News","17":"GroupSms_Way2","18":"Hotel-Management","19":"Hotel-Management","20":"Hotel-Management","21":"Hotel-Management","22":"Hotel-Management","23":"Hotel-Management","24":"Hotel-Management","25":"Hotel-Management","26":"Hotel-Management","27":"Hotel-Management","28":"Hotel-Management","29":"Insert_operation_on_Linked_List","30":"Job_scheduling","31":"Job_scheduling","32":"Job_scheduling","33":"Job_scheduling","34":"Job_scheduling","35":"Job_scheduling","36":"Job_scheduling","37":"Job_scheduling","38":"Job_scheduling","39":"Job_scheduling","40":"Job_scheduling","41":"Job_scheduling","42":"Job_scheduling","43":"Job_scheduling","44":"Job_scheduling","45":"Linear_Insertion_Sort","46":"Memory_game","47":"Memory_game","48":"Memory_game","49":"MobiusFunction","50":"Mp3_media_player","51":"Organise","52":"PONG_GAME","53":"PONG_GAME","54":"Print_List_of_Even_Numbers","55":"QuadraticCalc","56":"Quick_Sort","57":"RandomDice","58":"StringToBinary","59":"StringToBinary","60":"TTS","61":"Tic_Tac_Toe","62":"Tic_Tac_Toe","63":"Type of angles of a triangle","64":"Type_of_angles_of_triangle","65":"addition","66":"addition","67":"armstrongnumber","68":"avg_xdspam_confidence","69":"avg_xdspam_confidence","70":"backup_automater_services","71":"binary_search_tree","72":"blackJackGUI","73":"blackJackGUI","74":"blackJackGUI","75":"blackJackGUI","76":"bookstore_manangement_system","77":"bookstore_manangement_system","78":"bookstore_manangement_system","79":"bookstore_manangement_system","80":"bookstore_manangement_system","81":"bookstore_manangement_system","82":"bookstore_manangement_system","83":"bookstore_manangement_system","84":"bubblesortpgm","85":"changemac","86":"check_for_sqlite_files","87":"check_for_sqlite_files","88":"classicIndianCardMatch","89":"classicIndianCardMatch","90":"classicIndianCardMatch","91":"classicIndianCardMatch","92":"consonant","93":"cricket_live_score","94":"daily_checks","95":"daily_checks","96":"daily_checks","97":"daily_checks","98":"daily_checks","99":"diceV2_dynamic","100":"diceV2_dynamic","101":"dice_rolling_simulator","102":"diction","103":"digital_clock","104":"digital_clock","105":"dir_test","106":"encrypter-decrypter-gui","107":"encryptsys","108":"encryptsys","109":"encryptsys","110":"encryptsys","111":"encryptsys","112":"encryptsys","113":"encryptsys","114":"env_check","115":"ex20","116":"facebook id hack","117":"facebook id hack","118":"fibonacci","119":"get_info_remoute_srv","120":"get_likes_on_FB","121":"gui_calculator","122":"insertion_sort","123":"internet_connection_py3","124":"length","125":"linear_search","126":"linear_search","127":"memorygame","128":"memorygame","129":"mobilePhoneSpecsScrapper","130":"movie_details","131":"new","132":"new","133":"new","134":"new","135":"new_script","136":"new_script","137":"new_script","138":"next_number","139":"next_number","140":"nmap_scan","141":"nmap_scan","142":"nslookup_check","143":"nslookup_check","144":"pan","145":"password_cracker","146":"password_cracker","147":"ph_email","148":"ping_servers","149":"ping_servers","150":"ping_subnet","151":"polygon","152":"portscanner","153":"portscanner","154":"portscanner","155":"portscanner","156":"portscanner","157":"portscanner","158":"portscanner","159":"powerdown_startup","160":"powerdown_startup","161":"powerdown_startup","162":"powerdown_startup","163":"powerdown_startup","164":"powerdown_startup","165":"powerdown_startup","166":"powerdown_startup","167":"powerup_checks","168":"powerup_checks","169":"powerup_checks","170":"powerup_checks","171":"powerup_checks","172":"powerup_checks","173":"powerup_checks","174":"powerup_checks","175":"pscheck","176":"psunotify","177":"psunotify","178":"pyhton_array","179":"python_sms","180":"python_sms","181":"python_sms","182":"randomloadingmessage","183":"recursive-fibonacci","184":"recyclebin","185":"recyclebin","186":"rock_paper_scissor_game","187":"rock_paper_scissor_game","188":"rock_paper_scissor_game","189":"rotatelist","190":"scrap_file","191":"script_listing","192":"selectionSort","193":"sendemail","194":"sendemail","195":"sendemail","196":"sendemail","197":"sha1","198":"sha1","199":"sha1","200":"snake","201":"snake","202":"snake","203":"sorting","204":"sorting","205":"sorting","206":"spotifyAccount","207":"sqlite_check","208":"sqlite_table_check","209":"stack","210":"stack","211":"string_rotation","212":"sudoku","213":"sudoku","214":"sudoku","215":"tf_idf_generator","216":"tf_idf_generator","217":"tf_idf_generator","218":"tf_idf_generator","219":"tf_idf_generator","220":"tf_idf_generator","221":"tic_tak_toe","222":"tic_tak_toe","223":"tic_tak_toe","224":"tic_tak_toe","225":"tik_tak","226":"tweeter","227":"tweeter","228":"vowels","229":"vowels","230":"webcam","231":"whatsapp-monitor","232":"wiki","233":"wikipedia","234":"work_connect","235":"work_connect","236":"work_connect","237":"work_connect","238":"write_excel_file","239":"write_excel_file","240":"write_excel_file","241":"write_excel_file","242":"write_excel_file","243":"write_excel_file","244":"write_excel_file","245":"write_excel_file","246":"write_excel_file","247":"write_excel_file","248":"write_excel_file","249":"write_excel_file","250":"write_excel_file","251":"write_excel_file","252":"write_excel_file","253":"write_excel_file","254":"write_excel_file","255":"write_excel_file","256":"write_excel_file","257":"write_excel_file","258":"write_excel_file","259":"write_excel_file"},"obj":{"0":"","1":"","2":"YouTubeDownloder.showStreams","3":"YouTubeDownloder.chooseStream","4":"YouTubeDownloder.getStream","5":"CreditCard.validate","6":"","7":"Linked_List.Delete","8":"","9":"readAndDecrypt","10":"readAndEncrypt","11":"readAndEncryptAndSave","12":"readAndDecryptAndSave","13":"","14":"","15":"","16":"news","17":"","18":"exit","19":"add","20":"add","21":"","22":"","23":"modify","24":"modify","25":"search","26":"remove","27":"remove","28":"view","29":"Linked_List.Insert_After","30":"Scheduling.schedule","31":"Scheduling.schedule","32":"Scheduling.schedule","33":"Scheduling.schedule","34":"Scheduling.feasible","35":"Scheduling.feasible","36":"Scheduling.feasible","37":"Scheduling.feasible","38":"Scheduling.feasible","39":"Scheduling.feasible","40":"Scheduling.feasible","41":"Scheduling.feasible","42":"Scheduling.feasible","43":"Scheduling.feasible","44":"main","45":"Linear_Search","46":"mouseclick","47":"draw","48":"draw","49":"mobius_function","50":"","51":"ChangeDirectory","52":"keyup","53":"keyup","54":"","55":"findLinear","56":"","57":"","58":"","59":"","60":"","61":"input_player_letter","62":"get_computer_move","63":"angle_type","64":"angle_type","65":"","66":"","67":"","68":"","69":"","70":"","71":"inorder_itr","72":"string_list_join","73":"Hand.get_value","74":"stand","75":"hit","76":"","77":"","78":"","79":"","80":"","81":"","82":"","83":"","84":"","85":"cret","86":"isSQLite3","87":"","88":"","89":"","90":"","91":"","92":"count_con","93":"","94":"print_docs","95":"putty_sessions","96":"putty_sessions","97":"rdp_sessions","98":"euroclear_docs","99":"Dice.setSides","100":"checkInput","101":"","102":"","103":"","104":"","105":"","106":"Notebook.backend_work","107":"decrypt","108":"decrypt","109":"decrypt","110":"decrypt","111":"encrypt","112":"encrypt","113":"encrypt","114":"","115":"","116":"function","117":"","118":"getFibonacciDynamic","119":"","120":"","121":"","122":"","123":"","124":"","125":"","126":"","127":"","128":"","129":"Phonearena.crawl_html_page","130":"","131":"Times_of_India","132":"india_today","133":"india_today","134":"india_today","135":"","136":"","137":"","138":"","139":"","140":"main","141":"main","142":"","143":"","144":"","145":"testPass","146":"main","147":"","148":"","149":"","150":"","151":"","152":"","153":"","154":"","155":"connScan","156":"connScan","157":"main","158":"main","159":"windows","160":"windows","161":"windows","162":"windows","163":"linux","164":"linux","165":"linux","166":"linux","167":"windows","168":"windows","169":"windows","170":"linux","171":"linux","172":"linux","173":"get_servers","174":"get_servers","175":"","176":"","177":"","178":"","179":"","180":"","181":"","182":"","183":"fib","184":"","185":"sid2user","186":"number_to_name","187":"game","188":"game","189":"","190":"download","191":"","192":"","193":"createMessageWithAttachment","194":"createMessageWithAttachment","195":"createMessageWithAttachment","196":"createMessageWithAttachment","197":"SHA1Hash.final_hash","198":"SHA1Hash.final_hash","199":"main","200":"","201":"","202":"","203":"","204":"","205":"","206":"creator","207":"","208":"","209":"isEmpty","210":"pop","211":"rotate","212":"valid","213":"print_board","214":"find_empty","215":"paint","216":"find_tf_idf","217":"find_tf_idf","218":"find_tf_idf","219":"find_tf_idf","220":"find_tf_idf","221":"possibilities","222":"row_win","223":"col_win","224":"col_win","225":"checkwin","226":"","227":"tweetthis","228":"checkVowels","229":"","230":"","231":"","232":"","233":"","234":"","235":"","236":"","237":"","238":"","239":"","240":"","241":"","242":"","243":"","244":"","245":"","246":"","247":"","248":"","249":"","250":"","251":"","252":"","253":"","254":"","255":"","256":"","257":"","258":"","259":""},"lnum":{"0":28,"1":1,"2":17,"3":25,"4":36,"5":42,"6":13,"7":21,"8":10,"9":49,"10":65,"11":80,"12":88,"13":108,"14":81,"15":86,"16":12,"17":10,"18":368,"19":88,"20":117,"21":131,"22":132,"23":148,"24":177,"25":214,"26":256,"27":314,"28":325,"29":16,"30":30,"31":37,"32":31,"33":33,"34":54,"35":55,"36":83,"37":63,"38":64,"39":74,"40":76,"41":78,"42":79,"43":80,"44":101,"45":3,"46":42,"47":51,"48":53,"49":29,"50":7,"51":25,"52":114,"53":116,"54":8,"55":7,"56":32,"57":6,"58":3,"59":4,"60":1,"61":31,"62":117,"63":3,"64":4,"65":11,"66":6,"67":7,"68":3,"69":1,"70":27,"71":237,"72":46,"73":63,"74":113,"75":128,"76":393,"77":501,"78":669,"79":738,"80":988,"81":1063,"82":1165,"83":1174,"84":50,"85":12,"86":24,"87":34,"88":78,"89":79,"90":90,"91":91,"92":6,"93":6,"94":32,"95":40,"96":41,"97":46,"98":51,"99":11,"100":27,"101":11,"102":6,"103":9,"104":10,"105":14,"106":118,"107":14,"108":17,"109":20,"110":32,"111":47,"112":50,"113":61,"114":17,"115":19,"116":46,"117":52,"118":44,"119":20,"120":13,"121":2,"122":3,"123":11,"124":2,"125":1,"126":11,"127":1,"128":2,"129":22,"130":41,"131":32,"132":61,"133":63,"134":68,"135":58,"136":57,"137":58,"138":2,"139":19,"140":32,"141":32,"142":13,"143":14,"144":3,"145":26,"146":38,"147":55,"148":61,"149":62,"150":34,"151":3,"152":5,"153":4,"154":5,"155":24,"156":28,"157":59,"158":59,"159":17,"160":18,"161":19,"162":23,"163":29,"164":30,"165":31,"166":35,"167":36,"168":37,"169":39,"170":49,"171":50,"172":51,"173":67,"174":69,"175":17,"176":21,"177":37,"178":1,"179":44,"180":23,"181":33,"182":4,"183":2,"184":5,"185":23,"186":22,"187":44,"188":48,"189":2,"190":12,"191":20,"192":1,"193":102,"194":106,"195":110,"196":114,"197":63,"198":64,"199":117,"200":26,"201":93,"202":99,"203":5,"204":8,"205":19,"206":89,"207":50,"208":21,"209":14,"210":25,"211":6,"212":40,"213":57,"214":72,"215":51,"216":72,"217":104,"218":94,"219":100,"220":137,"221":19,"222":44,"223":54,"224":59,"225":77,"226":16,"227":33,"228":8,"229":13,"230":26,"231":32,"232":8,"233":2,"234":35,"235":36,"236":38,"237":40,"238":1,"239":1,"240":1,"241":1,"242":1,"243":1,"244":1,"245":1,"246":1,"247":1,"248":1,"249":1,"250":1,"251":1,"252":1,"253":1,"254":1,"255":1,"256":1,"257":1,"258":1,"259":1},"col":{"0":19,"1":0,"2":8,"3":8,"4":8,"5":8,"6":8,"7":4,"8":4,"9":11,"10":11,"11":13,"12":13,"13":9,"14":4,"15":6,"16":13,"17":4,"18":0,"19":11,"20":11,"21":3,"22":11,"23":11,"24":15,"25":11,"26":11,"27":16,"28":11,"29":4,"30":8,"31":16,"32":8,"33":12,"34":8,"35":8,"36":16,"37":16,"38":16,"39":12,"40":16,"41":16,"42":12,"43":12,"44":4,"45":4,"46":7,"47":11,"48":13,"49":0,"50":0,"51":20,"52":7,"53":7,"54":0,"55":0,"56":0,"57":0,"58":4,"59":4,"60":0,"61":15,"62":7,"63":0,"64":0,"65":4,"66":6,"67":0,"68":0,"69":5,"70":17,"71":11,"72":4,"73":8,"74":7,"75":7,"76":6,"77":11,"78":40,"79":43,"80":15,"81":11,"82":11,"83":16,"84":0,"85":14,"86":13,"87":6,"88":10,"89":8,"90":10,"91":8,"92":2,"93":9,"94":4,"95":18,"96":8,"97":4,"98":4,"99":12,"100":0,"101":4,"102":17,"103":0,"104":0,"105":4,"106":4,"107":4,"108":4,"109":4,"110":4,"111":4,"112":4,"113":4,"114":17,"115":15,"116":2,"117":5,"118":7,"119":14,"120":0,"121":0,"122":0,"123":4,"124":0,"125":0,"126":0,"127":0,"128":0,"129":4,"130":11,"131":3,"132":3,"133":6,"134":12,"135":0,"136":12,"137":8,"138":0,"139":4,"140":8,"141":28,"142":14,"143":4,"144":0,"145":15,"146":15,"147":3,"148":4,"149":14,"150":8,"151":0,"152":0,"153":0,"154":0,"155":8,"156":8,"157":8,"158":28,"159":8,"160":18,"161":74,"162":12,"163":8,"164":18,"165":74,"166":12,"167":8,"168":18,"169":70,"170":8,"171":18,"172":74,"173":11,"174":12,"175":4,"176":0,"177":15,"178":0,"179":4,"180":4,"181":7,"182":0,"183":6,"184":0,"185":16,"186":0,"187":7,"188":9,"189":0,"190":8,"191":6,"192":0,"193":13,"194":13,"195":13,"196":13,"197":8,"198":8,"199":21,"200":8,"201":12,"202":8,"203":0,"204":0,"205":0,"206":16,"207":7,"208":12,"209":0,"210":0,"211":0,"212":4,"213":4,"214":4,"215":10,"216":0,"217":12,"218":34,"219":16,"220":35,"221":1,"222":5,"223":2,"224":5,"225":0,"226":4,"227":14,"228":4,"229":0,"230":7,"231":8,"232":0,"233":0,"234":8,"235":8,"236":8,"237":8,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"251":0,"252":0,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"259":0},"filename":{"0":"Classification_human_or_horse.py","1":"CliYoutubeDownloader.py","2":"CliYoutubeDownloader.py","3":"CliYoutubeDownloader.py","4":"CliYoutubeDownloader.py","5":"Credit_Card_Validator.py","6":"Cricket_score.py","7":"Delete_Linked_List.py","8":"EncryptionTool.py","9":"EncryptionTool.py","10":"EncryptionTool.py","11":"EncryptionTool.py","12":"EncryptionTool.py","13":"EncryptionTool.py","14":"Exception_Handling_in_Python.py","15":"Exception_Handling_in_Python.py","16":"Google_News.py","17":"GroupSms_Way2.py","18":"Hotel-Management.py","19":"Hotel-Management.py","20":"Hotel-Management.py","21":"Hotel-Management.py","22":"Hotel-Management.py","23":"Hotel-Management.py","24":"Hotel-Management.py","25":"Hotel-Management.py","26":"Hotel-Management.py","27":"Hotel-Management.py","28":"Hotel-Management.py","29":"Insert_operation_on_Linked_List.py","30":"Job_scheduling.py","31":"Job_scheduling.py","32":"Job_scheduling.py","33":"Job_scheduling.py","34":"Job_scheduling.py","35":"Job_scheduling.py","36":"Job_scheduling.py","37":"Job_scheduling.py","38":"Job_scheduling.py","39":"Job_scheduling.py","40":"Job_scheduling.py","41":"Job_scheduling.py","42":"Job_scheduling.py","43":"Job_scheduling.py","44":"Job_scheduling.py","45":"Linear_Insertion_Sort.py","46":"Memory_game.py","47":"Memory_game.py","48":"Memory_game.py","49":"MobiusFunction.py","50":"Mp3_media_player.py","51":"Organise.py","52":"PONG_GAME.py","53":"PONG_GAME.py","54":"Print_List_of_Even_Numbers.py","55":"QuadraticCalc.py","56":"Quick_Sort.py","57":"RandomDice.py","58":"StringToBinary.py","59":"StringToBinary.py","60":"TTS.py","61":"Tic_Tac_Toe.py","62":"Tic_Tac_Toe.py","63":"Type of angles of a triangle.py","64":"Type_of_angles_of_triangle.py","65":"addition.py","66":"addition.py","67":"armstrongnumber.py","68":"avg_xdspam_confidence.py","69":"avg_xdspam_confidence.py","70":"backup_automater_services.py","71":"binary_search_tree.py","72":"blackJackGUI.py","73":"blackJackGUI.py","74":"blackJackGUI.py","75":"blackJackGUI.py","76":"bookstore_manangement_system.py","77":"bookstore_manangement_system.py","78":"bookstore_manangement_system.py","79":"bookstore_manangement_system.py","80":"bookstore_manangement_system.py","81":"bookstore_manangement_system.py","82":"bookstore_manangement_system.py","83":"bookstore_manangement_system.py","84":"bubblesortpgm.py","85":"changemac.py","86":"check_for_sqlite_files.py","87":"check_for_sqlite_files.py","88":"classicIndianCardMatch.py","89":"classicIndianCardMatch.py","90":"classicIndianCardMatch.py","91":"classicIndianCardMatch.py","92":"consonant.py","93":"cricket_live_score.py","94":"daily_checks.py","95":"daily_checks.py","96":"daily_checks.py","97":"daily_checks.py","98":"daily_checks.py","99":"diceV2_dynamic.py","100":"diceV2_dynamic.py","101":"dice_rolling_simulator.py","102":"diction.py","103":"digital_clock.py","104":"digital_clock.py","105":"dir_test.py","106":"encrypter-decrypter-gui.py","107":"encryptsys.py","108":"encryptsys.py","109":"encryptsys.py","110":"encryptsys.py","111":"encryptsys.py","112":"encryptsys.py","113":"encryptsys.py","114":"env_check.py","115":"ex20.py","116":"facebook id hack.py","117":"facebook id hack.py","118":"fibonacci.py","119":"get_info_remoute_srv.py","120":"get_likes_on_FB.py","121":"gui_calculator.py","122":"insertion_sort.py","123":"internet_connection_py3.py","124":"length.py","125":"linear_search.py","126":"linear_search.py","127":"memorygame.py","128":"memorygame.py","129":"mobilePhoneSpecsScrapper.py","130":"movie_details.py","131":"new.py","132":"new.py","133":"new.py","134":"new.py","135":"new_script.py","136":"new_script.py","137":"new_script.py","138":"next_number.py","139":"next_number.py","140":"nmap_scan.py","141":"nmap_scan.py","142":"nslookup_check.py","143":"nslookup_check.py","144":"pan.py","145":"password_cracker.py","146":"password_cracker.py","147":"ph_email.py","148":"ping_servers.py","149":"ping_servers.py","150":"ping_subnet.py","151":"polygon.py","152":"portscanner.py","153":"portscanner.py","154":"portscanner.py","155":"portscanner.py","156":"portscanner.py","157":"portscanner.py","158":"portscanner.py","159":"powerdown_startup.py","160":"powerdown_startup.py","161":"powerdown_startup.py","162":"powerdown_startup.py","163":"powerdown_startup.py","164":"powerdown_startup.py","165":"powerdown_startup.py","166":"powerdown_startup.py","167":"powerup_checks.py","168":"powerup_checks.py","169":"powerup_checks.py","170":"powerup_checks.py","171":"powerup_checks.py","172":"powerup_checks.py","173":"powerup_checks.py","174":"powerup_checks.py","175":"pscheck.py","176":"psunotify.py","177":"psunotify.py","178":"pyhton_array.py","179":"python_sms.py","180":"python_sms.py","181":"python_sms.py","182":"randomloadingmessage.py","183":"recursive-fibonacci.py","184":"recyclebin.py","185":"recyclebin.py","186":"rock_paper_scissor_game.py","187":"rock_paper_scissor_game.py","188":"rock_paper_scissor_game.py","189":"rotatelist.py","190":"scrap_file.py","191":"script_listing.py","192":"selectionSort.py","193":"sendemail.py","194":"sendemail.py","195":"sendemail.py","196":"sendemail.py","197":"sha1.py","198":"sha1.py","199":"sha1.py","200":"snake.py","201":"snake.py","202":"snake.py","203":"sorting.py","204":"sorting.py","205":"sorting.py","206":"spotifyAccount.py","207":"sqlite_check.py","208":"sqlite_table_check.py","209":"stack.py","210":"stack.py","211":"string_rotation.py","212":"sudoku.py","213":"sudoku.py","214":"sudoku.py","215":"tf_idf_generator.py","216":"tf_idf_generator.py","217":"tf_idf_generator.py","218":"tf_idf_generator.py","219":"tf_idf_generator.py","220":"tf_idf_generator.py","221":"tic_tak_toe.py","222":"tic_tak_toe.py","223":"tic_tak_toe.py","224":"tic_tak_toe.py","225":"tik_tak.py","226":"tweeter.py","227":"tweeter.py","228":"vowels.py","229":"vowels.py","230":"webcam.py","231":"whatsapp-monitor.py","232":"wiki.py","233":"wikipedia.py","234":"work_connect.py","235":"work_connect.py","236":"work_connect.py","237":"work_connect.py","238":"write_excel_file.py","239":"write_excel_file.py","240":"write_excel_file.py","241":"write_excel_file.py","242":"write_excel_file.py","243":"write_excel_file.py","244":"write_excel_file.py","245":"write_excel_file.py","246":"write_excel_file.py","247":"write_excel_file.py","248":"write_excel_file.py","249":"write_excel_file.py","250":"write_excel_file.py","251":"write_excel_file.py","252":"write_excel_file.py","253":"write_excel_file.py","254":"write_excel_file.py","255":"write_excel_file.py","256":"write_excel_file.py","257":"write_excel_file.py","258":"write_excel_file.py","259":"write_excel_file.py"},"symbol":{"0":"consider-using-with","1":"wildcard-import","2":"attribute-defined-outside-init","3":"attribute-defined-outside-init","4":"attribute-defined-outside-init","5":"consider-using-enumerate","6":"consider-using-with","7":"inconsistent-return-statements","8":"redefined-builtin","9":"consider-using-with","10":"consider-using-with","11":"consider-using-with","12":"consider-using-with","13":"consider-using-with","14":"consider-using-with","15":"consider-using-with","16":"consider-using-with","17":"redefined-builtin","18":"redefined-builtin","19":"consider-using-with","20":"consider-using-with","21":"singleton-comparison","22":"consider-using-with","23":"consider-using-with","24":"consider-using-with","25":"consider-using-with","26":"consider-using-with","27":"consider-using-with","28":"consider-using-with","29":"inconsistent-return-statements","30":"attribute-defined-outside-init","31":"attribute-defined-outside-init","32":"attribute-defined-outside-init","33":"attribute-defined-outside-init","34":"attribute-defined-outside-init","35":"attribute-defined-outside-init","36":"attribute-defined-outside-init","37":"attribute-defined-outside-init","38":"attribute-defined-outside-init","39":"attribute-defined-outside-init","40":"attribute-defined-outside-init","41":"attribute-defined-outside-init","42":"attribute-defined-outside-init","43":"attribute-defined-outside-init","44":"consider-using-enumerate","45":"consider-using-enumerate","46":"singleton-comparison","47":"singleton-comparison","48":"singleton-comparison","49":"inconsistent-return-statements","50":"wildcard-import","51":"redefined-builtin","52":"consider-using-in","53":"consider-using-in","54":"redefined-builtin","55":"inconsistent-return-statements","56":"consider-using-enumerate","57":"wildcard-import","58":"redefined-builtin","59":"redefined-builtin","60":"wildcard-import","61":"consider-using-in","62":"singleton-comparison","63":"inconsistent-return-statements","64":"inconsistent-return-statements","65":"redefined-builtin","66":"singleton-comparison","67":"redefined-builtin","68":"redefined-builtin","69":"consider-using-with","70":"consider-using-with","71":"singleton-comparison","72":"consider-using-enumerate","73":"attribute-defined-outside-init","74":"singleton-comparison","75":"singleton-comparison","76":"singleton-comparison","77":"singleton-comparison","78":"consider-using-in","79":"consider-using-in","80":"singleton-comparison","81":"singleton-comparison","82":"singleton-comparison","83":"consider-using-in","84":"consider-using-enumerate","85":"consider-using-with","86":"consider-using-with","87":"consider-using-with","88":"singleton-comparison","89":"consider-using-enumerate","90":"singleton-comparison","91":"consider-using-enumerate","92":"consider-using-enumerate","93":"consider-using-with","94":"consider-using-with","95":"consider-using-with","96":"consider-using-with","97":"consider-using-with","98":"consider-using-with","99":"attribute-defined-outside-init","100":"inconsistent-return-statements","101":"redefined-builtin","102":"consider-using-with","103":"wildcard-import","104":"wildcard-import","105":"redefined-builtin","106":"inconsistent-return-statements","107":"consider-using-enumerate","108":"consider-using-enumerate","109":"consider-using-enumerate","110":"consider-using-enumerate","111":"consider-using-enumerate","112":"consider-using-enumerate","113":"consider-using-enumerate","114":"consider-using-with","115":"consider-using-with","116":"consider-using-with","117":"consider-using-with","118":"consider-using-in","119":"consider-using-with","120":"redefined-builtin","121":"wildcard-import","122":"redefined-builtin","123":"consider-using-with","124":"redefined-builtin","125":"redefined-builtin","126":"consider-using-enumerate","127":"wildcard-import","128":"wildcard-import","129":"inconsistent-return-statements","130":"consider-using-with","131":"consider-using-enumerate","132":"consider-using-enumerate","133":"consider-using-enumerate","134":"consider-using-in","135":"redefined-builtin","136":"consider-using-with","137":"consider-using-with","138":"consider-using-enumerate","139":"consider-using-enumerate","140":"singleton-comparison","141":"singleton-comparison","142":"consider-using-with","143":"consider-using-with","144":"wildcard-import","145":"consider-using-with","146":"consider-using-with","147":"len-as-condition","148":"consider-using-with","149":"consider-using-with","150":"consider-using-with","151":"wildcard-import","152":"redefined-builtin","153":"wildcard-import","154":"wildcard-import","155":"consider-using-with","156":"consider-using-with","157":"singleton-comparison","158":"singleton-comparison","159":"consider-using-with","160":"consider-using-with","161":"consider-using-with","162":"consider-using-with","163":"consider-using-with","164":"consider-using-with","165":"consider-using-with","166":"consider-using-with","167":"consider-using-with","168":"consider-using-with","169":"consider-using-with","170":"consider-using-with","171":"consider-using-with","172":"consider-using-with","173":"singleton-comparison","174":"consider-using-with","175":"redefined-builtin","176":"redefined-builtin","177":"consider-using-with","178":"wildcard-import","179":"redefined-builtin","180":"consider-using-with","181":"singleton-comparison","182":"wildcard-import","183":"consider-using-in","184":"wildcard-import","185":"redefined-builtin","186":"inconsistent-return-statements","187":"consider-using-in","188":"consider-using-in","189":"redefined-builtin","190":"consider-using-with","191":"consider-using-with","192":"redefined-builtin","193":"consider-using-with","194":"consider-using-with","195":"consider-using-with","196":"consider-using-with","197":"attribute-defined-outside-init","198":"attribute-defined-outside-init","199":"consider-using-with","200":"consider-using-with","201":"consider-using-with","202":"consider-using-with","203":"consider-using-enumerate","204":"consider-using-enumerate","205":"consider-using-enumerate","206":"consider-using-with","207":"singleton-comparison","208":"consider-using-with","209":"inconsistent-return-statements","210":"inconsistent-return-statements","211":"inconsistent-return-statements","212":"consider-using-enumerate","213":"consider-using-enumerate","214":"consider-using-enumerate","215":"redefined-builtin","216":"dangerous-default-value","217":"redefined-builtin","218":"consider-using-with","219":"consider-using-with","220":"consider-using-with","221":"consider-using-enumerate","222":"singleton-comparison","223":"consider-using-enumerate","224":"singleton-comparison","225":"inconsistent-return-statements","226":"redefined-builtin","227":"redefined-builtin","228":"consider-using-enumerate","229":"consider-using-enumerate","230":"singleton-comparison","231":"redefined-builtin","232":"wildcard-import","233":"wildcard-import","234":"consider-using-with","235":"consider-using-with","236":"consider-using-with","237":"consider-using-with","238":"duplicate-code","239":"duplicate-code","240":"duplicate-code","241":"duplicate-code","242":"duplicate-code","243":"duplicate-code","244":"duplicate-code","245":"duplicate-code","246":"duplicate-code","247":"duplicate-code","248":"duplicate-code","249":"duplicate-code","250":"duplicate-code","251":"duplicate-code","252":"duplicate-code","253":"duplicate-code","254":"duplicate-code","255":"duplicate-code","256":"duplicate-code","257":"duplicate-code","258":"duplicate-code","259":"duplicate-code"},"text":{"0":"Consider using 'with' for resource-allocating operations","1":"Wildcard import pytube","2":"Attribute 'streamNo' defined outside __init__","3":"Attribute 'choose' defined outside __init__","4":"Attribute 'stream' defined outside __init__","5":"Consider using enumerate instead of iterating with range and len","6":"Consider using 'with' for resource-allocating operations","7":"Either all return statements in a function should return an expression, or none of them should.","8":"Redefining built-in 'input'","9":"Consider using 'with' for resource-allocating operations","10":"Consider using 'with' for resource-allocating operations","11":"Consider using 'with' for resource-allocating operations","12":"Consider using 'with' for resource-allocating operations","13":"Consider using 'with' for resource-allocating operations","14":"Consider using 'with' for resource-allocating operations","15":"Consider using 'with' for resource-allocating operations","16":"Consider using 'with' for resource-allocating operations","17":"Redefining built-in 'input'","18":"Redefining built-in 'exit'","19":"Consider using 'with' for resource-allocating operations","20":"Consider using 'with' for resource-allocating operations","21":"Comparison 'filecheck == False' should be 'filecheck is False' if checking for the singleton value False, or 'not filecheck' if testing for falsiness","22":"Consider using 'with' for resource-allocating operations","23":"Consider using 'with' for resource-allocating operations","24":"Consider using 'with' for resource-allocating operations","25":"Consider using 'with' for resource-allocating operations","26":"Consider using 'with' for resource-allocating operations","27":"Consider using 'with' for resource-allocating operations","28":"Consider using 'with' for resource-allocating operations","29":"Either all return statements in a function should return an expression, or none of them should.","30":"Attribute 'j' defined outside __init__","31":"Attribute 'j' defined outside __init__","32":"Attribute 'x' defined outside __init__","33":"Attribute 'k' defined outside __init__","34":"Attribute 'tmp' defined outside __init__","35":"Attribute 'is_feasible' defined outside __init__","36":"Attribute 'is_feasible' defined outside __init__","37":"Attribute 'index1' defined outside __init__","38":"Attribute 'index2' defined outside __init__","39":"Attribute 'job' defined outside __init__","40":"Attribute 'jobindex' defined outside __init__","41":"Attribute 'jobindex' defined outside __init__","42":"Attribute 'dlineval' defined outside __init__","43":"Attribute 'ftest' defined outside __init__","44":"Consider using enumerate instead of iterating with range and len","45":"Consider using enumerate instead of iterating with range and len","46":"Comparison 'exposed[ind] == False' should be 'exposed[ind] is False' if checking for the singleton value False, or 'not exposed[ind]' if testing for falsiness","47":"Comparison 'exposed[i] == False' should be 'exposed[i] is False' if checking for the singleton value False, or 'not exposed[i]' if testing for falsiness","48":"Comparison 'exposed[i] == True' should be 'exposed[i] is True' if checking for the singleton value True, or 'exposed[i]' if testing for truthiness","49":"Either all return statements in a function should return an expression, or none of them should.","50":"Wildcard import tkinter","51":"Redefining built-in 'dir'","52":"Consider merging these comparisons with \"in\" to \"key in (simplegui.KEY_MAP['down'], simplegui.KEY_MAP['up'])\"","53":"Consider merging these comparisons with \"in\" to \"key in (simplegui.KEY_MAP['w'], simplegui.KEY_MAP['s'])\"","54":"Redefining built-in 'list'","55":"Either all return statements in a function should return an expression, or none of them should.","56":"Consider using enumerate instead of iterating with range and len","57":"Wildcard import tkinter","58":"Redefining built-in 'chr'","59":"Redefining built-in 'bin'","60":"Wildcard import tkinter","61":"Consider merging these comparisons with \"in\" to \"letter in ('X', 'O')\"","62":"Comparison 'move != None' should be 'move is not None'","63":"Either all return statements in a function should return an expression, or none of them should.","64":"Either all return statements in a function should return an expression, or none of them should.","65":"Redefining built-in 'sum'","66":"Comparison 'a == True' should be 'a is True' if checking for the singleton value True, or 'a' if testing for truthiness","67":"Redefining built-in 'sum'","68":"Redefining built-in 'sum'","69":"Consider using 'with' for resource-allocating operations","70":"Consider using 'with' for resource-allocating operations","71":"Comparison 'current != None' should be 'current is not None'","72":"Consider using enumerate instead of iterating with range and len","73":"Attribute 'hand_value' defined outside __init__","74":"Comparison 'in_play == True' should be 'in_play is True' if checking for the singleton value True, or 'in_play' if testing for truthiness","75":"Comparison 'in_play == True' should be 'in_play is True' if checking for the singleton value True, or 'in_play' if testing for truthiness","76":"Comparison 'a == True' should be 'a is True' if checking for the singleton value True, or 'a' if testing for truthiness","77":"Comparison 'data2 != None' should be 'data2 is not None'","78":"Consider merging these comparisons with \"in\" to \"choice44 in ('y', 'Y')\"","79":"Consider merging these comparisons with \"in\" to \"choice44 in ('n', 'N')\"","80":"Comparison 'data20 != None' should be 'data20 is not None'","81":"Comparison 'data2 != None' should be 'data2 is not None'","82":"Comparison 'data2 != None' should be 'data2 is not None'","83":"Consider merging these comparisons with \"in\" to \"choice5 in ('Y', 'y')\"","84":"Consider using enumerate instead of iterating with range and len","85":"Consider using 'with' for resource-allocating operations","86":"Consider using 'with' for resource-allocating operations","87":"Consider using 'with' for resource-allocating operations","88":"Comparison 'switchPlayer == True' should be 'switchPlayer is True' if checking for the singleton value True, or 'switchPlayer' if testing for truthiness","89":"Consider using enumerate instead of iterating with range and len","90":"Comparison 'switchPlayer == False' should be 'switchPlayer is False' if checking for the singleton value False, or 'not switchPlayer' if testing for falsiness","91":"Consider using enumerate instead of iterating with range and len","92":"Consider using enumerate instead of iterating with range and len","93":"Consider using 'with' for resource-allocating operations","94":"Consider using 'with' for resource-allocating operations","95":"Consider using 'with' for resource-allocating operations","96":"Consider using 'with' for resource-allocating operations","97":"Consider using 'with' for resource-allocating operations","98":"Consider using 'with' for resource-allocating operations","99":"Attribute 'sides' defined outside __init__","100":"Either all return statements in a function should return an expression, or none of them should.","101":"Redefining built-in 'input'","102":"Consider using 'with' for resource-allocating operations","103":"Wildcard import tkinter","104":"Wildcard import tkinter.ttk","105":"Redefining built-in 'input'","106":"Either all return statements in a function should return an expression, or none of them should.","107":"Consider using enumerate instead of iterating with range and len","108":"Consider using enumerate instead of iterating with range and len","109":"Consider using enumerate instead of iterating with range and len","110":"Consider using enumerate instead of iterating with range and len","111":"Consider using enumerate instead of iterating with range and len","112":"Consider using enumerate instead of iterating with range and len","113":"Consider using enumerate instead of iterating with range and len","114":"Consider using 'with' for resource-allocating operations","115":"Consider using 'with' for resource-allocating operations","116":"Consider using 'with' for resource-allocating operations","117":"Consider using 'with' for resource-allocating operations","118":"Consider merging these comparisons with \"in\" to 'n in (0, 1)'","119":"Consider using 'with' for resource-allocating operations","120":"Redefining built-in 'id'","121":"Wildcard import tkinter","122":"Redefining built-in 'list'","123":"Consider using 'with' for resource-allocating operations","124":"Redefining built-in 'str'","125":"Redefining built-in 'list'","126":"Consider using enumerate instead of iterating with range and len","127":"Wildcard import random","128":"Wildcard import turtle","129":"Either all return statements in a function should return an expression, or none of them should.","130":"Consider using 'with' for resource-allocating operations","131":"Consider using enumerate instead of iterating with range and len","132":"Consider using enumerate instead of iterating with range and len","133":"Consider using enumerate instead of iterating with range and len","134":"Consider merging these comparisons with \"in\" to \"bol in ('y', 'Y')\"","135":"Redefining built-in 'input'","136":"Consider using 'with' for resource-allocating operations","137":"Consider using 'with' for resource-allocating operations","138":"Consider using enumerate instead of iterating with range and len","139":"Consider using enumerate instead of iterating with range and len","140":"Comparison 'tgtHost == None' should be 'tgtHost is None'","141":"Comparison 'tgtPorts[0] == None' should be 'tgtPorts[0] is None'","142":"Consider using 'with' for resource-allocating operations","143":"Consider using 'with' for resource-allocating operations","144":"Wildcard import matplotlib","145":"Consider using 'with' for resource-allocating operations","146":"Consider using 'with' for resource-allocating operations","147":"Do not use `len(SEQUENCE)` without comparison to determine if a sequence is empty","148":"Consider using 'with' for resource-allocating operations","149":"Consider using 'with' for resource-allocating operations","150":"Consider using 'with' for resource-allocating operations","151":"Wildcard import pygame.locals","152":"Redefining built-in 'enumerate'","153":"Wildcard import socket","154":"Wildcard import threading","155":"Consider using 'with' for resource-allocating operations","156":"Consider using 'with' for resource-allocating operations","157":"Comparison 'tgtHost == None' should be 'tgtHost is None'","158":"Comparison 'tgtPorts[0] == None' should be 'tgtPorts[0] is None'","159":"Consider using 'with' for resource-allocating operations","160":"Consider using 'with' for resource-allocating operations","161":"Consider using 'with' for resource-allocating operations","162":"Consider using 'with' for resource-allocating operations","163":"Consider using 'with' for resource-allocating operations","164":"Consider using 'with' for resource-allocating operations","165":"Consider using 'with' for resource-allocating operations","166":"Consider using 'with' for resource-allocating operations","167":"Consider using 'with' for resource-allocating operations","168":"Consider using 'with' for resource-allocating operations","169":"Consider using 'with' for resource-allocating operations","170":"Consider using 'with' for resource-allocating operations","171":"Consider using 'with' for resource-allocating operations","172":"Consider using 'with' for resource-allocating operations","173":"Comparison 'row == None' should be 'row is None'","174":"Consider using 'with' for resource-allocating operations","175":"Redefining built-in 'input'","176":"Redefining built-in 'int'","177":"Consider using 'with' for resource-allocating operations","178":"Wildcard import array","179":"Redefining built-in 'hash'","180":"Consider using 'with' for resource-allocating operations","181":"Comparison 'row == None' should be 'row is None'","182":"Wildcard import random","183":"Consider merging these comparisons with \"in\" to 'n in (0, 1)'","184":"Wildcard import _winreg","185":"Redefining built-in 'type'","186":"Either all return statements in a function should return an expression, or none of them should.","187":"Consider merging these comparisons with \"in\" to 'diff in (1, 3)'","188":"Consider merging these comparisons with \"in\" to 'diff in (2, 4)'","189":"Redefining built-in 'list'","190":"Consider using 'with' for resource-allocating operations","191":"Consider using 'with' for resource-allocating operations","192":"Redefining built-in 'list'","193":"Consider using 'with' for resource-allocating operations","194":"Consider using 'with' for resource-allocating operations","195":"Consider using 'with' for resource-allocating operations","196":"Consider using 'with' for resource-allocating operations","197":"Attribute 'padded_data' defined outside __init__","198":"Attribute 'blocks' defined outside __init__","199":"Consider using 'with' for resource-allocating operations","200":"Consider using 'with' for resource-allocating operations","201":"Consider using 'with' for resource-allocating operations","202":"Consider using 'with' for resource-allocating operations","203":"Consider using enumerate instead of iterating with range and len","204":"Consider using enumerate instead of iterating with range and len","205":"Consider using enumerate instead of iterating with range and len","206":"Consider using 'with' for resource-allocating operations","207":"Comparison 'row == None' should be 'row is None'","208":"Consider using 'with' for resource-allocating operations","209":"Either all return statements in a function should return an expression, or none of them should.","210":"Either all return statements in a function should return an expression, or none of them should.","211":"Either all return statements in a function should return an expression, or none of them should.","212":"Consider using enumerate instead of iterating with range and len","213":"Consider using enumerate instead of iterating with range and len","214":"Consider using enumerate instead of iterating with range and len","215":"Redefining built-in 'str'","216":"Dangerous default value [] as argument","217":"Redefining built-in 'dict'","218":"Consider using 'with' for resource-allocating operations","219":"Consider using 'with' for resource-allocating operations","220":"Consider using 'with' for resource-allocating operations","221":"Consider using enumerate instead of iterating with range and len","222":"Comparison 'win == True' should be 'win is True' if checking for the singleton value True, or 'win' if testing for truthiness","223":"Consider using enumerate instead of iterating with range and len","224":"Comparison 'win == True' should be 'win is True' if checking for the singleton value True, or 'win' if testing for truthiness","225":"Either all return statements in a function should return an expression, or none of them should.","226":"Redefining built-in 'input'","227":"Redefining built-in 'type'","228":"Consider using enumerate instead of iterating with range and len","229":"Consider using enumerate instead of iterating with range and len","230":"Comparison 'ret == True' should be 'ret is True' if checking for the singleton value True, or 'ret' if testing for truthiness","231":"Redefining built-in 'open'","232":"Wildcard import tkinter","233":"Wildcard import tkinter","234":"Consider using 'with' for resource-allocating operations","235":"Consider using 'with' for resource-allocating operations","236":"Consider using 'with' for resource-allocating operations","237":"Consider using 'with' for resource-allocating operations","238":"Similar lines in 3 files\n==Delete_Linked_List:0\n==Detect_Remove_loop:0\n==Sorting_List:0\nclass Node:\n    def __init__(self, data):\n        self.data = data\n        self.next = None\n\n\nclass Linked_List:\n    def __init__(self):\n        self.head = None\n\n    def Insert_At_End(self, new_data):\n        new_node = Node(new_data)\n        if self.head is None:\n            self.head = new_node\n            return\n        current = self.head\n        while(current.next):\n            current = current.next\n        current.next = new_node\n","239":"Similar lines in 2 files\n==Add_two_Linked_List:0\n==Rotate_Linked_List:0\nclass Node:\n    def __init__(self, data):\n        self.data = data\n        self.next = None\n\n\nclass Linked_List:\n    def __init__(self):\n        self.head = None\n\n    def Insert_At_Beginning(self, new_data):\n        new_node = Node(new_data)\n        if self.head is None:\n            self.head = new_node\n            return\n        new_node.next = self.head\n        self.head = new_node\n","240":"Similar lines in 2 files\n==Detect_Remove_loop:42\n==Sorting_List:34\n    def Display(self):\n        temp = self.head\n        while(temp):\n            print(temp.data, \"->\", end=\" \")\n            temp = temp.next\n        print(\"None\")\n\n\nif __name__ == \"__main__\":\n    L_list = Linked_List()\n    L_list.Insert_At_End(8)\n    L_list.Insert_At_End(5)\n    L_list.Insert_At_End(10)\n    L_list.Insert_At_End(7)\n    L_list.Insert_At_End(6)\n    L_list.Insert_At_End(11)\n    L_list.Insert_At_End(9)","241":"Similar lines in 4 files\n==Delete_Linked_List:7\n==Detect_Remove_loop:7\n==Reverse_list_in_groups:7\n==Sorting_List:7\n    def __init__(self):\n        self.head = None\n\n    def Insert_At_End(self, new_data):\n        new_node = Node(new_data)\n        if self.head is None:\n            self.head = new_node\n            return\n        current = self.head\n        while(current.next):\n            current = current.next\n        current.next = new_node\n","242":"Similar lines in 2 files\n==Sorted_Inserted_Linked_List:27\n==Split_Circular_Linked_List:38\n    def Display(self):\n        temp = self.head\n        if self.head is not None:\n            while(temp):\n                print(temp.data, \"->\", end=\" \")\n                temp = temp.next\n                if temp == self.head:\n                    print(temp.data)\n                    break\n\n\nif __name__ == \"__main__\":","243":"Similar lines in 2 files\n==Day_of_week:6\n==days_from_date:7\ndef process_date(user_input):\n    user_input=re.sub(r\"\/\", \" \", user_input) #substitute \/ with space\n    user_input=re.sub(r\"-\", \" \", user_input) #substitute - with space\n    return user_input\n\ndef find_day(date):\n    born = datetime.datetime.strptime(date, '%d %m %Y').weekday() #this statement returns an integer corresponding to the day of the week\n    return (calendar.day_name[born]) #this statement returns the corresponding day name to the integer generated in the previous statement\n\n#To get the input from the user\n#User may type 1\/2\/1999 or 1-2-1999\n#To overcome those we have to process user input and make it standard to accept as defined by  calender and time module","244":"Similar lines in 3 files\n==Add_two_Linked_List:0\n==Insert_operation_on_Linked_List:0\n==Rotate_Linked_List:0\nclass Node:\n    def __init__(self, data):\n        self.data = data\n        self.next = None\n\n\nclass Linked_List:\n    def __init__(self):\n        self.head = None\n\n    def Insert_At_Beginning(self, new_data):\n        new_node = Node(new_data)","245":"Similar lines in 2 files\n==Type of angles of a triangle:42\n==Type_of_angles_of_triangle:65\n        print(myDict.get(\"Has a right angle (90\u00b0)\"))\n\n    elif(angle1 < 90 and angle2 < 90 and angle3 < 90):\n        print(myDict.get(\"All angles are less than 90\u00b0.\"))\n\n    elif(angle1 > 90 or angle2 > 90 or angle3 > 90):\n        print(myDict.get(\"Has an angle more than 90\u00b0\"))\n\nangle_type()\n\n","246":"Similar lines in 2 files\n==cricket_news:4\n==diction:6\nengine = pyttsx3.init()\nvoices = engine.getProperty('voices')\nengine.setProperty('voice', voices[0].id)\n\n\ndef speak(audio):\n    engine.say(audio)\n    engine.runAndWait()\n\n","247":"Similar lines in 2 files\n==Sorted_Inserted_Linked_List:0\n==Split_Circular_Linked_List:0\nclass Node:\n    def __init__(self, data):\n        self.data = data\n        self.next = None\n\n\nclass Circular_Linked_List:\n    def __init__(self):\n        self.head = None\n","248":"Similar lines in 5 files\n==Delete_Linked_List:10\n==Detect_Remove_loop:10\n==Insert_operation_on_Linked_List:22\n==Reverse_list_in_groups:10\n==Sorting_List:10\n    def Insert_At_End(self, new_data):\n        new_node = Node(new_data)\n        if self.head is None:\n            self.head = new_node\n            return\n        current = self.head\n        while(current.next):\n            current = current.next\n        current.next = new_node\n","249":"Similar lines in 5 files\n==Delete_Linked_List:36\n==Detect_Remove_loop:42\n==Insert_operation_on_Linked_List:32\n==Rotate_Linked_List:35\n==Sorting_List:34\n    def Display(self):\n        temp = self.head\n        while(temp):\n            print(temp.data, \"->\", end=\" \")\n            temp = temp.next\n        print(\"None\")\n\n\nif __name__ == \"__main__\":\n    L_list = Linked_List()","250":"Similar lines in 6 files\n==Add_two_Linked_List:0\n==Delete_Linked_List:0\n==Detect_Remove_loop:0\n==Insert_operation_on_Linked_List:0\n==Rotate_Linked_List:0\n==Sorting_List:0\nclass Node:\n    def __init__(self, data):\n        self.data = data\n        self.next = None\n\n\nclass Linked_List:\n    def __init__(self):\n        self.head = None\n","251":"Similar lines in 2 files\n==Binary_Insertion_Sort:17\n==Linear_Insertion_Sort:12\n        Test_arr.pop(i)\n        Test_arr.insert(j, val)\n    return Test_arr\n\n\nif __name__ == \"__main__\":\n    Test_list = input(\"Enter the list of Numbers: \").split()\n    Test_list = [int(i) for i in Test_list]\n    print(f\"Binary Insertion Sort: {Insertion_Sort(Test_list)}\")","252":"Similar lines in 7 files\n==Add_two_Linked_List:41\n==Delete_Linked_List:36\n==Detect_Remove_loop:42\n==Insert_operation_on_Linked_List:32\n==Reverse_list_in_groups:34\n==Rotate_Linked_List:35\n==Sorting_List:34\n    def Display(self):\n        temp = self.head\n        while(temp):\n            print(temp.data, \"->\", end=\" \")\n            temp = temp.next\n        print(\"None\")\n\n\nif __name__ == \"__main__\":","253":"Similar lines in 2 files\n==powerup_checks:78\n==work_connect:24\n    if len(sys.argv) < 2:  # Check there is an argument being passed\n        print(text)  # Display the help text if there isn't one passed\n        sys.exit()  # Exit the script\n\n    if '-h' in sys.argv or '--h' in sys.argv or '-help' in sys.argv or '--help' in sys.argv:  # If the ask for help\n        print(text)  # Display the help text if there isn't one passed\n        sys.exit(0)  # Exit the script after displaying help\n    else:","254":"Similar lines in 2 files\n==logs:15\n==puttylogs:17\nzip_program = \"zip.exe\"  # Set the Variable zip_program - 1.1\n\nfor files in os.listdir(logsdir):  # Find all the files in the directory\n    if files.endswith(\".log\"):  # Check to ensure the files in the directory end in .log\n        files1 = files + \".\" + strftime(\n            \"%Y-%m-%d\") + \".zip\"  # Create the Variable files1, this is the files in the directory, then we add a suffix with the date and the zip extension\n        os.chdir(logsdir)  # Change directory to the logsdir\n        os.system(zip_program + \" \" + files1 + \" \" + files)  # Zip the logs into dated zip files for each server. - 1.1","255":"Similar lines in 2 files\n==Type of angles of a triangle:2\n==Type_of_angles_of_triangle:3\ndef angle_type():\n    angles = []\n\n    myDict = {\"All angles are less than 90\u00b0.\":\"Acute Angle Triangle\",\"Has a right angle (90\u00b0)\":\"Right Angle Triangle\",\n              \"Has an angle more than 90\u00b0\":\"Obtuse Angle triangle\"}\n\n    print(\"**************Enter the angles of your triangle to know it's type*********\")\n","256":"Similar lines in 2 files\n==daily_checks:21\n==script_count:19\ndef clear_screen():  # Function to clear the screen\n    if os.name == \"posix\":  # Unix\/Linux\/MacOS\/BSD\/etc\n        os.system('clear')  # Clear the Screen\n    elif os.name in (\"nt\", \"dos\", \"ce\"):  # DOS\/Windows\n        os.system('CLS')  # Clear the Screen\n\n","257":"Similar lines in 2 files\n==blackJackGUI:18\n==classicIndianCardMatch:9\n    def __init__(self, suit, rank):\n        if (suit in SUITS) and (rank in RANKS):\n            self.suit = suit\n            self.rank = rank\n        else:\n            self.suit = None\n            self.rank = None","258":"Similar lines in 2 files\n==Type of angles of a triangle:34\n==Type_of_angles_of_triangle:57\n    sum_of_angles = angle1 + angle2 +angle3\n    if(sum_of_angles > 180 or sum_of_angles < 180):\n        print(\"It is not a triangle!Please enter valid angles.\")\n        return -1\n\n    print(\"You have entered : \" +str(angles))\n","259":"Similar lines in 2 files\n==Delete_Linked_List:46\n==Reverse_list_in_groups:44\n    L_list.Insert_At_End(1)\n    L_list.Insert_At_End(2)\n    L_list.Insert_At_End(3)\n    L_list.Insert_At_End(4)\n    L_list.Insert_At_End(5)\n    L_list.Insert_At_End(6)\n    L_list.Insert_At_End(7)"},"number":{"0":"R1732","1":"W0401","2":"W0201","3":"W0201","4":"W0201","5":"C0200","6":"R1732","7":"R1710","8":"W0622","9":"R1732","10":"R1732","11":"R1732","12":"R1732","13":"R1732","14":"R1732","15":"R1732","16":"R1732","17":"W0622","18":"W0622","19":"R1732","20":"R1732","21":"C0121","22":"R1732","23":"R1732","24":"R1732","25":"R1732","26":"R1732","27":"R1732","28":"R1732","29":"R1710","30":"W0201","31":"W0201","32":"W0201","33":"W0201","34":"W0201","35":"W0201","36":"W0201","37":"W0201","38":"W0201","39":"W0201","40":"W0201","41":"W0201","42":"W0201","43":"W0201","44":"C0200","45":"C0200","46":"C0121","47":"C0121","48":"C0121","49":"R1710","50":"W0401","51":"W0622","52":"R1714","53":"R1714","54":"W0622","55":"R1710","56":"C0200","57":"W0401","58":"W0622","59":"W0622","60":"W0401","61":"R1714","62":"C0121","63":"R1710","64":"R1710","65":"W0622","66":"C0121","67":"W0622","68":"W0622","69":"R1732","70":"R1732","71":"C0121","72":"C0200","73":"W0201","74":"C0121","75":"C0121","76":"C0121","77":"C0121","78":"R1714","79":"R1714","80":"C0121","81":"C0121","82":"C0121","83":"R1714","84":"C0200","85":"R1732","86":"R1732","87":"R1732","88":"C0121","89":"C0200","90":"C0121","91":"C0200","92":"C0200","93":"R1732","94":"R1732","95":"R1732","96":"R1732","97":"R1732","98":"R1732","99":"W0201","100":"R1710","101":"W0622","102":"R1732","103":"W0401","104":"W0401","105":"W0622","106":"R1710","107":"C0200","108":"C0200","109":"C0200","110":"C0200","111":"C0200","112":"C0200","113":"C0200","114":"R1732","115":"R1732","116":"R1732","117":"R1732","118":"R1714","119":"R1732","120":"W0622","121":"W0401","122":"W0622","123":"R1732","124":"W0622","125":"W0622","126":"C0200","127":"W0401","128":"W0401","129":"R1710","130":"R1732","131":"C0200","132":"C0200","133":"C0200","134":"R1714","135":"W0622","136":"R1732","137":"R1732","138":"C0200","139":"C0200","140":"C0121","141":"C0121","142":"R1732","143":"R1732","144":"W0401","145":"R1732","146":"R1732","147":"C1801","148":"R1732","149":"R1732","150":"R1732","151":"W0401","152":"W0622","153":"W0401","154":"W0401","155":"R1732","156":"R1732","157":"C0121","158":"C0121","159":"R1732","160":"R1732","161":"R1732","162":"R1732","163":"R1732","164":"R1732","165":"R1732","166":"R1732","167":"R1732","168":"R1732","169":"R1732","170":"R1732","171":"R1732","172":"R1732","173":"C0121","174":"R1732","175":"W0622","176":"W0622","177":"R1732","178":"W0401","179":"W0622","180":"R1732","181":"C0121","182":"W0401","183":"R1714","184":"W0401","185":"W0622","186":"R1710","187":"R1714","188":"R1714","189":"W0622","190":"R1732","191":"R1732","192":"W0622","193":"R1732","194":"R1732","195":"R1732","196":"R1732","197":"W0201","198":"W0201","199":"R1732","200":"R1732","201":"R1732","202":"R1732","203":"C0200","204":"C0200","205":"C0200","206":"R1732","207":"C0121","208":"R1732","209":"R1710","210":"R1710","211":"R1710","212":"C0200","213":"C0200","214":"C0200","215":"W0622","216":"W0102","217":"W0622","218":"R1732","219":"R1732","220":"R1732","221":"C0200","222":"C0121","223":"C0200","224":"C0121","225":"R1710","226":"W0622","227":"W0622","228":"C0200","229":"C0200","230":"C0121","231":"W0622","232":"W0401","233":"W0401","234":"R1732","235":"R1732","236":"R1732","237":"R1732","238":"R0801","239":"R0801","240":"R0801","241":"R0801","242":"R0801","243":"R0801","244":"R0801","245":"R0801","246":"R0801","247":"R0801","248":"R0801","249":"R0801","250":"R0801","251":"R0801","252":"R0801","253":"R0801","254":"R0801","255":"R0801","256":"R0801","257":"R0801","258":"R0801","259":"R0801"},"linter":{"0":"pylint","1":"pylint","2":"pylint","3":"pylint","4":"pylint","5":"pylint","6":"pylint","7":"pylint","8":"pylint","9":"pylint","10":"pylint","11":"pylint","12":"pylint","13":"pylint","14":"pylint","15":"pylint","16":"pylint","17":"pylint","18":"pylint","19":"pylint","20":"pylint","21":"pylint","22":"pylint","23":"pylint","24":"pylint","25":"pylint","26":"pylint","27":"pylint","28":"pylint","29":"pylint","30":"pylint","31":"pylint","32":"pylint","33":"pylint","34":"pylint","35":"pylint","36":"pylint","37":"pylint","38":"pylint","39":"pylint","40":"pylint","41":"pylint","42":"pylint","43":"pylint","44":"pylint","45":"pylint","46":"pylint","47":"pylint","48":"pylint","49":"pylint","50":"pylint","51":"pylint","52":"pylint","53":"pylint","54":"pylint","55":"pylint","56":"pylint","57":"pylint","58":"pylint","59":"pylint","60":"pylint","61":"pylint","62":"pylint","63":"pylint","64":"pylint","65":"pylint","66":"pylint","67":"pylint","68":"pylint","69":"pylint","70":"pylint","71":"pylint","72":"pylint","73":"pylint","74":"pylint","75":"pylint","76":"pylint","77":"pylint","78":"pylint","79":"pylint","80":"pylint","81":"pylint","82":"pylint","83":"pylint","84":"pylint","85":"pylint","86":"pylint","87":"pylint","88":"pylint","89":"pylint","90":"pylint","91":"pylint","92":"pylint","93":"pylint","94":"pylint","95":"pylint","96":"pylint","97":"pylint","98":"pylint","99":"pylint","100":"pylint","101":"pylint","102":"pylint","103":"pylint","104":"pylint","105":"pylint","106":"pylint","107":"pylint","108":"pylint","109":"pylint","110":"pylint","111":"pylint","112":"pylint","113":"pylint","114":"pylint","115":"pylint","116":"pylint","117":"pylint","118":"pylint","119":"pylint","120":"pylint","121":"pylint","122":"pylint","123":"pylint","124":"pylint","125":"pylint","126":"pylint","127":"pylint","128":"pylint","129":"pylint","130":"pylint","131":"pylint","132":"pylint","133":"pylint","134":"pylint","135":"pylint","136":"pylint","137":"pylint","138":"pylint","139":"pylint","140":"pylint","141":"pylint","142":"pylint","143":"pylint","144":"pylint","145":"pylint","146":"pylint","147":"pylint","148":"pylint","149":"pylint","150":"pylint","151":"pylint","152":"pylint","153":"pylint","154":"pylint","155":"pylint","156":"pylint","157":"pylint","158":"pylint","159":"pylint","160":"pylint","161":"pylint","162":"pylint","163":"pylint","164":"pylint","165":"pylint","166":"pylint","167":"pylint","168":"pylint","169":"pylint","170":"pylint","171":"pylint","172":"pylint","173":"pylint","174":"pylint","175":"pylint","176":"pylint","177":"pylint","178":"pylint","179":"pylint","180":"pylint","181":"pylint","182":"pylint","183":"pylint","184":"pylint","185":"pylint","186":"pylint","187":"pylint","188":"pylint","189":"pylint","190":"pylint","191":"pylint","192":"pylint","193":"pylint","194":"pylint","195":"pylint","196":"pylint","197":"pylint","198":"pylint","199":"pylint","200":"pylint","201":"pylint","202":"pylint","203":"pylint","204":"pylint","205":"pylint","206":"pylint","207":"pylint","208":"pylint","209":"pylint","210":"pylint","211":"pylint","212":"pylint","213":"pylint","214":"pylint","215":"pylint","216":"pylint","217":"pylint","218":"pylint","219":"pylint","220":"pylint","221":"pylint","222":"pylint","223":"pylint","224":"pylint","225":"pylint","226":"pylint","227":"pylint","228":"pylint","229":"pylint","230":"pylint","231":"pylint","232":"pylint","233":"pylint","234":"pylint","235":"pylint","236":"pylint","237":"pylint","238":"pylint","239":"pylint","240":"pylint","241":"pylint","242":"pylint","243":"pylint","244":"pylint","245":"pylint","246":"pylint","247":"pylint","248":"pylint","249":"pylint","250":"pylint","251":"pylint","252":"pylint","253":"pylint","254":"pylint","255":"pylint","256":"pylint","257":"pylint","258":"pylint","259":"pylint"},"lines_amount":{"0":48,"1":76,"2":76,"3":76,"4":76,"5":82,"6":38,"7":59,"8":115,"9":115,"10":115,"11":115,"12":115,"13":115,"14":120,"15":120,"16":38,"17":55,"18":394,"19":394,"20":394,"21":394,"22":394,"23":394,"24":394,"25":394,"26":394,"27":394,"28":394,"29":56,"30":126,"31":126,"32":126,"33":126,"34":126,"35":126,"36":126,"37":126,"38":126,"39":126,"40":126,"41":126,"42":126,"43":126,"44":126,"45":21,"46":67,"47":67,"48":67,"49":41,"50":117,"51":66,"52":129,"53":129,"54":18,"55":44,"56":38,"57":20,"58":13,"59":13,"60":30,"61":177,"62":177,"63":54,"64":77,"65":36,"66":36,"67":21,"68":13,"69":13,"70":33,"71":383,"72":159,"73":159,"74":159,"75":159,"76":1343,"77":1343,"78":1343,"79":1343,"80":1343,"81":1343,"82":1343,"83":1343,"84":51,"85":82,"86":44,"87":44,"88":105,"89":105,"90":105,"91":105,"92":13,"93":20,"94":80,"95":80,"96":80,"97":80,"98":80,"99":100,"100":100,"101":95,"102":64,"103":67,"104":67,"105":42,"106":158,"107":82,"108":82,"109":82,"110":82,"111":82,"112":82,"113":82,"114":27,"115":38,"116":68,"117":68,"118":76,"119":32,"120":35,"121":174,"122":64,"123":29,"124":9,"125":18,"126":18,"127":74,"128":74,"129":113,"130":51,"131":137,"132":137,"133":137,"134":137,"135":67,"136":67,"137":67,"138":21,"139":21,"140":42,"141":42,"142":15,"143":15,"144":215,"145":49,"146":49,"147":60,"148":71,"149":71,"150":42,"151":22,"152":67,"153":67,"154":67,"155":67,"156":67,"157":67,"158":67,"159":50,"160":50,"161":50,"162":50,"163":50,"164":50,"165":50,"166":50,"167":106,"168":106,"169":106,"170":106,"171":106,"172":106,"173":106,"174":106,"175":50,"176":44,"177":44,"178":9,"179":78,"180":78,"181":78,"182":168,"183":6,"184":59,"185":59,"186":50,"187":50,"188":50,"189":22,"190":36,"191":27,"192":30,"193":148,"194":148,"195":148,"196":148,"197":125,"198":125,"199":125,"200":103,"201":103,"202":103,"203":21,"204":21,"205":21,"206":105,"207":53,"208":46,"209":57,"210":57,"211":26,"212":83,"213":83,"214":83,"215":140,"216":140,"217":140,"218":140,"219":140,"220":140,"221":117,"222":117,"223":117,"224":117,"225":117,"226":83,"227":83,"228":17,"229":17,"230":45,"231":55,"232":61,"233":25,"234":44,"235":44,"236":44,"237":44,"238":41,"239":41,"240":41,"241":41,"242":41,"243":41,"244":41,"245":41,"246":41,"247":41,"248":41,"249":41,"250":41,"251":41,"252":41,"253":41,"254":41,"255":41,"256":41,"257":41,"258":41,"259":41},"commit":{"0":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","1":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","2":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","3":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","4":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","5":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","6":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","7":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","8":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","9":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","10":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","11":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","12":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","13":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","14":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","15":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","16":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","17":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","18":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","19":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","20":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","21":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","22":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","23":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","24":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","25":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","26":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","27":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","28":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","29":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","30":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","31":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","32":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","33":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","34":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","35":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","36":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","37":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","38":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","39":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","40":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","41":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","42":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","43":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","44":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","45":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","46":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","47":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","48":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","49":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","50":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","51":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","52":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","53":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","54":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","55":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","56":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","57":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","58":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","59":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","60":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","61":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","62":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","63":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","64":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","65":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","66":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","67":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","68":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","69":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","70":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","71":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","72":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","73":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","74":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","75":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","76":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","77":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","78":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","79":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","80":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","81":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","82":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","83":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","84":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","85":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","86":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","87":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","88":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","89":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","90":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","91":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","92":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","93":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","94":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","95":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","96":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","97":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","98":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","99":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","100":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","101":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","102":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","103":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","104":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","105":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","106":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","107":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","108":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","109":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","110":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","111":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","112":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","113":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","114":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","115":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","116":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","117":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","118":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","119":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","120":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","121":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","122":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","123":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","124":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","125":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","126":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","127":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","128":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","129":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","130":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","131":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","132":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","133":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","134":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","135":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","136":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","137":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","138":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","139":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","140":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","141":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","142":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","143":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","144":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","145":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","146":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","147":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","148":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","149":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","150":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","151":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","152":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","153":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","154":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","155":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","156":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","157":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","158":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","159":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","160":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","161":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","162":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","163":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","164":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","165":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","166":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","167":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","168":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","169":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","170":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","171":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","172":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","173":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","174":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","175":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","176":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","177":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","178":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","179":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","180":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","181":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","182":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","183":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","184":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","185":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","186":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","187":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","188":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","189":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","190":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","191":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","192":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","193":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","194":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","195":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","196":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","197":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","198":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","199":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","200":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","201":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","202":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","203":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","204":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","205":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","206":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","207":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","208":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","209":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","210":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","211":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","212":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","213":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","214":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","215":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","216":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","217":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","218":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","219":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","220":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","221":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","222":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","223":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","224":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","225":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","226":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","227":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","228":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","229":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","230":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","231":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","232":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","233":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","234":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","235":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","236":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","237":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","238":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","239":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","240":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","241":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","242":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","243":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","244":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","245":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","246":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","247":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","248":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","249":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","250":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","251":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","252":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","253":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","254":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","255":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","256":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","257":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","258":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143","259":"b49bae4a60cc027e88ecc9882a71e0ba1ad2a143"},"repo":{"0":"geekcomputers\/Python","1":"geekcomputers\/Python","2":"geekcomputers\/Python","3":"geekcomputers\/Python","4":"geekcomputers\/Python","5":"geekcomputers\/Python","6":"geekcomputers\/Python","7":"geekcomputers\/Python","8":"geekcomputers\/Python","9":"geekcomputers\/Python","10":"geekcomputers\/Python","11":"geekcomputers\/Python","12":"geekcomputers\/Python","13":"geekcomputers\/Python","14":"geekcomputers\/Python","15":"geekcomputers\/Python","16":"geekcomputers\/Python","17":"geekcomputers\/Python","18":"geekcomputers\/Python","19":"geekcomputers\/Python","20":"geekcomputers\/Python","21":"geekcomputers\/Python","22":"geekcomputers\/Python","23":"geekcomputers\/Python","24":"geekcomputers\/Python","25":"geekcomputers\/Python","26":"geekcomputers\/Python","27":"geekcomputers\/Python","28":"geekcomputers\/Python","29":"geekcomputers\/Python","30":"geekcomputers\/Python","31":"geekcomputers\/Python","32":"geekcomputers\/Python","33":"geekcomputers\/Python","34":"geekcomputers\/Python","35":"geekcomputers\/Python","36":"geekcomputers\/Python","37":"geekcomputers\/Python","38":"geekcomputers\/Python","39":"geekcomputers\/Python","40":"geekcomputers\/Python","41":"geekcomputers\/Python","42":"geekcomputers\/Python","43":"geekcomputers\/Python","44":"geekcomputers\/Python","45":"geekcomputers\/Python","46":"geekcomputers\/Python","47":"geekcomputers\/Python","48":"geekcomputers\/Python","49":"geekcomputers\/Python","50":"geekcomputers\/Python","51":"geekcomputers\/Python","52":"geekcomputers\/Python","53":"geekcomputers\/Python","54":"geekcomputers\/Python","55":"geekcomputers\/Python","56":"geekcomputers\/Python","57":"geekcomputers\/Python","58":"geekcomputers\/Python","59":"geekcomputers\/Python","60":"geekcomputers\/Python","61":"geekcomputers\/Python","62":"geekcomputers\/Python","63":"geekcomputers\/Python","64":"geekcomputers\/Python","65":"geekcomputers\/Python","66":"geekcomputers\/Python","67":"geekcomputers\/Python","68":"geekcomputers\/Python","69":"geekcomputers\/Python","70":"geekcomputers\/Python","71":"geekcomputers\/Python","72":"geekcomputers\/Python","73":"geekcomputers\/Python","74":"geekcomputers\/Python","75":"geekcomputers\/Python","76":"geekcomputers\/Python","77":"geekcomputers\/Python","78":"geekcomputers\/Python","79":"geekcomputers\/Python","80":"geekcomputers\/Python","81":"geekcomputers\/Python","82":"geekcomputers\/Python","83":"geekcomputers\/Python","84":"geekcomputers\/Python","85":"geekcomputers\/Python","86":"geekcomputers\/Python","87":"geekcomputers\/Python","88":"geekcomputers\/Python","89":"geekcomputers\/Python","90":"geekcomputers\/Python","91":"geekcomputers\/Python","92":"geekcomputers\/Python","93":"geekcomputers\/Python","94":"geekcomputers\/Python","95":"geekcomputers\/Python","96":"geekcomputers\/Python","97":"geekcomputers\/Python","98":"geekcomputers\/Python","99":"geekcomputers\/Python","100":"geekcomputers\/Python","101":"geekcomputers\/Python","102":"geekcomputers\/Python","103":"geekcomputers\/Python","104":"geekcomputers\/Python","105":"geekcomputers\/Python","106":"geekcomputers\/Python","107":"geekcomputers\/Python","108":"geekcomputers\/Python","109":"geekcomputers\/Python","110":"geekcomputers\/Python","111":"geekcomputers\/Python","112":"geekcomputers\/Python","113":"geekcomputers\/Python","114":"geekcomputers\/Python","115":"geekcomputers\/Python","116":"geekcomputers\/Python","117":"geekcomputers\/Python","118":"geekcomputers\/Python","119":"geekcomputers\/Python","120":"geekcomputers\/Python","121":"geekcomputers\/Python","122":"geekcomputers\/Python","123":"geekcomputers\/Python","124":"geekcomputers\/Python","125":"geekcomputers\/Python","126":"geekcomputers\/Python","127":"geekcomputers\/Python","128":"geekcomputers\/Python","129":"geekcomputers\/Python","130":"geekcomputers\/Python","131":"geekcomputers\/Python","132":"geekcomputers\/Python","133":"geekcomputers\/Python","134":"geekcomputers\/Python","135":"geekcomputers\/Python","136":"geekcomputers\/Python","137":"geekcomputers\/Python","138":"geekcomputers\/Python","139":"geekcomputers\/Python","140":"geekcomputers\/Python","141":"geekcomputers\/Python","142":"geekcomputers\/Python","143":"geekcomputers\/Python","144":"geekcomputers\/Python","145":"geekcomputers\/Python","146":"geekcomputers\/Python","147":"geekcomputers\/Python","148":"geekcomputers\/Python","149":"geekcomputers\/Python","150":"geekcomputers\/Python","151":"geekcomputers\/Python","152":"geekcomputers\/Python","153":"geekcomputers\/Python","154":"geekcomputers\/Python","155":"geekcomputers\/Python","156":"geekcomputers\/Python","157":"geekcomputers\/Python","158":"geekcomputers\/Python","159":"geekcomputers\/Python","160":"geekcomputers\/Python","161":"geekcomputers\/Python","162":"geekcomputers\/Python","163":"geekcomputers\/Python","164":"geekcomputers\/Python","165":"geekcomputers\/Python","166":"geekcomputers\/Python","167":"geekcomputers\/Python","168":"geekcomputers\/Python","169":"geekcomputers\/Python","170":"geekcomputers\/Python","171":"geekcomputers\/Python","172":"geekcomputers\/Python","173":"geekcomputers\/Python","174":"geekcomputers\/Python","175":"geekcomputers\/Python","176":"geekcomputers\/Python","177":"geekcomputers\/Python","178":"geekcomputers\/Python","179":"geekcomputers\/Python","180":"geekcomputers\/Python","181":"geekcomputers\/Python","182":"geekcomputers\/Python","183":"geekcomputers\/Python","184":"geekcomputers\/Python","185":"geekcomputers\/Python","186":"geekcomputers\/Python","187":"geekcomputers\/Python","188":"geekcomputers\/Python","189":"geekcomputers\/Python","190":"geekcomputers\/Python","191":"geekcomputers\/Python","192":"geekcomputers\/Python","193":"geekcomputers\/Python","194":"geekcomputers\/Python","195":"geekcomputers\/Python","196":"geekcomputers\/Python","197":"geekcomputers\/Python","198":"geekcomputers\/Python","199":"geekcomputers\/Python","200":"geekcomputers\/Python","201":"geekcomputers\/Python","202":"geekcomputers\/Python","203":"geekcomputers\/Python","204":"geekcomputers\/Python","205":"geekcomputers\/Python","206":"geekcomputers\/Python","207":"geekcomputers\/Python","208":"geekcomputers\/Python","209":"geekcomputers\/Python","210":"geekcomputers\/Python","211":"geekcomputers\/Python","212":"geekcomputers\/Python","213":"geekcomputers\/Python","214":"geekcomputers\/Python","215":"geekcomputers\/Python","216":"geekcomputers\/Python","217":"geekcomputers\/Python","218":"geekcomputers\/Python","219":"geekcomputers\/Python","220":"geekcomputers\/Python","221":"geekcomputers\/Python","222":"geekcomputers\/Python","223":"geekcomputers\/Python","224":"geekcomputers\/Python","225":"geekcomputers\/Python","226":"geekcomputers\/Python","227":"geekcomputers\/Python","228":"geekcomputers\/Python","229":"geekcomputers\/Python","230":"geekcomputers\/Python","231":"geekcomputers\/Python","232":"geekcomputers\/Python","233":"geekcomputers\/Python","234":"geekcomputers\/Python","235":"geekcomputers\/Python","236":"geekcomputers\/Python","237":"geekcomputers\/Python","238":"geekcomputers\/Python","239":"geekcomputers\/Python","240":"geekcomputers\/Python","241":"geekcomputers\/Python","242":"geekcomputers\/Python","243":"geekcomputers\/Python","244":"geekcomputers\/Python","245":"geekcomputers\/Python","246":"geekcomputers\/Python","247":"geekcomputers\/Python","248":"geekcomputers\/Python","249":"geekcomputers\/Python","250":"geekcomputers\/Python","251":"geekcomputers\/Python","252":"geekcomputers\/Python","253":"geekcomputers\/Python","254":"geekcomputers\/Python","255":"geekcomputers\/Python","256":"geekcomputers\/Python","257":"geekcomputers\/Python","258":"geekcomputers\/Python","259":"geekcomputers\/Python"},"stargazers":{"0":23921,"1":23921,"2":23921,"3":23921,"4":23921,"5":23921,"6":23921,"7":23921,"8":23921,"9":23921,"10":23921,"11":23921,"12":23921,"13":23921,"14":23921,"15":23921,"16":23921,"17":23921,"18":23921,"19":23921,"20":23921,"21":23921,"22":23921,"23":23921,"24":23921,"25":23921,"26":23921,"27":23921,"28":23921,"29":23921,"30":23921,"31":23921,"32":23921,"33":23921,"34":23921,"35":23921,"36":23921,"37":23921,"38":23921,"39":23921,"40":23921,"41":23921,"42":23921,"43":23921,"44":23921,"45":23921,"46":23921,"47":23921,"48":23921,"49":23921,"50":23921,"51":23921,"52":23921,"53":23921,"54":23921,"55":23921,"56":23921,"57":23921,"58":23921,"59":23921,"60":23921,"61":23921,"62":23921,"63":23921,"64":23921,"65":23921,"66":23921,"67":23921,"68":23921,"69":23921,"70":23921,"71":23921,"72":23921,"73":23921,"74":23921,"75":23921,"76":23921,"77":23921,"78":23921,"79":23921,"80":23921,"81":23921,"82":23921,"83":23921,"84":23921,"85":23921,"86":23921,"87":23921,"88":23921,"89":23921,"90":23921,"91":23921,"92":23921,"93":23921,"94":23921,"95":23921,"96":23921,"97":23921,"98":23921,"99":23921,"100":23921,"101":23921,"102":23921,"103":23921,"104":23921,"105":23921,"106":23921,"107":23921,"108":23921,"109":23921,"110":23921,"111":23921,"112":23921,"113":23921,"114":23921,"115":23921,"116":23921,"117":23921,"118":23921,"119":23921,"120":23921,"121":23921,"122":23921,"123":23921,"124":23921,"125":23921,"126":23921,"127":23921,"128":23921,"129":23921,"130":23921,"131":23921,"132":23921,"133":23921,"134":23921,"135":23921,"136":23921,"137":23921,"138":23921,"139":23921,"140":23921,"141":23921,"142":23921,"143":23921,"144":23921,"145":23921,"146":23921,"147":23921,"148":23921,"149":23921,"150":23921,"151":23921,"152":23921,"153":23921,"154":23921,"155":23921,"156":23921,"157":23921,"158":23921,"159":23921,"160":23921,"161":23921,"162":23921,"163":23921,"164":23921,"165":23921,"166":23921,"167":23921,"168":23921,"169":23921,"170":23921,"171":23921,"172":23921,"173":23921,"174":23921,"175":23921,"176":23921,"177":23921,"178":23921,"179":23921,"180":23921,"181":23921,"182":23921,"183":23921,"184":23921,"185":23921,"186":23921,"187":23921,"188":23921,"189":23921,"190":23921,"191":23921,"192":23921,"193":23921,"194":23921,"195":23921,"196":23921,"197":23921,"198":23921,"199":23921,"200":23921,"201":23921,"202":23921,"203":23921,"204":23921,"205":23921,"206":23921,"207":23921,"208":23921,"209":23921,"210":23921,"211":23921,"212":23921,"213":23921,"214":23921,"215":23921,"216":23921,"217":23921,"218":23921,"219":23921,"220":23921,"221":23921,"222":23921,"223":23921,"224":23921,"225":23921,"226":23921,"227":23921,"228":23921,"229":23921,"230":23921,"231":23921,"232":23921,"233":23921,"234":23921,"235":23921,"236":23921,"237":23921,"238":23921,"239":23921,"240":23921,"241":23921,"242":23921,"243":23921,"244":23921,"245":23921,"246":23921,"247":23921,"248":23921,"249":23921,"250":23921,"251":23921,"252":23921,"253":23921,"254":23921,"255":23921,"256":23921,"257":23921,"258":23921,"259":23921}}