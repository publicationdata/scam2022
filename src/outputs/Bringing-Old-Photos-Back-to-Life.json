{"type":{"0":"W","1":"W","2":"R","3":"R","4":"R","5":"R","6":"R","7":"R","8":"R","9":"R","10":"R","11":"R","12":"R","13":"R","14":"R","15":"R","16":"R","17":"R","18":"R","19":"R","20":"R","21":"R","22":"R","23":"R","24":"R"},"module":{"0":"predict","1":"predict","2":"run","3":"run","4":"run","5":"run","6":"run","7":"run","8":"run","9":"run","10":"run","11":"run","12":"run","13":"run","14":"run","15":"run","16":"run","17":"run","18":"run","19":"run","20":"run","21":"run","22":"run","23":"run","24":"run"},"obj":{"0":"Predictor.setup","1":"Predictor.setup","2":"","3":"","4":"","5":"","6":"","7":"","8":"","9":"","10":"","11":"","12":"","13":"","14":"","15":"","16":"","17":"","18":"","19":"","20":"","21":"","22":"","23":"","24":""},"lnum":{"0":31,"1":32,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1},"col":{"0":8,"1":8,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0},"filename":{"0":"predict.py","1":"predict.py","2":"run.py","3":"run.py","4":"run.py","5":"run.py","6":"run.py","7":"run.py","8":"run.py","9":"run.py","10":"run.py","11":"run.py","12":"run.py","13":"run.py","14":"run.py","15":"run.py","16":"run.py","17":"run.py","18":"run.py","19":"run.py","20":"run.py","21":"run.py","22":"run.py","23":"run.py","24":"run.py"},"symbol":{"0":"attribute-defined-outside-init","1":"attribute-defined-outside-init","2":"duplicate-code","3":"duplicate-code","4":"duplicate-code","5":"duplicate-code","6":"duplicate-code","7":"duplicate-code","8":"duplicate-code","9":"duplicate-code","10":"duplicate-code","11":"duplicate-code","12":"duplicate-code","13":"duplicate-code","14":"duplicate-code","15":"duplicate-code","16":"duplicate-code","17":"duplicate-code","18":"duplicate-code","19":"duplicate-code","20":"duplicate-code","21":"duplicate-code","22":"duplicate-code","23":"duplicate-code","24":"duplicate-code"},"text":{"0":"Attribute 'opts' defined outside __init__","1":"Attribute 'basepath' defined outside __init__","2":"Similar lines in 2 files\n==GUI:51\n==run:49\n    if not os.path.exists(stage_1_output_dir):\n        os.makedirs(stage_1_output_dir)\n\n    if not opts.with_scratch:\n        stage_1_command = (\n            \"python test.py --test_mode Full --Quality_restore --test_input \"\n            + stage_1_input_dir\n            + \" --outputs_dir \"\n            + stage_1_output_dir\n            + \" --gpu_ids \"\n            + gpu1\n        )\n        run_cmd(stage_1_command)\n    else:\n\n        mask_dir = os.path.join(stage_1_output_dir, \"masks\")\n        new_input = os.path.join(mask_dir, \"input\")\n        new_mask = os.path.join(mask_dir, \"mask\")\n        stage_1_command_1 = (\n            \"python detection.py --test_path \"\n            + stage_1_input_dir\n            + \" --output_dir \"\n            + mask_dir\n            + \" --input_size full_size\"\n            + \" --GPU \"\n            + gpu1\n        )","3":"Similar lines in 2 files\n==predict:70\n==run:53\n                stage_1_command = (\n                        \"python test.py --test_mode Full --Quality_restore --test_input \"\n                        + stage_1_input_dir\n                        + \" --outputs_dir \"\n                        + stage_1_output_dir\n                        + \" --gpu_ids \"\n                        + gpu1\n                )\n                run_cmd(stage_1_command)\n            else:\n\n                mask_dir = os.path.join(stage_1_output_dir, \"masks\")\n                new_input = os.path.join(mask_dir, \"input\")\n                new_mask = os.path.join(mask_dir, \"mask\")\n                stage_1_command_1 = (\n                        \"python detection.py --test_path \"\n                        + stage_1_input_dir\n                        + \" --output_dir \"\n                        + mask_dir\n                        + \" --input_size full_size\"\n                        + \" --GPU \"\n                        + gpu1\n                )\n","4":"Similar lines in 2 files\n==GUI:55\n==predict:70\n                stage_1_command = (\n                        \"python test.py --test_mode Full --Quality_restore --test_input \"\n                        + stage_1_input_dir\n                        + \" --outputs_dir \"\n                        + stage_1_output_dir\n                        + \" --gpu_ids \"\n                        + gpu1\n                )\n                run_cmd(stage_1_command)\n            else:\n\n                mask_dir = os.path.join(stage_1_output_dir, \"masks\")\n                new_input = os.path.join(mask_dir, \"input\")\n                new_mask = os.path.join(mask_dir, \"mask\")\n                stage_1_command_1 = (\n                        \"python detection.py --test_path \"\n                        + stage_1_input_dir\n                        + \" --output_dir \"\n                        + mask_dir\n                        + \" --input_size full_size\"\n                        + \" --GPU \"\n                        + gpu1\n                )","5":"Similar lines in 2 files\n==GUI:129\n==run:153\n    stage_3_command = (\n        \"python test_face.py --old_face_folder \"\n        + stage_3_input_face\n        + \" --old_face_label_folder \"\n        + stage_3_input_mask\n        + \" --tensorboard_log --name \"\n        + opts.checkpoint_name\n        + \" --gpu_ids \"\n        + gpu1\n        + \" --load_size 256 --label_nc 18 --no_instance --preprocess_mode resize --batchSize 4 --results_dir \"\n        + stage_3_output_dir\n        + \" --no_parsing_map\"\n    )\n    run_cmd(stage_3_command)\n    print(\"Finish Stage 3 ...\")\n    print(\"\\n\")\n\n    # Stage 4: Warp back\n    print(\"Running Stage 4: Blending\")\n    os.chdir(\"..\/.\/Face_Detection\")","6":"Similar lines in 2 files\n==GUI:88\n==run:93\n        run_cmd(stage_1_command_1)\n        run_cmd(stage_1_command_2)\n\n    ## Solve the case when there is no face in the old photo\n    stage_1_results = os.path.join(stage_1_output_dir, \"restored_image\")\n    stage_4_output_dir = os.path.join(opts.output_folder, \"final_output\")\n    if not os.path.exists(stage_4_output_dir):\n        os.makedirs(stage_4_output_dir)\n    for x in os.listdir(stage_1_results):\n        img_dir = os.path.join(stage_1_results, x)\n        shutil.copy(img_dir, stage_4_output_dir)\n\n    print(\"Finish Stage 1 ...\")\n    print(\"\\n\")\n\n    ## Stage 2: Face Detection\n\n    print(\"Running Stage 2: Face Detection\")\n    os.chdir(\"..\/.\/Face_Detection\")\n    stage_2_input_dir = os.path.join(stage_1_output_dir, \"restored_image\")","7":"Similar lines in 2 files\n==GUI:33\n==run:32\n    opts = parser.parse_args()\n\n    gpu1 = opts.GPU\n\n    # resolve relative paths before changing directory\n    opts.input_folder = os.path.abspath(opts.input_folder)\n    opts.output_folder = os.path.abspath(opts.output_folder)\n    if not os.path.exists(opts.output_folder):\n        os.makedirs(opts.output_folder)\n\n    main_environment = os.getcwd()\n\n    # Stage 1: Overall Quality Improve\n    print(\"Running Stage 1: Overall restoration\")\n    os.chdir(\".\/Global\")\n    stage_1_input_dir = opts.input_folder","8":"Similar lines in 2 files\n==GUI:155\n==run:188\n        stage_4_command = (\n            \"python align_warp_back_multiple_dlib.py --origin_url \"\n            + stage_4_input_image_dir\n            + \" --replace_url \"\n            + stage_4_input_face_dir\n            + \" --save_url \"\n            + stage_4_output_dir\n        )\n    run_cmd(stage_4_command)\n    print(\"Finish Stage 4 ...\")\n    print(\"\\n\")\n\n    print(\"All the processing is done. Please check the results.\")\n","9":"Similar lines in 2 files\n==GUI:96\n==predict:118\n    for x in os.listdir(stage_1_results):\n        img_dir = os.path.join(stage_1_results, x)\n        shutil.copy(img_dir, stage_4_output_dir)\n\n    print(\"Finish Stage 1 ...\")\n    print(\"\\n\")\n\n    # Stage 2: Face Detection\n\n    print(\"Running Stage 2: Face Detection\")\n    os.chdir(\"..\/.\/Face_Detection\")\n    stage_2_input_dir = os.path.join(stage_1_output_dir, \"restored_image\")\n    stage_2_output_dir = os.path.join(","10":"Similar lines in 2 files\n==predict:118\n==run:101\n            for x in os.listdir(stage_1_results):\n                img_dir = os.path.join(stage_1_results, x)\n                shutil.copy(img_dir, stage_4_output_dir)\n\n            print(\"Finish Stage 1 ...\")\n            print(\"\\n\")\n\n            ## Stage 2: Face Detection\n\n            print(\"Running Stage 2: Face Detection\")\n            os.chdir(\"..\/.\/Face_Detection\")\n            stage_2_input_dir = os.path.join(stage_1_output_dir, \"restored_image\")","11":"Similar lines in 2 files\n==GUI:115\n==run:123\n        )\n    run_cmd(stage_2_command)\n    print(\"Finish Stage 2 ...\")\n    print(\"\\n\")\n\n    ## Stage 3: Face Restore\n    print(\"Running Stage 3: Face Enhancement\")\n    os.chdir(\"..\/.\/Face_Enhancement\")\n    stage_3_input_mask = \".\/\"\n    stage_3_input_face = stage_2_output_dir","12":"Similar lines in 2 files\n==GUI:116\n==predict:142\n            run_cmd(stage_2_command)\n            print(\"Finish Stage 2 ...\")\n            print(\"\\n\")\n\n            ## Stage 3: Face Restore\n            print(\"Running Stage 3: Face Enhancement\")\n            os.chdir(\"..\/.\/Face_Enhancement\")\n            stage_3_input_mask = \".\/\"\n            stage_3_input_face = stage_2_output_dir\n            stage_3_output_dir = os.path.join(","13":"Similar lines in 2 files\n==predict:172\n==run:166\n    run_cmd(stage_3_command)\n    print(\"Finish Stage 3 ...\")\n    print(\"\\n\")\n\n    ## Stage 4: Warp back\n    print(\"Running Stage 4: Blending\")\n    os.chdir(\"..\/.\/Face_Detection\")\n    stage_4_input_image_dir = os.path.join(stage_1_output_dir, \"restored_image\")\n    stage_4_input_face_dir = os.path.join(stage_3_output_dir, \"each_img\")","14":"Similar lines in 2 files\n==predict:142\n==run:124\n            run_cmd(stage_2_command)\n            print(\"Finish Stage 2 ...\")\n            print(\"\\n\")\n\n            ## Stage 3: Face Restore\n            print(\"Running Stage 3: Face Enhancement\")\n            os.chdir(\"..\/.\/Face_Enhancement\")\n            stage_3_input_mask = \".\/\"\n            stage_3_input_face = stage_2_output_dir","15":"Similar lines in 2 files\n==GUI:129\n==run:139\n    stage_3_command = (\n        \"python test_face.py --old_face_folder \"\n        + stage_3_input_face\n        + \" --old_face_label_folder \"\n        + stage_3_input_mask\n        + \" --tensorboard_log --name \"\n        + opts.checkpoint_name\n        + \" --gpu_ids \"\n        + gpu1","16":"Similar lines in 2 files\n==GUI:78\n==predict:99\n        stage_1_command_2 = (\n            \"python test.py --Scratch_and_Quality_restore --test_input \"\n            + new_input\n            + \" --test_mask \"\n            + new_mask\n            + \" --outputs_dir \"\n            + stage_1_output_dir\n            + \" --gpu_ids \"\n            + gpu1","17":"Similar lines in 2 files\n==predict:184\n==run:179\n        stage_4_command = (\n            \"python align_warp_back_multiple_dlib_HR.py --origin_url \"\n            + stage_4_input_image_dir\n            + \" --replace_url \"\n            + stage_4_input_face_dir\n            + \" --save_url \"\n            + stage_4_output_dir\n        )","18":"Similar lines in 3 files\n==GUI:78\n==predict:99\n==run:82\n        stage_1_command_2 = (\n            \"python test.py --Scratch_and_Quality_restore --test_input \"\n            + new_input\n            + \" --test_mask \"\n            + new_mask\n            + \" --outputs_dir \"\n            + stage_1_output_dir\n            + \" --gpu_ids \"","19":"Similar lines in 2 files\n==GUI:12\n==run:9\ndef run_cmd(command):\n    try:\n        call(command, shell=True)\n    except KeyboardInterrupt:\n        print(\"Process interrupted\")\n        sys.exit(1)\n","20":"Similar lines in 2 files\n==GUI:142\n==predict:172\n    run_cmd(stage_3_command)\n    print(\"Finish Stage 3 ...\")\n    print(\"\\n\")\n\n    # Stage 4: Warp back\n    print(\"Running Stage 4: Blending\")\n    os.chdir(\"..\/.\/Face_Detection\")","21":"Similar lines in 2 files\n==predict:165\n==run:146\n                    + \" --gpu_ids \"\n                    + gpu1\n                    + \" --load_size 512 --label_nc 18 --no_instance --preprocess_mode resize --batchSize 1 --results_dir \"\n                    + stage_3_output_dir\n                    + \" --no_parsing_map\"\n            )","22":"Similar lines in 2 files\n==GUI:22\n==run:20\n    parser.add_argument(\n        \"--output_folder\",\n        type=str,\n        default=\".\/output\",\n        help=\"Restored images, please use the absolute path\",\n    )","23":"Similar lines in 2 files\n==GUI:157\n==predict:186\n                    + stage_4_input_image_dir\n                    + \" --replace_url \"\n                    + stage_4_input_face_dir\n                    + \" --save_url \"\n                    + stage_4_output_dir\n            )","24":"Similar lines in 4 files\n==GUI:129\n==predict:158\n==run:139\n==run:153\n            stage_3_command = (\n                    \"python test_face.py --old_face_folder \"\n                    + stage_3_input_face\n                    + \" --old_face_label_folder \"\n                    + stage_3_input_mask\n                    + \" --tensorboard_log --name \""},"number":{"0":"W0201","1":"W0201","2":"R0801","3":"R0801","4":"R0801","5":"R0801","6":"R0801","7":"R0801","8":"R0801","9":"R0801","10":"R0801","11":"R0801","12":"R0801","13":"R0801","14":"R0801","15":"R0801","16":"R0801","17":"R0801","18":"R0801","19":"R0801","20":"R0801","21":"R0801","22":"R0801","23":"R0801","24":"R0801"},"linter":{"0":"pylint","1":"pylint","2":"pylint","3":"pylint","4":"pylint","5":"pylint","6":"pylint","7":"pylint","8":"pylint","9":"pylint","10":"pylint","11":"pylint","12":"pylint","13":"pylint","14":"pylint","15":"pylint","16":"pylint","17":"pylint","18":"pylint","19":"pylint","20":"pylint","21":"pylint","22":"pylint","23":"pylint","24":"pylint"},"lines_amount":{"0":223,"1":223,"2":203,"3":203,"4":203,"5":203,"6":203,"7":203,"8":203,"9":203,"10":203,"11":203,"12":203,"13":203,"14":203,"15":203,"16":203,"17":203,"18":203,"19":203,"20":203,"21":203,"22":203,"23":203,"24":203},"commit":{"0":"bce7d626d6af148b68c01d16dfa7e0fe349b779b","1":"bce7d626d6af148b68c01d16dfa7e0fe349b779b","2":"bce7d626d6af148b68c01d16dfa7e0fe349b779b","3":"bce7d626d6af148b68c01d16dfa7e0fe349b779b","4":"bce7d626d6af148b68c01d16dfa7e0fe349b779b","5":"bce7d626d6af148b68c01d16dfa7e0fe349b779b","6":"bce7d626d6af148b68c01d16dfa7e0fe349b779b","7":"bce7d626d6af148b68c01d16dfa7e0fe349b779b","8":"bce7d626d6af148b68c01d16dfa7e0fe349b779b","9":"bce7d626d6af148b68c01d16dfa7e0fe349b779b","10":"bce7d626d6af148b68c01d16dfa7e0fe349b779b","11":"bce7d626d6af148b68c01d16dfa7e0fe349b779b","12":"bce7d626d6af148b68c01d16dfa7e0fe349b779b","13":"bce7d626d6af148b68c01d16dfa7e0fe349b779b","14":"bce7d626d6af148b68c01d16dfa7e0fe349b779b","15":"bce7d626d6af148b68c01d16dfa7e0fe349b779b","16":"bce7d626d6af148b68c01d16dfa7e0fe349b779b","17":"bce7d626d6af148b68c01d16dfa7e0fe349b779b","18":"bce7d626d6af148b68c01d16dfa7e0fe349b779b","19":"bce7d626d6af148b68c01d16dfa7e0fe349b779b","20":"bce7d626d6af148b68c01d16dfa7e0fe349b779b","21":"bce7d626d6af148b68c01d16dfa7e0fe349b779b","22":"bce7d626d6af148b68c01d16dfa7e0fe349b779b","23":"bce7d626d6af148b68c01d16dfa7e0fe349b779b","24":"bce7d626d6af148b68c01d16dfa7e0fe349b779b"},"repo":{"0":"microsoft\/Bringing-Old-Photos-Back-to-Life","1":"microsoft\/Bringing-Old-Photos-Back-to-Life","2":"microsoft\/Bringing-Old-Photos-Back-to-Life","3":"microsoft\/Bringing-Old-Photos-Back-to-Life","4":"microsoft\/Bringing-Old-Photos-Back-to-Life","5":"microsoft\/Bringing-Old-Photos-Back-to-Life","6":"microsoft\/Bringing-Old-Photos-Back-to-Life","7":"microsoft\/Bringing-Old-Photos-Back-to-Life","8":"microsoft\/Bringing-Old-Photos-Back-to-Life","9":"microsoft\/Bringing-Old-Photos-Back-to-Life","10":"microsoft\/Bringing-Old-Photos-Back-to-Life","11":"microsoft\/Bringing-Old-Photos-Back-to-Life","12":"microsoft\/Bringing-Old-Photos-Back-to-Life","13":"microsoft\/Bringing-Old-Photos-Back-to-Life","14":"microsoft\/Bringing-Old-Photos-Back-to-Life","15":"microsoft\/Bringing-Old-Photos-Back-to-Life","16":"microsoft\/Bringing-Old-Photos-Back-to-Life","17":"microsoft\/Bringing-Old-Photos-Back-to-Life","18":"microsoft\/Bringing-Old-Photos-Back-to-Life","19":"microsoft\/Bringing-Old-Photos-Back-to-Life","20":"microsoft\/Bringing-Old-Photos-Back-to-Life","21":"microsoft\/Bringing-Old-Photos-Back-to-Life","22":"microsoft\/Bringing-Old-Photos-Back-to-Life","23":"microsoft\/Bringing-Old-Photos-Back-to-Life","24":"microsoft\/Bringing-Old-Photos-Back-to-Life"},"stargazers":{"0":9181,"1":9181,"2":9181,"3":9181,"4":9181,"5":9181,"6":9181,"7":9181,"8":9181,"9":9181,"10":9181,"11":9181,"12":9181,"13":9181,"14":9181,"15":9181,"16":9181,"17":9181,"18":9181,"19":9181,"20":9181,"21":9181,"22":9181,"23":9181,"24":9181}}